{"0":{"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v2","table_id":"energy_contracts_consumption_charge_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_consumption_charge_generated_v2`"},"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v3","table_id":"energy_contracts_consumption_charge_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_consumption_charge_generated_v3`"},"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v6","table_id":"energy_contracts_consumption_charge_generated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_consumption_charge_generated_v6`"},"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v7","table_id":"energy_contracts_consumption_charge_generated_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_consumption_charge_generated_v7`"},"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v8":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_consumption_charge_generated_v8","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v8","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_consumption_charge_generated_v8","table_id":"energy_contracts_consumption_charge_generated_v8","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_consumption_charge_generated_v8`"},"data-engineering-prod:landing_andromeda.energy_contracts_contract_created_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_contract_created_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_created_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_created_v1","table_id":"energy_contracts_contract_created_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `contractId`,\n  `unitRate`,\n  `startDate`,\n  `expiryDate`,\n  `standingRate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_contract_created_v1`"},"data-engineering-prod:landing_andromeda.energy_contracts_contract_created_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_contract_created_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_created_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_created_v2","table_id":"energy_contracts_contract_created_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `contractId`,\n  `unitRate`,\n  `startDate`,\n  `expiryDate`,\n  `standingRate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_contract_created_v2`"},"data-engineering-prod:landing_andromeda.energy_contracts_contract_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_contract_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_v1","table_id":"energy_contracts_contract_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_contract_v1`"},"data-engineering-prod:landing_andromeda.energy_contracts_contract_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_contract_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_contract_v2","table_id":"energy_contracts_contract_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_contract_v2`"},"data-engineering-prod:landing_andromeda.energy_contracts_electricity_consumption_charge_created_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_electricity_consumption_charge_created_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_electricity_consumption_charge_created_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_electricity_consumption_charge_created_v2","table_id":"energy_contracts_electricity_consumption_charge_created_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `from`,\n  `to`,\n  `consumption`,\n  `amount`,\n  `serviceAccountId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_electricity_consumption_charge_created_v2`"},"data-engineering-prod:landing_andromeda.energy_contracts_electricity_consumption_charge_created_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_electricity_consumption_charge_created_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_electricity_consumption_charge_created_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_electricity_consumption_charge_created_v3","table_id":"energy_contracts_electricity_consumption_charge_created_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `chargeId`,\n  `from`,\n  `to`,\n  `consumption`,\n  `unitRate`,\n  `amount`,\n  `serviceAccountId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_electricity_consumption_charge_created_v3`"},"data-engineering-prod:landing_andromeda.energy_contracts_gas_consumption_charge_created_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_gas_consumption_charge_created_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_gas_consumption_charge_created_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_gas_consumption_charge_created_v3","table_id":"energy_contracts_gas_consumption_charge_created_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `from`,\n  `to`,\n  `consumption`,\n  `amount`,\n  `consumptionId`,\n  `serviceAccountId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_gas_consumption_charge_created_v3`"},"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v1","table_id":"energy_contracts_standing_charge_created_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `contractId`,\n  `amount`,\n  `chargeDate`,\n  `fuel`,\n  `standingChargeId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_standing_charge_created_v1`"},"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v2","table_id":"energy_contracts_standing_charge_created_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_standing_charge_created_v2`"},"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v3","table_id":"energy_contracts_standing_charge_created_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_standing_charge_created_v3`"},"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v4","table_id":"energy_contracts_standing_charge_created_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_standing_charge_created_v4`"},"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.energy_contracts_standing_charge_created_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/energy_contracts_standing_charge_created_v5","table_id":"energy_contracts_standing_charge_created_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.energy_contracts_standing_charge_created_v5`"},"data-engineering-prod:landing_andromeda.live_cad_consumption_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.live_cad_consumption_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/live_cad_consumption_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/live_cad_consumption_v1","table_id":"live_cad_consumption_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `serverTime`,\n  `cadTime`,\n  `meterTime`,\n  `unit`,\n  `cumulativeConsumption`,\n  `instantConsumption`,\n  `siteId`,\n  `cadGid`,\n  `energyType`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.live_cad_consumption_v1`"},"data-engineering-prod:landing_andromeda.live_cad_pricing_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.live_cad_pricing_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/live_cad_pricing_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/live_cad_pricing_v1","table_id":"live_cad_pricing_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `startDate`,\n  `currency`,\n  `amount`,\n  `siteId`,\n  `cadGid`,\n  `energyType`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.live_cad_pricing_v1`"},"data-engineering-prod:landing_andromeda.losses_consumer_status_update_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.losses_consumer_status_update_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_consumer_status_update_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_consumer_status_update_v3","table_id":"losses_consumer_status_update_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `eventId`,\n  `createdAt`,\n  `traceToken`,\n  `globalConsumerId`,\n  `consumerStatus`,\n  `entryDate`,\n  `finalDate`,\n  `installationIdentifier`,\n  `utilityType`,\n  `accountGlobalId`,\n  `customerGlobalId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.losses_consumer_status_update_v3`"},"data-engineering-prod:landing_andromeda.losses_loss_cancelled_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.losses_loss_cancelled_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_cancelled_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_cancelled_v1","table_id":"losses_loss_cancelled_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `eventId`,\n  `createdAt`,\n  `traceToken`,\n  `globalConsumerId`,\n  `consumerStatus`,\n  `entryDate`,\n  `installationIdentifier`,\n  `utilityType`,\n  `accountGlobalId`,\n  `customerGlobalId`,\n  `accountId`,\n  `lossCancelledDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.losses_loss_cancelled_v1`"},"data-engineering-prod:landing_andromeda.losses_loss_created_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.losses_loss_created_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_created_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_created_v1","table_id":"losses_loss_created_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `eventId`,\n  `createdAt`,\n  `traceToken`,\n  `globalConsumerId`,\n  `consumerStatus`,\n  `entryDate`,\n  `installationIdentifier`,\n  `utilityType`,\n  `accountGlobalId`,\n  `customerGlobalId`,\n  `accountId`,\n  `newSupplier`,\n  `lossReceived`,\n  `proposedDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.losses_loss_created_v1`"},"data-engineering-prod:landing_andromeda.losses_loss_objection_cancelled_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.losses_loss_objection_cancelled_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_objection_cancelled_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_objection_cancelled_v1","table_id":"losses_loss_objection_cancelled_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `eventId`,\n  `createdAt`,\n  `traceToken`,\n  `globalConsumerId`,\n  `consumerStatus`,\n  `entryDate`,\n  `installationIdentifier`,\n  `utilityType`,\n  `accountGlobalId`,\n  `customerGlobalId`,\n  `accountId`,\n  `dateOfObjectionRejected`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.losses_loss_objection_cancelled_v1`"},"data-engineering-prod:landing_andromeda.losses_loss_objection_completed_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.losses_loss_objection_completed_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_objection_completed_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_objection_completed_v1","table_id":"losses_loss_objection_completed_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `eventId`,\n  `createdAt`,\n  `traceToken`,\n  `globalConsumerId`,\n  `consumerStatus`,\n  `entryDate`,\n  `installationIdentifier`,\n  `utilityType`,\n  `accountGlobalId`,\n  `customerGlobalId`,\n  `accountId`,\n  `dateOfObjectionUpheld`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.losses_loss_objection_completed_v1`"},"data-engineering-prod:landing_andromeda.losses_loss_objection_created_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.losses_loss_objection_created_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_objection_created_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/losses_loss_objection_created_v1","table_id":"losses_loss_objection_created_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `eventId`,\n  `createdAt`,\n  `traceToken`,\n  `globalConsumerId`,\n  `consumerStatus`,\n  `entryDate`,\n  `installationIdentifier`,\n  `utilityType`,\n  `accountGlobalId`,\n  `customerGlobalId`,\n  `accountId`,\n  `objectionReason`,\n  `dateOfObjection`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.losses_loss_objection_created_v1`"},"data-engineering-prod:landing_andromeda.rac_andromeda_import_msd_published_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_andromeda_import_msd_published_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_andromeda_import_msd_published_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_andromeda_import_msd_published_v1","table_id":"rac_andromeda_import_msd_published_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_andromeda_import_msd_published_v1`"},"data-engineering-prod:landing_andromeda.rac_blacklisted_meters_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_blacklisted_meters_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_blacklisted_meters_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_blacklisted_meters_v1","table_id":"rac_blacklisted_meters_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `snapshotTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_blacklisted_meters_v1`"},"data-engineering-prod:landing_andromeda.rac_calorific_value_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_calorific_value_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_calorific_value_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_calorific_value_received_v1","table_id":"rac_calorific_value_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `chargingZone`,\n  `generationTimestamp`,\n  `applicableGasDay`,\n  `value`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_calorific_value_received_v1`"},"data-engineering-prod:landing_andromeda.rac_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_consumption_generated_v3","table_id":"rac_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `from`,\n  `to`,\n  `consumption`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda.rac_consumption_generated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_consumption_generated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_consumption_generated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_consumption_generated_v4","table_id":"rac_consumption_generated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `consumptionId`,\n  `mpan`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_consumption_generated_v4`"},"data-engineering-prod:landing_andromeda.rac_consumption_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_consumption_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_consumption_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_consumption_generated_v5","table_id":"rac_consumption_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `consumptionId`,\n  `mpan`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_consumption_generated_v5`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v2","table_id":"rac_flow_d0010_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v2`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v4","table_id":"rac_flow_d0010_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v4`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v5","table_id":"rac_flow_d0010_received_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v5`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v6","table_id":"rac_flow_d0010_received_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v6`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v7","table_id":"rac_flow_d0010_received_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v7`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v8":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v8","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v8","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v8","table_id":"rac_flow_d0010_received_v8","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v8`"},"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v9":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0010_received_v9","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v9","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0010_received_v9","table_id":"rac_flow_d0010_received_v9","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0010_received_v9`"},"data-engineering-prod:landing_andromeda.rac_flow_d0019_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0019_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0019_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0019_received_v1","table_id":"rac_flow_d0019_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `fileSequenceNumber`,\n  `instructionHeader`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0019_received_v1`"},"data-engineering-prod:landing_andromeda.rac_flow_d0019_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0019_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0019_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0019_received_v2","table_id":"rac_flow_d0019_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0019_received_v2`"},"data-engineering-prod:landing_andromeda.rac_flow_d0086_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0086_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0086_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0086_received_v2","table_id":"rac_flow_d0086_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0086_received_v2`"},"data-engineering-prod:landing_andromeda.rac_flow_d0086_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0086_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0086_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0086_received_v3","table_id":"rac_flow_d0086_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0086_received_v3`"},"data-engineering-prod:landing_andromeda.rac_flow_d0086_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0086_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0086_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0086_received_v4","table_id":"rac_flow_d0086_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0086_received_v4`"},"data-engineering-prod:landing_andromeda.rac_flow_d0149_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0149_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0149_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0149_received_v3","table_id":"rac_flow_d0149_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0149_received_v3`"},"data-engineering-prod:landing_andromeda.rac_flow_d0149_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0149_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0149_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0149_received_v4","table_id":"rac_flow_d0149_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0149_received_v4`"},"data-engineering-prod:landing_andromeda.rac_flow_d0150_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0150_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0150_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0150_received_v3","table_id":"rac_flow_d0150_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0150_received_v3`"},"data-engineering-prod:landing_andromeda.rac_flow_d0150_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0150_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0150_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0150_received_v4","table_id":"rac_flow_d0150_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0150_received_v4`"},"data-engineering-prod:landing_andromeda.rac_flow_d0150_received_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0150_received_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0150_received_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0150_received_v5","table_id":"rac_flow_d0150_received_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0150_received_v5`"},"data-engineering-prod:landing_andromeda.rac_flow_d0188_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0188_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0188_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0188_received_v1","table_id":"rac_flow_d0188_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0188_received_v1`"},"data-engineering-prod:landing_andromeda.rac_flow_d0188_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0188_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0188_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0188_received_v2","table_id":"rac_flow_d0188_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0188_received_v2`"},"data-engineering-prod:landing_andromeda.rac_flow_d0188_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0188_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0188_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0188_received_v3","table_id":"rac_flow_d0188_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0188_received_v3`"},"data-engineering-prod:landing_andromeda.rac_flow_d0217_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0217_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0217_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0217_received_v2","table_id":"rac_flow_d0217_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `fileSequenceNumber`,\n  `registrationConfirmationDetails`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0217_received_v2`"},"data-engineering-prod:landing_andromeda.rac_flow_d0303_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0303_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0303_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0303_received_v3","table_id":"rac_flow_d0303_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `meterOperatorId`,\n  `notificationOfChangeToRelevantMopAppointment`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0303_received_v3`"},"data-engineering-prod:landing_andromeda.rac_flow_d0303_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0303_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0303_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0303_received_v4","table_id":"rac_flow_d0303_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `meterOperatorId`,\n  `notificationOfChangeToRelevantMopAppointment`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0303_received_v4`"},"data-engineering-prod:landing_andromeda.rac_flow_d0303_received_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0303_received_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0303_received_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0303_received_v5","table_id":"rac_flow_d0303_received_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `meterOperatorId`,\n  `notificationOfChangeToRelevantMopAppointment`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0303_received_v5`"},"data-engineering-prod:landing_andromeda.rac_flow_d0311_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0311_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0311_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0311_received_v3","table_id":"rac_flow_d0311_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0311_received_v3`"},"data-engineering-prod:landing_andromeda.rac_flow_d0311_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_d0311_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0311_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_d0311_received_v4","table_id":"rac_flow_d0311_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_d0311_received_v4`"},"data-engineering-prod:landing_andromeda.rac_flow_mri_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_mri_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_mri_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_mri_received_v1","table_id":"rac_flow_mri_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_mri_received_v1`"},"data-engineering-prod:landing_andromeda.rac_flow_mri_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_mri_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_mri_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_mri_received_v2","table_id":"rac_flow_mri_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_mri_received_v2`"},"data-engineering-prod:landing_andromeda.rac_flow_nrl_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_nrl_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_nrl_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_nrl_received_v1","table_id":"rac_flow_nrl_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `trailer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_nrl_received_v1`"},"data-engineering-prod:landing_andromeda.rac_flow_trf_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_flow_trf_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_trf_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_flow_trf_received_v1","table_id":"rac_flow_trf_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `trailer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_flow_trf_received_v1`"},"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v1","table_id":"rac_gasVolume_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `from`,\n  `to`,\n  `volume`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gasVolume_generated_v1`"},"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v2","table_id":"rac_gasVolume_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gasVolume_generated_v2`"},"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v3","table_id":"rac_gasVolume_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gasVolume_generated_v3`"},"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gasVolume_generated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gasVolume_generated_v4","table_id":"rac_gasVolume_generated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gasVolume_generated_v4`"},"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v1","table_id":"rac_gas_consumption_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_consumption_generated_v1`"},"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v2","table_id":"rac_gas_consumption_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_consumption_generated_v2`"},"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v3","table_id":"rac_gas_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v4","table_id":"rac_gas_consumption_generated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_consumption_generated_v4`"},"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_consumption_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_consumption_generated_v5","table_id":"rac_gas_consumption_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_consumption_generated_v5`"},"data-engineering-prod:landing_andromeda.rac_gas_settlement_candidates_dispatched_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_settlement_candidates_dispatched_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_settlement_candidates_dispatched_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_settlement_candidates_dispatched_v1","table_id":"rac_gas_settlement_candidates_dispatched_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowFileName`,\n  `flowFileHeader`,\n  `flowTypeAndDestination`,\n  `requestedTransactionId`,\n  `meterReadingSource`,\n  `meterReadingReason`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_settlement_candidates_dispatched_v1`"},"data-engineering-prod:landing_andromeda.rac_gas_settlement_candidates_selected_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_settlement_candidates_selected_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_settlement_candidates_selected_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_settlement_candidates_selected_v1","table_id":"rac_gas_settlement_candidates_selected_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `mprn`,\n  `readingDateAndTime`,\n  `reading`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_settlement_candidates_selected_v1`"},"data-engineering-prod:landing_andromeda.rac_gas_settlement_candidates_unmatched_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_gas_settlement_candidates_unmatched_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_settlement_candidates_unmatched_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_gas_settlement_candidates_unmatched_v1","table_id":"rac_gas_settlement_candidates_unmatched_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `error`,\n  `midnightSnapshot`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_gas_settlement_candidates_unmatched_v1`"},"data-engineering-prod:landing_andromeda.rac_hh_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_hh_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_hh_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_hh_received_v1","table_id":"rac_hh_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `profileData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_hh_received_v1`"},"data-engineering-prod:landing_andromeda.rac_hh_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_hh_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_hh_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_hh_received_v2","table_id":"rac_hh_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `profileData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_hh_received_v2`"},"data-engineering-prod:landing_andromeda.rac_industry_estimate_updated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_industry_estimate_updated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_industry_estimate_updated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_industry_estimate_updated_v1","table_id":"rac_industry_estimate_updated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `fuel`,\n  `effectiveFrom`,\n  `forecastedAnnualConsumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_industry_estimate_updated_v1`"},"data-engineering-prod:landing_andromeda.rac_industry_estimate_updated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_industry_estimate_updated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_industry_estimate_updated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_industry_estimate_updated_v2","table_id":"rac_industry_estimate_updated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `fuel`,\n  `effectiveFrom`,\n  `forecastedAnnualConsumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_industry_estimate_updated_v2`"},"data-engineering-prod:landing_andromeda.rac_meterReadingCommand_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_meterReadingCommand_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReadingCommand_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReadingCommand_v2","table_id":"rac_meterReadingCommand_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_meterReadingCommand_v2`"},"data-engineering-prod:landing_andromeda.rac_meterReading_normalized_errors_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_meterReading_normalized_errors_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_normalized_errors_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_normalized_errors_v2","table_id":"rac_meterReading_normalized_errors_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_meterReading_normalized_errors_v2`"},"data-engineering-prod:landing_andromeda.rac_meterReading_normalized_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_meterReading_normalized_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_normalized_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_normalized_v2","table_id":"rac_meterReading_normalized_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_meterReading_normalized_v2`"},"data-engineering-prod:landing_andromeda.rac_meterReading_settled_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_meterReading_settled_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_settled_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_settled_v2","table_id":"rac_meterReading_settled_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_meterReading_settled_v2`"},"data-engineering-prod:landing_andromeda.rac_meterReading_validated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_meterReading_validated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_validated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_meterReading_validated_v2","table_id":"rac_meterReading_validated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_meterReading_validated_v2`"},"data-engineering-prod:landing_andromeda.rac_msd_noEventsNotification_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_noEventsNotification_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_noEventsNotification_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_noEventsNotification_v1","table_id":"rac_msd_noEventsNotification_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `messageId`,\n  `messageBody`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_noEventsNotification_v1`"},"data-engineering-prod:landing_andromeda.rac_msd_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v1","table_id":"rac_msd_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_received_v1`"},"data-engineering-prod:landing_andromeda.rac_msd_received_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_received_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v2","table_id":"rac_msd_received_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_received_v2`"},"data-engineering-prod:landing_andromeda.rac_msd_received_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_received_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v3","table_id":"rac_msd_received_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_received_v3`"},"data-engineering-prod:landing_andromeda.rac_msd_received_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_received_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v4","table_id":"rac_msd_received_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_received_v4`"},"data-engineering-prod:landing_andromeda.rac_msd_received_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_received_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v5","table_id":"rac_msd_received_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_received_v5`"},"data-engineering-prod:landing_andromeda.rac_msd_received_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_received_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_received_v6","table_id":"rac_msd_received_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_received_v6`"},"data-engineering-prod:landing_andromeda.rac_msd_simplified_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_simplified_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_simplified_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_simplified_v2","table_id":"rac_msd_simplified_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_simplified_v2`"},"data-engineering-prod:landing_andromeda.rac_msd_stripped_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_msd_stripped_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_stripped_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_msd_stripped_v1","table_id":"rac_msd_stripped_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_msd_stripped_v1`"},"data-engineering-prod:landing_andromeda.rac_orion_estimate_missing_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_orion_estimate_missing_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_estimate_missing_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_estimate_missing_v1","table_id":"rac_orion_estimate_missing_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `fuel`,\n  `contractId`,\n  `serviceAccountId`,\n  `startDate`,\n  `expiryDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_orion_estimate_missing_v1`"},"data-engineering-prod:landing_andromeda.rac_orion_estimate_updated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_orion_estimate_updated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_estimate_updated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_estimate_updated_v1","table_id":"rac_orion_estimate_updated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `fuel`,\n  `source`,\n  `effectiveFrom`,\n  `forecastedAnnualConsumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_orion_estimate_updated_v1`"},"data-engineering-prod:landing_andromeda.rac_orion_estimate_updated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_orion_estimate_updated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_estimate_updated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_estimate_updated_v2","table_id":"rac_orion_estimate_updated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `fuel`,\n  `effectiveFrom`,\n  `forecastedAnnualConsumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_orion_estimate_updated_v2`"},"data-engineering-prod:landing_andromeda.rac_orion_personal_projections_published_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_orion_personal_projections_published_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_personal_projections_published_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_orion_personal_projections_published_v2","table_id":"rac_orion_personal_projections_published_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_orion_personal_projections_published_v2`"},"data-engineering-prod:landing_andromeda.rac_personal_projections_calculated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_personal_projections_calculated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_personal_projections_calculated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_personal_projections_calculated_v1","table_id":"rac_personal_projections_calculated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_personal_projections_calculated_v1`"},"data-engineering-prod:landing_andromeda.rac_personal_projections_calculated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_personal_projections_calculated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_personal_projections_calculated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_personal_projections_calculated_v3","table_id":"rac_personal_projections_calculated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_personal_projections_calculated_v3`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_dispatched_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_dispatched_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_dispatched_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_dispatched_v2","table_id":"rac_settlement_candidates_dispatched_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowFileName`,\n  `flowFileHeader`,\n  `flowFileFooter`,\n  `bscValidationStatus`,\n  `readingType`,\n  `readingMethod`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_dispatched_v2`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_selected_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_selected_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_selected_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_selected_v1","table_id":"rac_settlement_candidates_selected_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `mpan`,\n  `readingDateAndTime`,\n  `ssc`,\n  `effectiveFromSettlementDateScon`,\n  `readings`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_selected_v1`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_selected_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_selected_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_selected_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_selected_v2","table_id":"rac_settlement_candidates_selected_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `mpan`,\n  `readingDateAndTime`,\n  `ssc`,\n  `effectiveFromSettlementDateScon`,\n  `readings`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_selected_v2`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_selected_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_selected_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_selected_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_selected_v3","table_id":"rac_settlement_candidates_selected_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `mpan`,\n  `readingDateAndTime`,\n  `ssc`,\n  `effectiveFromSettlementDateScon`,\n  `readings`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_selected_v3`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_unmatched_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_unmatched_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_unmatched_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_unmatched_v1","table_id":"rac_settlement_candidates_unmatched_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `error`,\n  `midnightSnapshot`,\n  `meterDetails`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_unmatched_v1`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_unmatched_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_unmatched_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_unmatched_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_unmatched_v2","table_id":"rac_settlement_candidates_unmatched_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `error`,\n  `midnightSnapshot`,\n  `meterDetails`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_unmatched_v2`"},"data-engineering-prod:landing_andromeda.rac_settlement_candidates_unmatched_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.rac_settlement_candidates_unmatched_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_unmatched_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/rac_settlement_candidates_unmatched_v3","table_id":"rac_settlement_candidates_unmatched_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `error`,\n  `midnightSnapshot`,\n  `meterDetails`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.rac_settlement_candidates_unmatched_v3`"},"data-engineering-prod:landing_andromeda.spam_electricitySupplyPoint_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.spam_electricitySupplyPoint_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/spam_electricitySupplyPoint_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/spam_electricitySupplyPoint_v1","table_id":"spam_electricitySupplyPoint_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `addressLines`,\n  `postCode`,\n  `kafkaData`,\n  `MSN`,\n  `lineLossFactorClassId`,\n  `gspGroupId`,\n  `meterTimeswitchCode`,\n  `profileClassId`,\n  `supplyHistory`,\n  `supplyStatus`,\n  `supplyPointType`,\n  `meterRegisterHistory`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.spam_electricitySupplyPoint_v1`"},"data-engineering-prod:landing_andromeda.spam_gasSupplyPoint_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.spam_gasSupplyPoint_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/spam_gasSupplyPoint_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/spam_gasSupplyPoint_v1","table_id":"spam_gasSupplyPoint_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `addressLines`,\n  `postCode`,\n  `LDZ`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.spam_gasSupplyPoint_v1`"},"data-engineering-prod:landing_andromeda.spam_gasSupplyPoint_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda.spam_gasSupplyPoint_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/spam_gasSupplyPoint_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda\/tables\/spam_gasSupplyPoint_v2","table_id":"spam_gasSupplyPoint_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `MSN`,\n  `addressLines`,\n  `postCode`,\n  `LDZ`,\n  `kafkaData`,\n  `supplyHistory`,\n  `supplyStatus`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2.spam_gasSupplyPoint_v2`"},"data-engineering-prod:landing_andromeda_secure.2019_11_rebill_list_patchy_comms":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.2019_11_rebill_list_patchy_comms","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/2019_11_rebill_list_patchy_comms","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/2019_11_rebill_list_patchy_comms","table_id":"2019_11_rebill_list_patchy_comms","time_partitioning":null,"view_query":"WITH fetch_reads AS (\n  SELECT\n    rds.*\n  FROM\n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads` AS rds\n  INNER JOIN\n    --`data-engineering-prod.u_barney_scott.non_comms_billing_base_data_earliest_reads` earliest_read\n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_earliest_read_since_gt_bill` earliest_read\n      ON  rds.msn = earliest_read.msn\n      AND rds.readDateTime = earliest_read.readDateTime\n), mapped_elec AS (\n  SELECT\n     elec.msn\n    ,elec.fuel\n    ,elec.readDateTime\n    ,elec.tier\n    --,map.clockingTimeId\n    ,map.meterRegisterId\n    ,FLOOR(elec.reading) AS reading\n  FROM\n    fetch_reads AS elec\n  INNER JOIN\n    `data-engineering-prod.u_barney_scott.2019_10_28_meter_mappings` AS map\n      ON  elec.msn = map.msn\n      AND elec.tier = map.tier\n  WHERE\n    elec.fuel = 'electricity'\n    AND clockingTimeId = 1 -- single rate, to be sure\n), adj_elec AS (\n  SELECT\n       gt.msn\n      ,gt.accountNumber\n      ,gt.consumerNumber\n      ,invoiceId\n      ,statementId\n      ,fuel\n      ,gt.migrationRead\n      ,gt.migrationReadDate\n      ,gt.migrationReadType\n      --,gt.meterRegisterId\n      ,chg.readDateTime\n      ,chg.reading\n      ,CASE\n        WHEN gt.migrationRead < chg.reading - 30 THEN 'charge greater than \u00a35'\n        WHEN gt.migrationRead >= chg.reading - 30 AND gt.migrationRead < chg.reading THEN 'charge less than \u00a35'       \n        WHEN gt.migrationRead > chg.reading + 30 THEN 'credit greater than \u00a35' \n        WHEN gt.migrationRead <= chg.reading + 30 AND gt.migrationRead > chg.reading + 1 THEN 'credit less than \u00a35'       \n        ELSE 'equal' END AS adjustmentType\n      ,ROUND(gt.migrationRead - chg.reading, 1) AS consumptionAdjustment\n      ,DATE_DIFF(DATE(chg.readDateTime), gt.migrationReadDate, DAY) AS adjustmentDays\n  FROM \n    `data-engineering-prod.u_barney_scott.non_comms_billing_base_data_gt_single_rate_only` AS gt\n  INNER JOIN\n    mapped_elec AS chg\n      ON  gt.msn = chg.msn\n      AND gt.meterRegisterId = chg.meterRegisterId\n      AND gt.migrationReadDate <= DATE(chg.readDateTime)\n), adj_gas AS (\n  SELECT\n       gt.msn\n      ,gt.accountNumber\n      ,gt.consumerNumber\n      ,invoiceId\n      ,statementId\n      ,fuel\n      ,gt.migrationRead\n      ,gt.migrationReadDate\n      ,gt.migrationReadType\n      ,chg.readDateTime\n      ,FLOOR(chg.reading) AS reading\n      ,CASE\n        WHEN gt.migrationRead < FLOOR(chg.reading) - 30 THEN 'charge greater than \u00a35'\n        WHEN gt.migrationRead >= FLOOR(chg.reading) - 30 AND gt.migrationRead < FLOOR(chg.reading) THEN 'charge less than \u00a35'       \n        WHEN gt.migrationRead > FLOOR(chg.reading) + 30 THEN 'credit greater than \u00a35' \n        WHEN gt.migrationRead <= FLOOR(chg.reading) + 30 AND gt.migrationRead > FLOOR(chg.reading) + 1 THEN 'credit less than \u00a35'       \n        ELSE 'equal' END AS adjustmentType\n      ,ROUND(gt.migrationRead - FLOOR(chg.reading), 1) AS consumptionAdjustment\n      ,DATE_DIFF(DATE(chg.readDateTime), gt.migrationReadDate, DAY) AS adjustmentDays\n  FROM \n    `data-engineering-prod.u_barney_scott.non_comms_billing_base_data_gt_single_rate_only` AS gt\n  INNER JOIN\n    fetch_reads AS chg\n      ON  gt.msn = chg.msn\n      AND gt.migrationReadDate <= DATE(chg.readDateTime)\n  WHERE chg.fuel = 'gas'\n), main AS (\n    SELECT ae.* FROM adj_elec ae\n    INNER JOIN `data-engineering-prod.u_barney_scott.non_comms_billing_base_data_eligible` e ON e.accountNumber = ae.accountNumber\n    LEFT JOIN  `data-engineering-prod.u_barney_scott.2019_11_late_stage_collections` c ON c.account_No = CAST(ae.accountNumber AS INT64)\n    WHERE adjustmentDays = 0 AND adjustmentType <> 'equal'\n    AND c.account_No IS NULL\n    UNION DISTINCT\n    SELECT ag.* FROM adj_gas ag\n    INNER JOIN `data-engineering-prod.u_barney_scott.non_comms_billing_base_data_eligible` e ON e.accountNumber = ag.accountNumber\n    LEFT JOIN  `data-engineering-prod.u_barney_scott.2019_11_late_stage_collections` c ON c.account_No = CAST(ag.accountNumber AS INT64)\n    WHERE adjustmentDays = 0 AND adjustmentType <> 'equal'\n    AND c.account_No IS NULL\n)\nSELECT \n  accountNumber\n  ,msn\n  ,fuel\n  ,consumerNumber\n  ,invoiceId\n  ,statementId\n  ,migrationRead AS gentrackBilledRead\n  ,migrationReadDate AS gentrackBilledDate\n  ,migrationReadType AS gentrackBilledReadType\n  ,reading AS smartReading\n  ,readDateTime AS smartReadDateTime\n  ,consumptionAdjustment AS readDifference\n  ,COUNT(msn) OVER(PARTITION BY accountNumber) AS totalMetersOnThisAccount\nFROM \n  main \nWHERE\n  migrationReadDate >= DATE_ADD(CURRENT_DATE(), INTERVAL -2 MONTH)\nORDER By \n  accountNumber\n"},"data-engineering-prod:landing_andromeda_secure.big_query_jt":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.big_query_jt","location":"EU","num_bytes":17228730,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/big_query_jt","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/big_query_jt","table_id":"big_query_jt","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.collections_extract":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.collections_extract","location":"EU","num_bytes":38236014,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/collections_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/collections_extract","table_id":"collections_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.collections_extract_updates":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.collections_extract_updates","location":"EU","num_bytes":1235847,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/collections_extract_updates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/collections_extract_updates","table_id":"collections_extract_updates","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.complaints_extract":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.complaints_extract","location":"EU","num_bytes":1185845,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/complaints_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/complaints_extract","table_id":"complaints_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.complaints_extract_updates":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.complaints_extract_updates","location":"EU","num_bytes":2188,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/complaints_extract_updates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/complaints_extract_updates","table_id":"complaints_extract_updates","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v1","table_id":"energy_contracts_annual_cost_projections_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `profileClass`,\n  `region`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `fuel`,\n  `annualTariffCosts`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_annual_cost_projections_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v2","table_id":"energy_contracts_annual_cost_projections_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `profileClass`,\n  `region`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `fuel`,\n  `annualTariffCosts`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_annual_cost_projections_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v3","table_id":"energy_contracts_annual_cost_projections_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `profileClass`,\n  `region`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `fuel`,\n  `annualTariffCosts`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_annual_cost_projections_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v4","table_id":"energy_contracts_annual_cost_projections_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `profileClass`,\n  `region`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `fuel`,\n  `annualTariffCosts`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_annual_cost_projections_v4`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v5","table_id":"energy_contracts_annual_cost_projections_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `profileClass`,\n  `region`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `fuel`,\n  `annualTariffCosts`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_annual_cost_projections_v5`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_annual_cost_projections_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_annual_cost_projections_v6","table_id":"energy_contracts_annual_cost_projections_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `profileClass`,\n  `region`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `fuel`,\n  `annualTariffCosts`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_annual_cost_projections_v6`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_consumption_charge_generated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_consumption_charge_generated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated_v4","table_id":"energy_contracts_consumption_charge_generated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_consumption_charge_generated_v4`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_consumption_charge_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_consumption_charge_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated_v5","table_id":"energy_contracts_consumption_charge_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_consumption_charge_generated_v5`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_created_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_created_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_created_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_created_v2","table_id":"energy_contracts_contract_created_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `contractId`,\n  `unitRate`,\n  `startDate`,\n  `expiryDate`,\n  `standingRate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_contract_created_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_schedule_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_schedule_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_schedule_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_schedule_v1","table_id":"energy_contracts_contract_schedule_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `versionId`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `id`,\n  `action`,\n  `schedule`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_contract_schedule_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v1","table_id":"energy_contracts_contract_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_contract_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v2","table_id":"energy_contracts_contract_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_contract_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v3","table_id":"energy_contracts_contract_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_contract_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_contract_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_contract_v4","table_id":"energy_contracts_contract_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `contractId`,\n  `startDate`,\n  `endDate`,\n  `customerContractStartDate`,\n  `customerContractExpiryDate`,\n  `lossConfirmed`,\n  `tariffId`,\n  `tags`,\n  `cancelled`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_contract_v4`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_electricity_consumption_charge_created_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_electricity_consumption_charge_created_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_electricity_consumption_charge_created_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_electricity_consumption_charge_created_v2","table_id":"energy_contracts_electricity_consumption_charge_created_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `from`,\n  `to`,\n  `consumption`,\n  `amount`,\n  `serviceAccountId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_electricity_consumption_charge_created_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_electricity_consumption_charge_created_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_electricity_consumption_charge_created_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_electricity_consumption_charge_created_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_electricity_consumption_charge_created_v3","table_id":"energy_contracts_electricity_consumption_charge_created_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `chargeId`,\n  `from`,\n  `to`,\n  `consumption`,\n  `unitRate`,\n  `amount`,\n  `serviceAccountId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_electricity_consumption_charge_created_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_gas_consumption_charge_created_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_gas_consumption_charge_created_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_gas_consumption_charge_created_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_gas_consumption_charge_created_v3","table_id":"energy_contracts_gas_consumption_charge_created_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyPoint`,\n  `from`,\n  `to`,\n  `consumption`,\n  `amount`,\n  `consumptionId`,\n  `serviceAccountId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_gas_consumption_charge_created_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_price_change_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_price_change_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_price_change_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_price_change_v1","table_id":"energy_contracts_price_change_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `description`,\n  `createdDate`,\n  `effectiveDate`,\n  `type`,\n  `success`,\n  `failure`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_price_change_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v2","table_id":"energy_contracts_standing_charge_created_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_standing_charge_created_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v3","table_id":"energy_contracts_standing_charge_created_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_standing_charge_created_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v4","table_id":"energy_contracts_standing_charge_created_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `kafkaData`,\n  `unionRecord`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_standing_charge_created_v4`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_standing_charge_created_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_standing_charge_created_v5","table_id":"energy_contracts_standing_charge_created_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_standing_charge_created_v5`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_cost_errors":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_cost_errors","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_cost_errors","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_cost_errors","table_id":"energy_contracts_supply_point_tariff_cost_errors","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `error`,\n  `message`,\n  `mpxn`,\n  `accountId`,\n  `contractId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_cost_errors`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_testing_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_testing_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_testing_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_testing_v1","table_id":"energy_contracts_supply_point_tariff_costs_testing_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_testing_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_testing_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_testing_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_testing_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_testing_v2","table_id":"energy_contracts_supply_point_tariff_costs_testing_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `aboutYourTariffLabel`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_testing_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v1","table_id":"energy_contracts_supply_point_tariff_costs_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `contractId`,\n  `profileClass`,\n  `region`,\n  `fuel`,\n  `tariffId`,\n  `projectedConsumption`,\n  `effectiveFrom`,\n  `annualTariffCosts`,\n  `cheapestOverallTariffId`,\n  `cheapestSimilarTariffId`,\n  `aboutYourTariffLabel`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v2","table_id":"energy_contracts_supply_point_tariff_costs_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `contractId`,\n  `profileClass`,\n  `region`,\n  `fuel`,\n  `tariffId`,\n  `annualTariffCosts`,\n  `cheapestOverallTariffId`,\n  `cheapestSimilarTariffId`,\n  `aboutYourTariffLabel`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v3","table_id":"energy_contracts_supply_point_tariff_costs_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v4","table_id":"energy_contracts_supply_point_tariff_costs_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `aboutYourTariffLabel`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v4`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v5","table_id":"energy_contracts_supply_point_tariff_costs_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `vatRate`,\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `aboutYourTariffLabel`,\n  `kafkaData`,\n  `aboutYourFutureTariffLabel`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v5`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v6","table_id":"energy_contracts_supply_point_tariff_costs_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `vatRate`,\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `aboutYourTariffLabel`,\n  `kafkaData`,\n  `aboutYourFutureTariffLabel`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v6`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_supply_point_tariff_costs_v7","table_id":"energy_contracts_supply_point_tariff_costs_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `vatRate`,\n  `metadata`,\n  `currentTariff`,\n  `currentContract`,\n  `personalProjection`,\n  `annualTariffCosts`,\n  `cheapestOverallTariff`,\n  `cheapestSimilarTariff`,\n  `aboutYourTariffLabel`,\n  `aboutYourFutureTariffLabel`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_supply_point_tariff_costs_v7`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v1","table_id":"energy_contracts_tariff_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_tariff_v1`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v2","table_id":"energy_contracts_tariff_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_tariff_v2`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v3","table_id":"energy_contracts_tariff_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_tariff_v3`"},"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.energy_contracts_tariff_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/energy_contracts_tariff_v4","table_id":"energy_contracts_tariff_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.energy_contracts_tariff_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_AML_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_AML_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AML_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AML_split_consolidated_v1","table_id":"flow_AML_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_AML_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_AML_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_AML_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AML_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AML_split_v1","table_id":"flow_AML_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_AML_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_AQI_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_AQI_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQI_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQI_split_consolidated_v1","table_id":"flow_AQI_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_AQI_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_AQI_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_AQI_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQI_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQI_split_v1","table_id":"flow_AQI_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_AQI_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_AQR_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_AQR_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQR_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQR_split_consolidated_v1","table_id":"flow_AQR_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_AQR_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_AQR_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_AQR_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQR_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_AQR_split_v1","table_id":"flow_AQR_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_AQR_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_ASP_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ASP_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ASP_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ASP_split_consolidated_v1","table_id":"flow_ASP_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ASP_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_ASP_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ASP_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ASP_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ASP_split_v1","table_id":"flow_ASP_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ASP_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v2","table_id":"flow_BOL_XREADOUT01_validated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `Body`,\n  `Header`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_BOL_XREADOUT01_validated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v3","table_id":"flow_BOL_XREADOUT01_validated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `Body`,\n  `Header`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_BOL_XREADOUT01_validated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v4","table_id":"flow_BOL_XREADOUT01_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `Body`,\n  `Header`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_BOL_XREADOUT01_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v5","table_id":"flow_BOL_XREADOUT01_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `body`,\n  `header`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_BOL_XREADOUT01_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v6","table_id":"flow_BOL_XREADOUT01_validated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `body`,\n  `header`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_BOL_XREADOUT01_validated_v6`"},"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated_v7","table_id":"flow_BOL_XREADOUT01_validated_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `body`,\n  `header`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_BOL_XREADOUT01_validated_v7`"},"data-engineering-prod:landing_andromeda_secure.flow_CDR_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CDR_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CDR_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CDR_split_consolidated_v1","table_id":"flow_CDR_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CDR_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_CDR_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CDR_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CDR_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CDR_split_v1","table_id":"flow_CDR_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CDR_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_consolidated_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_consolidated_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_consolidated_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_consolidated_v7","table_id":"flow_CNF_POST_NEXUS_split_consolidated_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CNF_POST_NEXUS_split_consolidated_v7`"},"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_v1","table_id":"flow_CNF_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CNF_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_v6","table_id":"flow_CNF_POST_NEXUS_split_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CNF_POST_NEXUS_split_v6`"},"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_v7","table_id":"flow_CNF_POST_NEXUS_split_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CNF_POST_NEXUS_split_v7`"},"data-engineering-prod:landing_andromeda_secure.flow_CNF_PRE_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CNF_PRE_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_PRE_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_PRE_NEXUS_split_v1","table_id":"flow_CNF_PRE_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CNF_PRE_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_CNF_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_CNF_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_CNF_PRE_NEXUS_split_v2","table_id":"flow_CNF_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_CNF_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_COI_POST_20171101_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_COI_POST_20171101_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_COI_POST_20171101_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_COI_POST_20171101_split_consolidated_v1","table_id":"flow_COI_POST_20171101_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_COI_POST_20171101_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_COI_POST_20171101_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_COI_POST_20171101_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_COI_POST_20171101_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_COI_POST_20171101_split_v1","table_id":"flow_COI_POST_20171101_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_COI_POST_20171101_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_COI_PRE_20171101_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_COI_PRE_20171101_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_COI_PRE_20171101_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_COI_PRE_20171101_split_v1","table_id":"flow_COI_PRE_20171101_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_COI_PRE_20171101_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0001001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0001001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0001001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0001001_split_consolidated_v1","table_id":"flow_D0001001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0001001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0001001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0001001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0001001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0001001_split_v1","table_id":"flow_D0001001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0001001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0002001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0002001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0002001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0002001_split_consolidated_v1","table_id":"flow_D0002001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0002001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0002001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0002001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0002001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0002001_split_v1","table_id":"flow_D0002001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0002001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0004001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0004001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0004001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0004001_split_consolidated_v1","table_id":"flow_D0004001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0004001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0004001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0004001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0004001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0004001_split_v1","table_id":"flow_D0004001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0004001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0010001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0010001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0010001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0010001_split_v2","table_id":"flow_D0010001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0010001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0010002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0010002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0010002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0010002_split_consolidated_v1","table_id":"flow_D0010002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0010002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0010002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0010002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0010002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0010002_split_v1","table_id":"flow_D0010002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0010002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0011001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0011001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0011001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0011001_split_consolidated_v1","table_id":"flow_D0011001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0011001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0011001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0011001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0011001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0011001_split_v1","table_id":"flow_D0011001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0011001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0012001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0012001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0012001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0012001_split_consolidated_v1","table_id":"flow_D0012001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0012001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0012001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0012001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0012001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0012001_split_v1","table_id":"flow_D0012001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0012001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0018001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0018001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0018001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0018001_split_consolidated_v1","table_id":"flow_D0018001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0018001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0018001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0018001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0018001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0018001_split_v1","table_id":"flow_D0018001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0018001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0019001_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0019001_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0019001_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0019001_split_consolidated_v2","table_id":"flow_D0019001_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0019001_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0019001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0019001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0019001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0019001_split_v1","table_id":"flow_D0019001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0019001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0019001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0019001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0019001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0019001_split_v2","table_id":"flow_D0019001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0019001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0030001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0030001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0030001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0030001_split_consolidated_v1","table_id":"flow_D0030001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0030001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0030001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0030001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0030001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0030001_split_v1","table_id":"flow_D0030001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0030001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0036001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0036001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0036001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0036001_split_v1","table_id":"flow_D0036001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0036001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0040002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0040002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0040002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0040002_split_v1","table_id":"flow_D0040002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0040002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0040003_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0040003_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0040003_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0040003_split_v1","table_id":"flow_D0040003_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0040003_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0041001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0041001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0041001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0041001_split_consolidated_v1","table_id":"flow_D0041001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0041001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0041001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0041001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0041001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0041001_split_v1","table_id":"flow_D0041001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0041001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0052001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0052001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0052001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0052001_split_consolidated_v1","table_id":"flow_D0052001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0052001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0052001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0052001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0052001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0052001_split_v1","table_id":"flow_D0052001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0052001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0055001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0055001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0055001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0055001_split_consolidated_v1","table_id":"flow_D0055001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0055001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0055001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0055001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0055001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0055001_split_v1","table_id":"flow_D0055001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0055001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0057001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0057001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0057001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0057001_split_consolidated_v1","table_id":"flow_D0057001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0057001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0057001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0057001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0057001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0057001_split_v1","table_id":"flow_D0057001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0057001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0058001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0058001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0058001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0058001_split_consolidated_v1","table_id":"flow_D0058001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0058001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0058001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0058001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0058001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0058001_split_v1","table_id":"flow_D0058001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0058001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0064001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0064001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0064001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0064001_split_consolidated_v1","table_id":"flow_D0064001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0064001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0064001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0064001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0064001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0064001_split_v1","table_id":"flow_D0064001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0064001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0065001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0065001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0065001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0065001_split_consolidated_v1","table_id":"flow_D0065001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0065001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0065001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0065001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0065001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0065001_split_v1","table_id":"flow_D0065001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0065001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0066001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0066001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0066001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0066001_split_consolidated_v1","table_id":"flow_D0066001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0066001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0066001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0066001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0066001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0066001_split_v1","table_id":"flow_D0066001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0066001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0067001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0067001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0067001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0067001_split_consolidated_v1","table_id":"flow_D0067001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0067001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0067001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0067001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0067001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0067001_split_v1","table_id":"flow_D0067001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0067001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0068001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0068001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0068001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0068001_split_consolidated_v1","table_id":"flow_D0068001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0068001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0068001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0068001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0068001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0068001_split_v1","table_id":"flow_D0068001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0068001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0069001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0069001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0069001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0069001_split_consolidated_v1","table_id":"flow_D0069001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0069001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0069001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0069001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0069001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0069001_split_v1","table_id":"flow_D0069001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0069001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0071001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0071001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0071001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0071001_split_consolidated_v1","table_id":"flow_D0071001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0071001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0071001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0071001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0071001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0071001_split_v1","table_id":"flow_D0071001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0071001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0081001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0081001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0081001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0081001_split_consolidated_v1","table_id":"flow_D0081001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0081001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0081001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0081001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0081001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0081001_split_v1","table_id":"flow_D0081001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0081001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086001_split_v1","table_id":"flow_D0086001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086001_split_v2","table_id":"flow_D0086001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086001_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086001_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086001_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086001_split_v3","table_id":"flow_D0086001_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086001_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_consolidated_v3","table_id":"flow_D0086002_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086002_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_v1","table_id":"flow_D0086002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_v2","table_id":"flow_D0086002_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086002_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0086002_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0086002_split_v3","table_id":"flow_D0086002_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0086002_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_D0089001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0089001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0089001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0089001_split_v1","table_id":"flow_D0089001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0089001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0089002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0089002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0089002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0089002_split_consolidated_v1","table_id":"flow_D0089002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0089002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0089002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0089002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0089002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0089002_split_v1","table_id":"flow_D0089002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0089002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0090001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0090001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0090001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0090001_split_consolidated_v1","table_id":"flow_D0090001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0090001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0090001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0090001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0090001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0090001_split_v1","table_id":"flow_D0090001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0090001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0091001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0091001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091001_split_consolidated_v1","table_id":"flow_D0091001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0091001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0091001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0091001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091001_split_v1","table_id":"flow_D0091001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0091001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0091002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0091002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091002_split_consolidated_v1","table_id":"flow_D0091002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0091002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0091002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0091002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0091002_split_v1","table_id":"flow_D0091002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0091002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0092001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0092001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0092001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0092001_split_consolidated_v1","table_id":"flow_D0092001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0092001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0092001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0092001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0092001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0092001_split_v1","table_id":"flow_D0092001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0092001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0093001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0093001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0093001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0093001_split_consolidated_v1","table_id":"flow_D0093001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0093001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0093001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0093001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0093001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0093001_split_v1","table_id":"flow_D0093001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0093001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0095001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0095001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0095001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0095001_split_consolidated_v1","table_id":"flow_D0095001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0095001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0095001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0095001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0095001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0095001_split_v1","table_id":"flow_D0095001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0095001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0132001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0132001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0132001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0132001_split_consolidated_v1","table_id":"flow_D0132001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0132001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0132001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0132001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0132001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0132001_split_v1","table_id":"flow_D0132001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0132001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0139001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0139001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0139001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0139001_split_consolidated_v1","table_id":"flow_D0139001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0139001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0139001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0139001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0139001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0139001_split_v1","table_id":"flow_D0139001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0139001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0142001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0142001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0142001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0142001_split_consolidated_v1","table_id":"flow_D0142001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0142001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0142001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0142001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0142001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0142001_split_v1","table_id":"flow_D0142001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0142001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0148001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0148001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0148001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0148001_split_consolidated_v1","table_id":"flow_D0148001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0148001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0148001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0148001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0148001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0148001_split_v1","table_id":"flow_D0148001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0148001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0149001_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0149001_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0149001_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0149001_split_consolidated_v4","table_id":"flow_D0149001_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0149001_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_D0149001_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0149001_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0149001_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0149001_split_v4","table_id":"flow_D0149001_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0149001_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_D0150001_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0150001_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0150001_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0150001_split_consolidated_v4","table_id":"flow_D0150001_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0150001_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_D0150001_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0150001_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0150001_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0150001_split_v4","table_id":"flow_D0150001_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0150001_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_D0151001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0151001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0151001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0151001_split_consolidated_v1","table_id":"flow_D0151001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0151001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0151001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0151001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0151001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0151001_split_v1","table_id":"flow_D0151001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0151001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0153001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0153001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0153001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0153001_split_consolidated_v1","table_id":"flow_D0153001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0153001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0153001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0153001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0153001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0153001_split_v1","table_id":"flow_D0153001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0153001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0155001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0155001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0155001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0155001_split_consolidated_v1","table_id":"flow_D0155001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0155001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0155001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0155001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0155001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0155001_split_v1","table_id":"flow_D0155001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0155001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0171001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0171001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0171001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0171001_split_consolidated_v1","table_id":"flow_D0171001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0171001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0171001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0171001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0171001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0171001_split_v1","table_id":"flow_D0171001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0171001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0188001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0188001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0188001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0188001_split_consolidated_v1","table_id":"flow_D0188001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0188001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0188001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0188001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0188001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0188001_split_v1","table_id":"flow_D0188001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0188001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0203001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0203001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0203001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0203001_split_consolidated_v1","table_id":"flow_D0203001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0203001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0203001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0203001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0203001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0203001_split_v1","table_id":"flow_D0203001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0203001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0205001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0205001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0205001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0205001_split_consolidated_v1","table_id":"flow_D0205001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0205001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0205001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0205001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0205001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0205001_split_v1","table_id":"flow_D0205001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0205001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_consolidated_v2","table_id":"flow_D0217001_POST_DTC10_7_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_consolidated_v3","table_id":"flow_D0217001_POST_DTC10_7_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_v2","table_id":"flow_D0217001_POST_DTC10_7_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217001_POST_DTC10_7_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_v3","table_id":"flow_D0217001_POST_DTC10_7_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217001_POST_DTC10_7_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217001_PRE_DTC10_7_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217001_PRE_DTC10_7_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_PRE_DTC10_7_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_PRE_DTC10_7_split_v1","table_id":"flow_D0217001_PRE_DTC10_7_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217001_PRE_DTC10_7_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217001_PRE_DTC10_7_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217001_PRE_DTC10_7_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_PRE_DTC10_7_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217001_PRE_DTC10_7_split_v2","table_id":"flow_D0217001_PRE_DTC10_7_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217001_PRE_DTC10_7_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217002_split_consolidated_v1","table_id":"flow_D0217002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0217002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0217002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0217002_split_v1","table_id":"flow_D0217002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0217002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0221001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0221001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0221001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0221001_split_consolidated_v1","table_id":"flow_D0221001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0221001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0221001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0221001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0221001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0221001_split_v1","table_id":"flow_D0221001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0221001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0225001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0225001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0225001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0225001_split_v1","table_id":"flow_D0225001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0225001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0225002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0225002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0225002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0225002_split_consolidated_v1","table_id":"flow_D0225002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0225002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0225002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0225002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0225002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0225002_split_v1","table_id":"flow_D0225002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0225002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0235001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0235001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0235001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0235001_split_v1","table_id":"flow_D0235001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0235001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0242001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0242001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0242001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0242001_split_consolidated_v1","table_id":"flow_D0242001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0242001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0242001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0242001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0242001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0242001_split_v1","table_id":"flow_D0242001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0242001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0260001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0260001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260001_split_consolidated_v1","table_id":"flow_D0260001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0260001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0260001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0260001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260001_split_v1","table_id":"flow_D0260001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0260001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0260002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0260002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260002_split_consolidated_v1","table_id":"flow_D0260002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0260002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0260002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0260002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0260002_split_v1","table_id":"flow_D0260002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0260002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0269004_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0269004_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0269004_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0269004_split_v1","table_id":"flow_D0269004_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0269004_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0296001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0296001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0296001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0296001_split_consolidated_v1","table_id":"flow_D0296001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0296001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0296001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0296001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0296001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0296001_split_v1","table_id":"flow_D0296001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0296001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0300001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0300001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0300001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0300001_split_consolidated_v1","table_id":"flow_D0300001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0300001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0300001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0300001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0300001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0300001_split_v1","table_id":"flow_D0300001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0300001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0301001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0301001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0301001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0301001_split_v1","table_id":"flow_D0301001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0301001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0301002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0301002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0301002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0301002_split_consolidated_v1","table_id":"flow_D0301002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0301002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0301002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0301002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0301002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0301002_split_v1","table_id":"flow_D0301002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0301002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0302001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0302001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0302001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0302001_split_v1","table_id":"flow_D0302001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0302001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0302002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0302002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0302002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0302002_split_consolidated_v1","table_id":"flow_D0302002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0302002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0302002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0302002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0302002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0302002_split_v1","table_id":"flow_D0302002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0302002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0303001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0303001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0303001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0303001_split_v2","table_id":"flow_D0303001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0303001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0304001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0304001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0304001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0304001_split_consolidated_v1","table_id":"flow_D0304001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0304001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0304001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0304001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0304001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0304001_split_v1","table_id":"flow_D0304001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0304001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0306001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0306001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306001_split_consolidated_v1","table_id":"flow_D0306001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0306001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0306001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0306001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306001_split_v1","table_id":"flow_D0306001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0306001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0306002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0306002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306002_split_consolidated_v1","table_id":"flow_D0306002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0306002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0306002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0306002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0306002_split_v1","table_id":"flow_D0306002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0306002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0307001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0307001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0307001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0307001_split_v1","table_id":"flow_D0307001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0307001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0307002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0307002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0307002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0307002_split_consolidated_v1","table_id":"flow_D0307002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0307002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0307002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0307002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0307002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0307002_split_v1","table_id":"flow_D0307002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0307002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0308002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0308002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0308002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0308002_split_consolidated_v1","table_id":"flow_D0308002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0308002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0308002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0308002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0308002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0308002_split_v1","table_id":"flow_D0308002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0308002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0309002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0309002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0309002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0309002_split_consolidated_v1","table_id":"flow_D0309002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0309002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0309002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0309002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0309002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0309002_split_v1","table_id":"flow_D0309002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0309002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0310001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0310001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0310001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0310001_split_consolidated_v1","table_id":"flow_D0310001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0310001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0310001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0310001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0310001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0310001_split_v1","table_id":"flow_D0310001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0310001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_consolidated_v1","table_id":"flow_D0311001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0311001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_consolidated_v2","table_id":"flow_D0311001_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0311001_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_v1","table_id":"flow_D0311001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0311001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0311001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0311001_split_v2","table_id":"flow_D0311001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0311001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_D0312002_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0312002_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0312002_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0312002_split_consolidated_v1","table_id":"flow_D0312002_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0312002_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0312002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0312002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0312002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0312002_split_v1","table_id":"flow_D0312002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0312002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0358001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0358001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0358001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0358001_split_consolidated_v1","table_id":"flow_D0358001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0358001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0358001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0358001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0358001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0358001_split_v1","table_id":"flow_D0358001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0358001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0359001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0359001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0359001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0359001_split_consolidated_v1","table_id":"flow_D0359001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0359001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0359001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0359001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0359001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0359001_split_v1","table_id":"flow_D0359001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0359001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0360001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0360001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0360001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0360001_split_consolidated_v1","table_id":"flow_D0360001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0360001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0360001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0360001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0360001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0360001_split_v1","table_id":"flow_D0360001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0360001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0361001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0361001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0361001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0361001_split_consolidated_v1","table_id":"flow_D0361001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0361001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0361001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0361001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0361001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0361001_split_v1","table_id":"flow_D0361001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0361001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0367001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0367001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0367001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0367001_split_consolidated_v1","table_id":"flow_D0367001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0367001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0367001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0367001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0367001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0367001_split_v1","table_id":"flow_D0367001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0367001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_D0380001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_D0380001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0380001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_D0380001_split_v1","table_id":"flow_D0380001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_D0380001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_DCF_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_DCF_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DCF_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DCF_split_consolidated_v1","table_id":"flow_DCF_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_DCF_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_DCF_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_DCF_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DCF_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DCF_split_v1","table_id":"flow_DCF_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_DCF_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_DRS_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_DRS_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DRS_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DRS_split_consolidated_v1","table_id":"flow_DRS_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_DRS_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_DRS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_DRS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DRS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_DRS_split_v1","table_id":"flow_DRS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_DRS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_G0806_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0806_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0806_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0806_split_consolidated_v2","table_id":"flow_G0806_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0806_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_G0806_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0806_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0806_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0806_split_v1","table_id":"flow_G0806_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0806_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_G0806_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0806_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0806_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0806_split_v2","table_id":"flow_G0806_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0806_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_G0807_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0807_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0807_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0807_split_consolidated_v2","table_id":"flow_G0807_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0807_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_G0807_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0807_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0807_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0807_split_v1","table_id":"flow_G0807_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0807_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_G0807_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0807_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0807_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0807_split_v2","table_id":"flow_G0807_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0807_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_G0808_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0808_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0808_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0808_split_consolidated_v2","table_id":"flow_G0808_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0808_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_G0808_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_G0808_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0808_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_G0808_split_v2","table_id":"flow_G0808_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_G0808_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_LPA_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_LPA_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_LPA_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_LPA_split_consolidated_v1","table_id":"flow_LPA_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_LPA_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_LPA_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_LPA_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_LPA_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_LPA_split_v1","table_id":"flow_LPA_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_LPA_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_consolidated_v3","table_id":"flow_MBR_POST_NEXUS_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_POST_NEXUS_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_v1","table_id":"flow_MBR_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_v2","table_id":"flow_MBR_POST_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_POST_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_v3","table_id":"flow_MBR_POST_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_POST_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split_v1","table_id":"flow_MBR_PRE_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_PRE_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split_v2","table_id":"flow_MBR_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split_v3","table_id":"flow_MBR_PRE_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MBR_PRE_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_consolidated_v4","table_id":"flow_MRI_POST_NEXUS_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_POST_NEXUS_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v1","table_id":"flow_MRI_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v2","table_id":"flow_MRI_POST_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_POST_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v3","table_id":"flow_MRI_POST_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_POST_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_v4","table_id":"flow_MRI_POST_NEXUS_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_POST_NEXUS_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split_v2","table_id":"flow_MRI_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split_v3","table_id":"flow_MRI_PRE_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_PRE_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split_v4","table_id":"flow_MRI_PRE_NEXUS_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_MRI_PRE_NEXUS_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_NOSI_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NOSI_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NOSI_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NOSI_split_consolidated_v1","table_id":"flow_NOSI_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NOSI_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_NOSI_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NOSI_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NOSI_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NOSI_split_v1","table_id":"flow_NOSI_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NOSI_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_consolidated_v3","table_id":"flow_NRL_POST_NEXUS_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_POST_NEXUS_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_v1","table_id":"flow_NRL_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_v2","table_id":"flow_NRL_POST_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_POST_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_v3","table_id":"flow_NRL_POST_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_POST_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split_v1","table_id":"flow_NRL_PRE_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_PRE_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split_v2","table_id":"flow_NRL_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split_v3","table_id":"flow_NRL_PRE_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_NRL_PRE_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_consolidated_v4","table_id":"flow_ONAGE_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONAGE_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v1","table_id":"flow_ONAGE_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONAGE_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v2","table_id":"flow_ONAGE_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONAGE_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v3","table_id":"flow_ONAGE_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONAGE_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONAGE_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONAGE_split_v4","table_id":"flow_ONAGE_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONAGE_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_consolidated_v4","table_id":"flow_ONJOB_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONJOB_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_v2","table_id":"flow_ONJOB_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONJOB_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_v3","table_id":"flow_ONJOB_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONJOB_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONJOB_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONJOB_split_v4","table_id":"flow_ONJOB_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONJOB_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_consolidated_v2","table_id":"flow_ONUPD_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONUPD_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_consolidated_v3","table_id":"flow_ONUPD_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONUPD_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_consolidated_v4","table_id":"flow_ONUPD_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONUPD_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_v2","table_id":"flow_ONUPD_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONUPD_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_v3","table_id":"flow_ONUPD_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONUPD_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ONUPD_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ONUPD_split_v4","table_id":"flow_ONUPD_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ONUPD_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_ORJOB_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ORJOB_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ORJOB_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ORJOB_split_consolidated_v2","table_id":"flow_ORJOB_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ORJOB_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_ORJOB_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ORJOB_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ORJOB_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ORJOB_split_v1","table_id":"flow_ORJOB_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ORJOB_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_ORJOB_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_ORJOB_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ORJOB_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_ORJOB_split_v2","table_id":"flow_ORJOB_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_ORJOB_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_PAC_POST_NEXUS_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_PAC_POST_NEXUS_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split_consolidated_v1","table_id":"flow_PAC_POST_NEXUS_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_PAC_POST_NEXUS_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_PAC_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_PAC_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split_v1","table_id":"flow_PAC_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_PAC_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_PAC_PRE_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_PAC_PRE_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_PAC_PRE_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_PAC_PRE_NEXUS_split_v1","table_id":"flow_PAC_PRE_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_PAC_PRE_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_RD1_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RD1_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RD1_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RD1_split_consolidated_v2","table_id":"flow_RD1_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RD1_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_RD1_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RD1_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RD1_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RD1_split_v1","table_id":"flow_RD1_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RD1_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_RD1_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RD1_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RD1_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RD1_split_v2","table_id":"flow_RD1_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RD1_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_RESPN_TRA_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RESPN_TRA_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_TRA_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_TRA_v2","table_id":"flow_RESPN_TRA_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `rootGroups`,\n  `footer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RESPN_TRA_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_RESPN_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RESPN_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_consolidated_v4","table_id":"flow_RESPN_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `rootGroups`,\n  `footer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RESPN_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_RESPN_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RESPN_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_v1","table_id":"flow_RESPN_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `rootGroups`,\n  `footer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RESPN_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_RESPN_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RESPN_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_v2","table_id":"flow_RESPN_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `rootGroups`,\n  `footer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RESPN_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_RESPN_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RESPN_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RESPN_v4","table_id":"flow_RESPN_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `rootGroups`,\n  `footer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RESPN_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_RET_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RET_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_consolidated_v1","table_id":"flow_RET_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RET_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_RET_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RET_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_consolidated_v2","table_id":"flow_RET_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RET_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_RET_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RET_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_v1","table_id":"flow_RET_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RET_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_RET_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_RET_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_RET_split_v2","table_id":"flow_RET_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_RET_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_S0004001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_S0004001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_S0004001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_S0004001_split_v2","table_id":"flow_S0004001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_S0004001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_S0004001_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_S0004001_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_S0004001_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_S0004001_split_v3","table_id":"flow_S0004001_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_S0004001_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_S0015002_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_S0015002_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_S0015002_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_S0015002_split_v1","table_id":"flow_S0015002_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_S0015002_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_SAR_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SAR_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SAR_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SAR_split_consolidated_v1","table_id":"flow_SAR_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SAR_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_SAR_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SAR_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SAR_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SAR_split_v1","table_id":"flow_SAR_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SAR_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_SCR_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SCR_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SCR_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SCR_split_consolidated_v1","table_id":"flow_SCR_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SCR_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_SCR_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SCR_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SCR_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SCR_split_v1","table_id":"flow_SCR_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SCR_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_split_v2","table_id":"flow_SFE_ALARMS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `GatewayNo`,\n  `AlarmCode`,\n  `AlarmDescription`,\n  `OccurrenceTime`,\n  `NotifiedDateTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ALARMS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_split_v3","table_id":"flow_SFE_ALARMS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayNo`,\n  `alarmCode`,\n  `alarmDescription`,\n  `occurrenceTime`,\n  `notifiedDateTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ALARMS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_validated_v4","table_id":"flow_SFE_ALARMS_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayNo`,\n  `alarmCode`,\n  `alarmDescription`,\n  `occurrenceTime`,\n  `notifiedDateTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ALARMS_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_validated_v5","table_id":"flow_SFE_ALARMS_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayNo`,\n  `alarmCode`,\n  `alarmDescription`,\n  `occurrenceTime`,\n  `notifiedDateTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ALARMS_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_validated_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ALARMS_validated_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_validated_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ALARMS_validated_v7","table_id":"flow_SFE_ALARMS_validated_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `alarmCode`,\n  `alarmDescription`,\n  `notifiedDateTime`,\n  `occurrenceTime`,\n  `gatewayNo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ALARMS_validated_v7`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_split_v2","table_id":"flow_SFE_ASSETINFO_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `DeviceType`,\n  `DeviceNo`,\n  `RegistrationDate`,\n  `AssetStatus`,\n  `ServicePointNo`,\n  `GatewayNo`,\n  `CustomerId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ASSETINFO_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_split_v3","table_id":"flow_SFE_ASSETINFO_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `deviceType`,\n  `deviceNo`,\n  `registrationDate`,\n  `assetStatus`,\n  `servicePointNo`,\n  `gatewayNo`,\n  `customerId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ASSETINFO_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_validated_v4","table_id":"flow_SFE_ASSETINFO_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `deviceType`,\n  `deviceNo`,\n  `registrationDate`,\n  `assetStatus`,\n  `servicePointNo`,\n  `gatewayNo`,\n  `customerId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ASSETINFO_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_ASSETINFO_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_ASSETINFO_validated_v5","table_id":"flow_SFE_ASSETINFO_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `deviceType`,\n  `deviceNo`,\n  `registrationDate`,\n  `assetStatus`,\n  `servicePointNo`,\n  `gatewayNo`,\n  `customerId`,\n  `kafkaData`,\n  `lastModificationDate`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_ASSETINFO_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_split_v2","table_id":"flow_SFE_BILLINGSCHEDULE_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `BillingConfig`,\n  `BillingConfigDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_BILLINGSCHEDULE_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_split_v3","table_id":"flow_SFE_BILLINGSCHEDULE_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `billingConfig`,\n  `billingConfigDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_BILLINGSCHEDULE_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_validated_v4","table_id":"flow_SFE_BILLINGSCHEDULE_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `billingConfig`,\n  `billingConfigDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_BILLINGSCHEDULE_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_validated_v5","table_id":"flow_SFE_BILLINGSCHEDULE_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `billingConfig`,\n  `billingConfigDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_BILLINGSCHEDULE_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_split_v2","table_id":"flow_SFE_CHANGETARIFF_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `TariffDescription`,\n  `ActivationDate`,\n  `ChargingType`,\n  `TariffType`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_CHANGETARIFF_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_split_v3","table_id":"flow_SFE_CHANGETARIFF_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `tariffDescription`,\n  `activationDate`,\n  `chargingType`,\n  `tariffType`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_CHANGETARIFF_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_validated_v4","table_id":"flow_SFE_CHANGETARIFF_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `tariffDescription`,\n  `activationDate`,\n  `chargingType`,\n  `tariffType`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_CHANGETARIFF_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_CHANGETARIFF_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_validated_v5","table_id":"flow_SFE_CHANGETARIFF_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `tariffDescription`,\n  `activationDate`,\n  `chargingType`,\n  `tariffType`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_CHANGETARIFF_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_split_v2","table_id":"flow_SFE_COSGAINRESPONSE_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `RequestDate`,\n  `RequestedSwitchTime`,\n  `AutoSwitchTime`,\n  `ProcessTime`,\n  `SwitchStatus`,\n  `ConfigurationStatus`,\n  `DeviceNo`,\n  `RequestedBy`,\n  `GainingSupplier`,\n  `LosingSupplier`,\n  `InitialReading`,\n  `InitialVolume`,\n  `Register0`,\n  `Register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSGAINRESPONSE_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_split_v3","table_id":"flow_SFE_COSGAINRESPONSE_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `configurationStatus`,\n  `deviceNo`,\n  `requestedBy`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `initialReading`,\n  `initialVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSGAINRESPONSE_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_validated_v4","table_id":"flow_SFE_COSGAINRESPONSE_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `configurationStatus`,\n  `deviceNo`,\n  `requestedBy`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `initialReading`,\n  `initialVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSGAINRESPONSE_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_validated_v5","table_id":"flow_SFE_COSGAINRESPONSE_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `configurationStatus`,\n  `deviceNo`,\n  `requestedBy`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `initialReading`,\n  `initialVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSGAINRESPONSE_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split_v2","table_id":"flow_SFE_COSLOSSRESPONSE_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `RequestedBy`,\n  `RequestDate`,\n  `RequestedSwitchTime`,\n  `AutoSwitchTime`,\n  `ProcessTime`,\n  `SwitchStatus`,\n  `ConfigurationStatus`,\n  `DeviceNo`,\n  `GainingSupplier`,\n  `LosingSupplier`,\n  `LastReading`,\n  `LastVolume`,\n  `Register0`,\n  `Register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSLOSSRESPONSE_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split_v3","table_id":"flow_SFE_COSLOSSRESPONSE_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestedBy`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `configurationStatus`,\n  `deviceNo`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `lastReading`,\n  `lastVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSLOSSRESPONSE_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split_v4","table_id":"flow_SFE_COSLOSSRESPONSE_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestedBy`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `deviceNo`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `configurationStatus`,\n  `lastReading`,\n  `lastVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSLOSSRESPONSE_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_validated_v5","table_id":"flow_SFE_COSLOSSRESPONSE_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestedBy`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `deviceNo`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `configurationStatus`,\n  `lastReading`,\n  `lastVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSLOSSRESPONSE_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_validated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_validated_v6","table_id":"flow_SFE_COSLOSSRESPONSE_validated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `requestedBy`,\n  `requestDate`,\n  `requestedSwitchTime`,\n  `autoSwitchTime`,\n  `processTime`,\n  `switchStatus`,\n  `deviceNo`,\n  `gainingSupplier`,\n  `losingSupplier`,\n  `configurationStatus`,\n  `lastReading`,\n  `lastVolume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COSLOSSRESPONSE_validated_v6`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_split_v2","table_id":"flow_SFE_COTREPORT_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `Ex_CustomerMeterMode`,\n  `MeterMode`,\n  `COTDate`,\n  `StatusCode`,\n  `PaymentCardId`,\n  `InitialCreditAmount`,\n  `DebtAmount`,\n  `Reading`,\n  `Volume`,\n  `Register0`,\n  `Register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COTREPORT_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_split_v3","table_id":"flow_SFE_COTREPORT_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `exCustomerMeterMode`,\n  `meterMode`,\n  `cotDate`,\n  `statusCode`,\n  `paymentCardId`,\n  `initialCreditAmount`,\n  `debtAmount`,\n  `reading`,\n  `volume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COTREPORT_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_validated_v4","table_id":"flow_SFE_COTREPORT_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `exCustomerMeterMode`,\n  `meterMode`,\n  `cotDate`,\n  `statusCode`,\n  `paymentCardId`,\n  `initialCreditAmount`,\n  `debtAmount`,\n  `reading`,\n  `volume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COTREPORT_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_COTREPORT_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_COTREPORT_validated_v5","table_id":"flow_SFE_COTREPORT_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `exCustomerMeterMode`,\n  `meterMode`,\n  `cotDate`,\n  `statusCode`,\n  `paymentCardId`,\n  `initialCreditAmount`,\n  `debtAmount`,\n  `reading`,\n  `volume`,\n  `register0`,\n  `register1`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_COTREPORT_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_split_v2","table_id":"flow_SFE_DAILYCHANGEMODE_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `MeterModeDescription`,\n  `MeterModeEffectiveDate`,\n  `PaymentCardId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYCHANGEMODE_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_split_v3","table_id":"flow_SFE_DAILYCHANGEMODE_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterModeDescription`,\n  `meterModeEffectiveDate`,\n  `paymentCardId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYCHANGEMODE_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated_v4","table_id":"flow_SFE_DAILYCHANGEMODE_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterModeDescription`,\n  `meterModeEffectiveDate`,\n  `paymentCardId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYCHANGEMODE_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated_v5","table_id":"flow_SFE_DAILYCHANGEMODE_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterModeDescription`,\n  `meterModeEffectiveDate`,\n  `paymentCardId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYCHANGEMODE_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated_v6","table_id":"flow_SFE_DAILYCHANGEMODE_validated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterModeDescription`,\n  `meterModeEffectiveDate`,\n  `paymentCardId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYCHANGEMODE_validated_v6`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_split_v2","table_id":"flow_SFE_DAILYREADSCHEDULE_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `CustomerId`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `MeterMode`,\n  `ScheduleDescription`,\n  `ScheduleEffectiveDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYREADSCHEDULE_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_split_v4","table_id":"flow_SFE_DAILYREADSCHEDULE_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterMode`,\n  `scheduleDescription`,\n  `scheduleEffectiveDate`,\n  `customerId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYREADSCHEDULE_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_validated_v5","table_id":"flow_SFE_DAILYREADSCHEDULE_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterMode`,\n  `scheduleDescription`,\n  `scheduleEffectiveDate`,\n  `customerId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYREADSCHEDULE_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_validated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_validated_v6","table_id":"flow_SFE_DAILYREADSCHEDULE_validated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterMode`,\n  `scheduleDescription`,\n  `scheduleEffectiveDate`,\n  `customerId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_DAILYREADSCHEDULE_validated_v6`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_split_v2","table_id":"flow_SFE_INSTALLSTATUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `InstalledDate`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `GatewayNo`,\n  `IHDMacAddress`,\n  `InstallNotificationDate`,\n  `MeterMode`,\n  `PaymentCardId`,\n  `InstallStatus`,\n  `ErrorCode`,\n  `ErrorDescription`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_INSTALLSTATUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_split_v3","table_id":"flow_SFE_INSTALLSTATUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `installedDate`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayNo`,\n  `ihdMacAddress`,\n  `installNotificationDate`,\n  `meterMode`,\n  `paymentCardId`,\n  `installStatus`,\n  `errorCode`,\n  `errorDescription`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_INSTALLSTATUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_validated_v4","table_id":"flow_SFE_INSTALLSTATUS_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `installedDate`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayNo`,\n  `ihdMacAddress`,\n  `installNotificationDate`,\n  `meterMode`,\n  `paymentCardId`,\n  `installStatus`,\n  `errorCode`,\n  `errorDescription`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_INSTALLSTATUS_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_INSTALLSTATUS_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_validated_v5","table_id":"flow_SFE_INSTALLSTATUS_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `installedDate`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayNo`,\n  `ihdMacAddress`,\n  `installNotificationDate`,\n  `meterMode`,\n  `paymentCardId`,\n  `installStatus`,\n  `errorCode`,\n  `errorDescription`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_INSTALLSTATUS_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_split_v2","table_id":"flow_SFE_NOCOMMS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `GatewayStatus`,\n  `StatusDate`,\n  `GatewayNo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NOCOMMS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_split_v3","table_id":"flow_SFE_NOCOMMS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayStatus`,\n  `statusDate`,\n  `gatewayNo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NOCOMMS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_validated_v4","table_id":"flow_SFE_NOCOMMS_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayStatus`,\n  `statusDate`,\n  `gatewayNo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NOCOMMS_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NOCOMMS_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NOCOMMS_validated_v5","table_id":"flow_SFE_NOCOMMS_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `gatewayStatus`,\n  `statusDate`,\n  `gatewayNo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NOCOMMS_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_split_v2","table_id":"flow_SFE_NONDISCONNECT_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `MeterMode`,\n  `MeterModeDate`,\n  `DisconnectionAllowed`,\n  `StatusDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NONDISCONNECT_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_split_v3","table_id":"flow_SFE_NONDISCONNECT_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterMode`,\n  `meterModeDate`,\n  `disconnectionAllowed`,\n  `statusDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NONDISCONNECT_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_validated_v4","table_id":"flow_SFE_NONDISCONNECT_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterMode`,\n  `meterModeDate`,\n  `disconnectionAllowed`,\n  `statusDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NONDISCONNECT_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_NONDISCONNECT_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_validated_v5","table_id":"flow_SFE_NONDISCONNECT_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `deviceNo`,\n  `meterMode`,\n  `meterModeDate`,\n  `disconnectionAllowed`,\n  `statusDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_NONDISCONNECT_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_split_v2","table_id":"flow_SFE_UNKNOWNTARIFF_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `SupplyType`,\n  `ServicePointNo`,\n  `TariffDescription`,\n  `DeviceNo`,\n  `TariffEffectiveDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_UNKNOWNTARIFF_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_split_v3","table_id":"flow_SFE_UNKNOWNTARIFF_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `tariffDescription`,\n  `deviceNo`,\n  `tariffEffectiveDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_UNKNOWNTARIFF_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_validated_v4","table_id":"flow_SFE_UNKNOWNTARIFF_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `tariffDescription`,\n  `deviceNo`,\n  `tariffEffectiveDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_UNKNOWNTARIFF_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_validated_v5","table_id":"flow_SFE_UNKNOWNTARIFF_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `supplyType`,\n  `servicePointNo`,\n  `tariffDescription`,\n  `deviceNo`,\n  `tariffEffectiveDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_UNKNOWNTARIFF_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_split_v2","table_id":"flow_SFE_VENDHISTORY_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `ServicePointNo`,\n  `DeviceNo`,\n  `IssueTime`,\n  `TransactionType`,\n  `VendCode`,\n  `Currency`,\n  `TransactionAmount`,\n  `MeterCreditAmount`,\n  `IsTransactionCancelled`,\n  `PaymentModeDescription`,\n  `FullDescription`,\n  `AccountBalance`,\n  `AgentNo`,\n  `WSEId`,\n  `RetailerCode`,\n  `TerminalId`,\n  `RequesterId`,\n  `PrepayCardId`,\n  `VatRate`,\n  `VatOnEnergy`,\n  `OutstandingDebt`,\n  `CancellationTime`,\n  `VatOnDebt`,\n  `DebtDeducted`,\n  `DebtRecoveryRate`,\n  `VendReason`,\n  `VendModeDescription`,\n  `CustomerName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDHISTORY_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_split_v3","table_id":"flow_SFE_VENDHISTORY_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `servicePointNo`,\n  `deviceNo`,\n  `issueTime`,\n  `transactionType`,\n  `vendCode`,\n  `currency`,\n  `transactionAmount`,\n  `meterCreditAmount`,\n  `isTransactionCancelled`,\n  `paymentModeDescription`,\n  `fullDescription`,\n  `accountBalance`,\n  `agentNo`,\n  `wseId`,\n  `retailerCode`,\n  `terminalId`,\n  `requesterId`,\n  `prepayCardId`,\n  `vatRate`,\n  `vatOnEnergy`,\n  `outstandingDebt`,\n  `cancellationTime`,\n  `vatOnDebt`,\n  `debtDeducted`,\n  `debtRecoveryRate`,\n  `vendReason`,\n  `vendModeDescription`,\n  `customerName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDHISTORY_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated_v4","table_id":"flow_SFE_VENDHISTORY_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `servicePointNo`,\n  `deviceNo`,\n  `issueTime`,\n  `transactionType`,\n  `vendCode`,\n  `currency`,\n  `transactionAmount`,\n  `meterCreditAmount`,\n  `isTransactionCancelled`,\n  `paymentModeDescription`,\n  `fullDescription`,\n  `accountBalance`,\n  `agentNo`,\n  `wseId`,\n  `retailerCode`,\n  `terminalId`,\n  `requesterId`,\n  `prepayCardId`,\n  `vatRate`,\n  `vatOnEnergy`,\n  `outstandingDebt`,\n  `cancellationTime`,\n  `vatOnDebt`,\n  `debtDeducted`,\n  `debtRecoveryRate`,\n  `vendReason`,\n  `vendModeDescription`,\n  `customerName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDHISTORY_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated_v5","table_id":"flow_SFE_VENDHISTORY_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `servicePointNo`,\n  `deviceNo`,\n  `issueTime`,\n  `transactionType`,\n  `vendCode`,\n  `currency`,\n  `transactionAmount`,\n  `meterCreditAmount`,\n  `isTransactionCancelled`,\n  `paymentModeDescription`,\n  `fullDescription`,\n  `accountBalance`,\n  `agentNo`,\n  `wseId`,\n  `retailerCode`,\n  `terminalId`,\n  `requesterId`,\n  `prepayCardId`,\n  `vatRate`,\n  `vatOnEnergy`,\n  `outstandingDebt`,\n  `cancellationTime`,\n  `vatOnDebt`,\n  `debtDeducted`,\n  `debtRecoveryRate`,\n  `vendReason`,\n  `vendModeDescription`,\n  `customerName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDHISTORY_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v5_backup":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v5_backup","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated_v5_backup","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated_v5_backup","table_id":"flow_SFE_VENDHISTORY_validated_v5_backup","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `servicePointNo`,\n  `deviceNo`,\n  `issueTime`,\n  `transactionType`,\n  `vendCode`,\n  `currency`,\n  `transactionAmount`,\n  `meterCreditAmount`,\n  `isTransactionCancelled`,\n  `paymentModeDescription`,\n  `fullDescription`,\n  `accountBalance`,\n  `agentNo`,\n  `wseId`,\n  `retailerCode`,\n  `terminalId`,\n  `requesterId`,\n  `prepayCardId`,\n  `vatRate`,\n  `vatOnEnergy`,\n  `outstandingDebt`,\n  `cancellationTime`,\n  `vatOnDebt`,\n  `debtDeducted`,\n  `debtRecoveryRate`,\n  `vendReason`,\n  `vendModeDescription`,\n  `customerName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDHISTORY_validated_v5_backup`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_split_v2","table_id":"flow_SFE_VENDLOG_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `DeviceNo`,\n  `ServicePointNo`,\n  `SupplyType`,\n  `VendAmount`,\n  `ReasonCode`,\n  `RequestDate`,\n  `RequestStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDLOG_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_split_v3","table_id":"flow_SFE_VENDLOG_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `deviceNo`,\n  `servicePointNo`,\n  `supplyType`,\n  `vendAmount`,\n  `reasonCode`,\n  `requestDate`,\n  `requestStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDLOG_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_validated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_validated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_validated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_validated_v4","table_id":"flow_SFE_VENDLOG_validated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `deviceNo`,\n  `servicePointNo`,\n  `supplyType`,\n  `vendAmount`,\n  `reasonCode`,\n  `requestDate`,\n  `requestStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDLOG_validated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_validated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SFE_VENDLOG_validated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_validated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SFE_VENDLOG_validated_v5","table_id":"flow_SFE_VENDLOG_validated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `deviceNo`,\n  `servicePointNo`,\n  `supplyType`,\n  `vendAmount`,\n  `reasonCode`,\n  `requestDate`,\n  `requestStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SFE_VENDLOG_validated_v5`"},"data-engineering-prod:landing_andromeda_secure.flow_SPC_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SPC_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SPC_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SPC_split_consolidated_v1","table_id":"flow_SPC_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SPC_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_SPC_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_SPC_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SPC_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_SPC_split_v1","table_id":"flow_SPC_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_SPC_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_consolidated_v1","table_id":"flow_TRF_POST_NEXUS_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_TRF_POST_NEXUS_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_consolidated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_consolidated_v4","table_id":"flow_TRF_POST_NEXUS_split_consolidated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_TRF_POST_NEXUS_split_consolidated_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_v1","table_id":"flow_TRF_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_TRF_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_TRF_POST_NEXUS_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_v4","table_id":"flow_TRF_POST_NEXUS_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_TRF_POST_NEXUS_split_v4`"},"data-engineering-prod:landing_andromeda_secure.flow_TRF_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_TRF_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_PRE_NEXUS_split_v2","table_id":"flow_TRF_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_TRF_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_TRF_PRE_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_TRF_PRE_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_PRE_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_TRF_PRE_NEXUS_split_v3","table_id":"flow_TRF_PRE_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_TRF_PRE_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_UBR_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UBR_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UBR_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UBR_split_consolidated_v1","table_id":"flow_UBR_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UBR_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UBR_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UBR_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UBR_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UBR_split_v1","table_id":"flow_UBR_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UBR_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_consolidated_v3","table_id":"flow_UMR_POST_NEXUS_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_POST_NEXUS_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_v1","table_id":"flow_UMR_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_v2","table_id":"flow_UMR_POST_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_POST_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_v3","table_id":"flow_UMR_POST_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_POST_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split_v1","table_id":"flow_UMR_PRE_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_PRE_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split_v2","table_id":"flow_UMR_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split_v3","table_id":"flow_UMR_PRE_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UMR_PRE_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_consolidated_v3","table_id":"flow_URN_POST_NEXUS_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_POST_NEXUS_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_v1","table_id":"flow_URN_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_v2","table_id":"flow_URN_POST_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_POST_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_POST_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_v3","table_id":"flow_URN_POST_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_POST_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_consolidated_v3","table_id":"flow_URN_PRE_NEXUS_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_PRE_NEXUS_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_v1","table_id":"flow_URN_PRE_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_PRE_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_v2","table_id":"flow_URN_PRE_NEXUS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_PRE_NEXUS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_v3","table_id":"flow_URN_PRE_NEXUS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URN_PRE_NEXUS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_URS_split_consolidated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URS_split_consolidated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_consolidated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_consolidated_v3","table_id":"flow_URS_split_consolidated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URS_split_consolidated_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_URS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_v1","table_id":"flow_URS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_URS_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URS_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_v2","table_id":"flow_URS_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URS_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_URS_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_URS_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_URS_split_v3","table_id":"flow_URS_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_URS_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_consolidated_v1","table_id":"flow_UT001_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT001_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_consolidated_v2","table_id":"flow_UT001_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT001_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_v1","table_id":"flow_UT001_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT001_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT001_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT001_split_v2","table_id":"flow_UT001_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT001_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_consolidated_v1","table_id":"flow_UT003_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT003_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_consolidated_v2","table_id":"flow_UT003_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT003_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_v1","table_id":"flow_UT003_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT003_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT003_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT003_split_v2","table_id":"flow_UT003_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT003_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UT004_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT004_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT004_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT004_POST_NEXUS_split_v1","table_id":"flow_UT004_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT004_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT004_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT004_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT004_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT004_split_v2","table_id":"flow_UT004_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `header`,\n  `footer`,\n  `metadata`,\n  `recordId`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT004_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_UT004_split_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT004_split_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT004_split_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT004_split_v3","table_id":"flow_UT004_split_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT004_split_v3`"},"data-engineering-prod:landing_andromeda_secure.flow_UT006_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT006_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT006_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT006_split_v1","table_id":"flow_UT006_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT006_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT008_split_consolidated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT008_split_consolidated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT008_split_consolidated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT008_split_consolidated_v1","table_id":"flow_UT008_split_consolidated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT008_split_consolidated_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_UT008_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_UT008_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT008_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_UT008_split_v1","table_id":"flow_UT008_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_UT008_split_v1`"},"data-engineering-prod:landing_andromeda_secure.flow_WAO_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_WAO_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WAO_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WAO_split_consolidated_v2","table_id":"flow_WAO_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_WAO_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_WAO_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_WAO_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WAO_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WAO_split_v2","table_id":"flow_WAO_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_WAO_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_WOR_split_consolidated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_WOR_split_consolidated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WOR_split_consolidated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WOR_split_consolidated_v2","table_id":"flow_WOR_split_consolidated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_WOR_split_consolidated_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_WOR_split_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_WOR_split_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WOR_split_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_WOR_split_v2","table_id":"flow_WOR_split_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flow_WOR_split_v2`"},"data-engineering-prod:landing_andromeda_secure.flow_backfill_dates_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flow_backfill_dates_v1","location":"EU","num_bytes":45,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_backfill_dates_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flow_backfill_dates_v1","table_id":"flow_backfill_dates_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1","location":"EU","num_bytes":397468,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_denylisted_flow_md5_hash_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_denylisted_flow_md5_hash_v1","table_id":"flows_denylisted_flow_md5_hash_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.flows_enabled_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_enabled_v1","location":"EU","num_bytes":10735,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_enabled_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_enabled_v1","table_id":"flows_enabled_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v1","table_id":"flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `parsedBlobPath`,\n  `parsedBlobType`,\n  `parsedBlobMd5Hash`,\n  `rootGroupsCount`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v1`"},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2","table_id":"flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `parsedBlobPath`,\n  `parsedBlobType`,\n  `parsedBlobMd5Hash`,\n  `rootGroupsCount`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2`"},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v1","table_id":"flows_parsed_flow_seen_on_kafka_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_kafka_v1`"},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v2","table_id":"flows_parsed_flow_seen_on_kafka_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_kafka_v2`"},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v3","table_id":"flows_parsed_flow_seen_on_kafka_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_kafka_v3`"},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v4","table_id":"flows_parsed_flow_seen_on_kafka_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_kafka_v4`"},"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka_v5","table_id":"flows_parsed_flow_seen_on_kafka_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_parsed_flow_seen_on_kafka_v5`"},"data-engineering-prod:landing_andromeda_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3","table_id":"flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `sourceBucket`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3`"},"data-engineering-prod:landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake_v1","table_id":"flows_raw_flow_seen_on_gs_industry_data_lake_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v1`"},"data-engineering-prod:landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake_v2","table_id":"flows_raw_flow_seen_on_gs_industry_data_lake_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v2`"},"data-engineering-prod:landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake_v3","table_id":"flows_raw_flow_seen_on_gs_industry_data_lake_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v3`"},"data-engineering-prod:landing_andromeda_secure.flows_sent_status_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_sent_status_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_sent_status_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_sent_status_v1","table_id":"flows_sent_status_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `recordId`,\n  `correspondent`,\n  `filename`,\n  `flowName`,\n  `eventType`,\n  `eventTimestamp`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_sent_status_v1`"},"data-engineering-prod:landing_andromeda_secure.flows_split_consolidated_flow_record_seen_on_kafka_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_consolidated_flow_record_seen_on_kafka_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_consolidated_flow_record_seen_on_kafka_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_consolidated_flow_record_seen_on_kafka_v1","table_id":"flows_split_consolidated_flow_record_seen_on_kafka_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `rawSourceRecordsCount`,\n  `sourceBucket`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_consolidated_flow_record_seen_on_kafka_v1`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v1","table_id":"flows_split_flow_record_seen_on_kafka_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v1`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v2","table_id":"flows_split_flow_record_seen_on_kafka_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v2`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v3","table_id":"flows_split_flow_record_seen_on_kafka_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v3`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v4","table_id":"flows_split_flow_record_seen_on_kafka_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v4`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v5","table_id":"flows_split_flow_record_seen_on_kafka_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v5`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v6","table_id":"flows_split_flow_record_seen_on_kafka_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v6`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v7","table_id":"flows_split_flow_record_seen_on_kafka_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v7`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v8":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v8","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v8","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v8","table_id":"flows_split_flow_record_seen_on_kafka_v8","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v8`"},"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v9":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v9","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v9","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka_v9","table_id":"flows_split_flow_record_seen_on_kafka_v9","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `flowRecordId`,\n  `flowNameNoVersion`,\n  `rawSourceBlobMd5Hash`,\n  `rawSourceBlobPath`,\n  `seenAt`,\n  `kafka`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_split_flow_record_seen_on_kafka_v9`"},"data-engineering-prod:landing_andromeda_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1","table_id":"flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `rawSourceBlobPath`,\n  `rawSourceBlobMd5Hash`,\n  `sourceBucket`,\n  `seenAt`,\n  `cloudStorage`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_annualised_advance_calculated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_annualised_advance_calculated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_annualised_advance_calculated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_annualised_advance_calculated_v1","table_id":"rac_annualised_advance_calculated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_annualised_advance_calculated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_boost_msd_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_boost_msd_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_boost_msd_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_boost_msd_received_v1","table_id":"rac_boost_msd_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `snapshotData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_boost_msd_received_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_consumption_generated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_consumption_generated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_generated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_generated_v6","table_id":"rac_consumption_generated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `consumptionId`,\n  `mpan`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `debugInfo`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_consumption_generated_v6`"},"data-engineering-prod:landing_andromeda_secure.rac_consumption_generated_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_consumption_generated_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_generated_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_generated_v7","table_id":"rac_consumption_generated_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_consumption_generated_v7`"},"data-engineering-prod:landing_andromeda_secure.rac_consumption_loss_adjustment_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_consumption_loss_adjustment_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_loss_adjustment_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_loss_adjustment_generated_v1","table_id":"rac_consumption_loss_adjustment_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `meterRead`,\n  `meterReadDateTime`,\n  `lossRead`,\n  `lossReadDateTime`,\n  `consumptionAdjustment`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_consumption_loss_adjustment_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_consumption_requested_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_consumption_requested_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_requested_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_consumption_requested_v1","table_id":"rac_consumption_requested_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_consumption_requested_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_electricity_consumption_consolidated":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_electricity_consumption_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_consumption_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_consumption_consolidated","table_id":"rac_electricity_consumption_consolidated","time_partitioning":null,"view_query":"WITH electricity_consumption AS (\n  SELECT STRUCT(metadata.traceToken AS traceToken,\n                metadata.createdAt AS createdAt) AS metadata,\n         mpan,\n         msn,\n         fromReading.readingDateTime AS fromDateTime,\n         toReading.readingDateTime AS toDateTime,\n         ARRAY(SELECT STRUCT(cons_reg.tier,\n                             cons_reg.clockingTimeId,\n                             from_reg.reading AS fromMeterReading,\n                             to_reg.reading AS toMeterReading,\n                             cons_reg.energy AS consumption,\n                             fromReading.readingType AS fromReadingType,\n                             toReading.readingType AS toReadingType)) tiers,\n         kafkaData.insertTime AS insertTime\n  FROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5` r\n  INNER JOIN UNNEST (consumption.registers) AS cons_reg\n  INNER JOIN UNNEST (fromReading.registers) AS from_reg ON from_reg.tier=cons_reg.tier\n  INNER JOIN UNNEST (toReading.registers) AS to_reg ON to_reg.tier=cons_reg.tier\n\n  UNION ALL\n\n  SELECT STRUCT(metadata.traceToken AS traceToken,\n         metadata.createdAt AS createdAt) AS metadata, \n         mpan,\n         msn, \n         fromDateTime, \n         toDateTime, \n         tiers,\n         kafkaData.insertTime AS insertTime\n\t\tFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4` r\n   \n\t  UNION ALL\n\n\t\tSELECT metadata,\n           mpan,\n           msn,\n           fromDateTime,\n           toDateTime,\n           ARRAY(SELECT STRUCT(t.tier,\n                               t.clockingTimeId,\n                               t.fromMeterReading,\n                               t.toMeterReading,\n                               t.consumption,\n                               'SmartReading' as fromReadingType,\n                               'SmartReading' as toReadingType)) tiers,\n           metadata.createdAt AS insertTime\n\t\tFROM `data-engineering-prod.landing_andromeda_secure.rac_historic_electricity_consumption` r\n    INNER JOIN UNNEST(r.tiers) t\n\t\n)\n\nSELECT ec.*\nFROM electricity_consumption AS ec\nLEFT JOIN electricity_consumption AS overlapping \nON overlapping.mpan = ec.mpan \nAND overlapping.fromDateTime < ec.toDateTime \nAND overlapping.toDateTime > ec.fromDateTime \nAND overlapping.insertTime > ec.insertTime\nWHERE overlapping.mpan IS NULL"},"data-engineering-prod:landing_andromeda_secure.rac_electricity_loss_reading_inferred_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_electricity_loss_reading_inferred_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_loss_reading_inferred_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_loss_reading_inferred_v1","table_id":"rac_electricity_loss_reading_inferred_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `lossReading`,\n  `mpan`,\n  `electricityLossSource`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_electricity_loss_reading_inferred_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_electricity_loss_reading_inferred_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_electricity_loss_reading_inferred_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_loss_reading_inferred_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_loss_reading_inferred_v2","table_id":"rac_electricity_loss_reading_inferred_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `lossReading`,\n  `mpan`,\n  `electricityLossSource`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_electricity_loss_reading_inferred_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_electricity_manual_loss_read_submitted_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_electricity_manual_loss_read_submitted_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_manual_loss_read_submitted_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_electricity_manual_loss_read_submitted_v1","table_id":"rac_electricity_manual_loss_read_submitted_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `lossReading`,\n  `mpan`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_electricity_manual_loss_read_submitted_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_flow_nrl_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_flow_nrl_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_flow_nrl_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_flow_nrl_received_v1","table_id":"rac_flow_nrl_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `item`,\n  `trailer`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_flow_nrl_received_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_gas_consumption_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_consumption_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_consumption_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_consumption_generated_v5","table_id":"rac_gas_consumption_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_gas_consumption_generated_v5`"},"data-engineering-prod:landing_andromeda_secure.rac_gas_consumption_generated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_consumption_generated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_consumption_generated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_consumption_generated_v6","table_id":"rac_gas_consumption_generated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_gas_consumption_generated_v6`"},"data-engineering-prod:landing_andromeda_secure.rac_gas_consumption_loss_adjustment_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_consumption_loss_adjustment_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_consumption_loss_adjustment_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_consumption_loss_adjustment_generated_v1","table_id":"rac_gas_consumption_loss_adjustment_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `chargingZone`,\n  `meterRead`,\n  `meterReadDateTime`,\n  `lossRead`,\n  `lossReadDateTime`,\n  `volumeAdjustment`,\n  `calorificValues`,\n  `effectiveCalorificValue`,\n  `consumptionAdjustment`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_gas_consumption_loss_adjustment_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_gas_energy_consumption_consolidated":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_energy_consumption_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_energy_consumption_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_energy_consumption_consolidated","table_id":"rac_gas_energy_consumption_consolidated","time_partitioning":null,"view_query":"WITH gas_energy_consumption AS (\n    SELECT STRUCT(metadata.traceToken AS traceToken,\n                  metadata.createdAt AS createdAt) AS metadata,\n           mprn,\n           msn,\n           consumption.chargingZone,\n           fromReading.readingDateTime AS fromDateTime,\n           fromReading.reading AS fromMeterReading,\n           fromReading.readingType AS fromReadingType,\n           toReading.readingDateTime AS toDateTime,\n           toReading.reading AS toMeterReading,\n           toReading.readingType AS toReadingType,\n           consumption.volume AS volume,\n           consumption.calorificValues,\n           consumption.effectiveCalorificValue,\n           consumption.energy AS consumption,\n           kafkaData.insertTime AS insertTime\n    FROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v5` r\n\n  UNION ALL\n\t\n\t\tSELECT STRUCT(metadata.traceToken AS traceToken\n                  , metadata.createdAt AS createdAt) AS metadata\n                  , mprn\n                  , msn\n                  , chargingZone\n                  , fromDateTime\n                  , fromMeterReading\n                  , fromReadingType\t\n                  , toDateTime\n                  , toMeterReading\n                  , toReadingType\n                  , volume\n                  , calorificValues\n                  , effectiveCalorificValue\n                  , consumption\n                  , kafkaData.insertTime AS insertTime\n\t\tFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v2`\n\t\n\tUNION ALL\n\t\n\t\tSELECT metadata\n          , mprn\n          , msn\n          , chargingZone\n          , fromDateTime\n          , fromMeterReading\n          , 'SmartReading' AS fromReadingType\n          , toDateTime\n          , toMeterReading\n          , 'SmartReading' AS toReadingType\n          , volume\n          , calorificValues\n          , effectiveCalorificValue\n          , consumption\n          , metadata.createdAt AS insertTime\n\t\tFROM `data-engineering-prod.landing_andromeda_secure.rac_historic_gas_energy_consumption`\n\t\n)\n\nSELECT gec.*\nFROM gas_energy_consumption AS gec\nLEFT JOIN gas_energy_consumption AS overlapping\n       ON overlapping.mprn = gec.mprn\n       AND overlapping.fromDateTime < gec.toDateTime AND overlapping.toDateTime > gec.fromDateTime\n       AND overlapping.insertTime > gec.insertTime\nWHERE overlapping.mprn IS NULL"},"data-engineering-prod:landing_andromeda_secure.rac_gas_loss_reading_inferred_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_loss_reading_inferred_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_loss_reading_inferred_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_loss_reading_inferred_v1","table_id":"rac_gas_loss_reading_inferred_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `lossReading`,\n  `mprn`,\n  `gasLossSource`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_gas_loss_reading_inferred_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_gas_loss_reading_inferred_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_loss_reading_inferred_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_loss_reading_inferred_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_loss_reading_inferred_v3","table_id":"rac_gas_loss_reading_inferred_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `lossReading`,\n  `mprn`,\n  `gasLossSource`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_gas_loss_reading_inferred_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_gas_volume_generated_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_gas_volume_generated_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_volume_generated_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_gas_volume_generated_v6","table_id":"rac_gas_volume_generated_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_gas_volume_generated_v6`"},"data-engineering-prod:landing_andromeda_secure.rac_hh_simplified_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_hh_simplified_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_hh_simplified_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_hh_simplified_v1","table_id":"rac_hh_simplified_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `value`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_hh_simplified_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_historic_electricity_consumption":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_historic_electricity_consumption","location":"EU","num_bytes":31941877268,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_historic_electricity_consumption","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_historic_electricity_consumption","table_id":"rac_historic_electricity_consumption","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.rac_historic_gas_energy_consumption":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_historic_gas_energy_consumption","location":"EU","num_bytes":35712442381,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_historic_gas_energy_consumption","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_historic_gas_energy_consumption","table_id":"rac_historic_gas_energy_consumption","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.rac_manual_gas_loss_read_submitted_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_manual_gas_loss_read_submitted_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_manual_gas_loss_read_submitted_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_manual_gas_loss_read_submitted_v1","table_id":"rac_manual_gas_loss_read_submitted_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `lossReading`,\n  `mprn`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_manual_gas_loss_read_submitted_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_manual_read_submitted_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_manual_read_submitted_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_manual_read_submitted_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_manual_read_submitted_v2","table_id":"rac_manual_read_submitted_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_manual_read_submitted_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v1","table_id":"rac_mpxn_electricity_consumption_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v2","table_id":"rac_mpxn_electricity_consumption_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_generated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v3","table_id":"rac_mpxn_electricity_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDateTime`,\n  `toDateTime`,\n  `tiers`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v4","table_id":"rac_mpxn_electricity_consumption_generated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDateTime`,\n  `toDateTime`,\n  `tiers`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_generated_v4`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated_v5","table_id":"rac_mpxn_electricity_consumption_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDate`,\n  `toDate`,\n  `fromReading`,\n  `toReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_generated_v5`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_hh_apportionment_calculated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_hh_apportionment_calculated_v2","table_id":"rac_mpxn_electricity_consumption_hh_apportionment_calculated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDateTime`,\n  `toDateTime`,\n  `totalConsumption`,\n  `apportionedConsumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3","table_id":"rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `msn`,\n  `fromDateTime`,\n  `toDateTime`,\n  `totalConsumption`,\n  `apportionedConsumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v1","table_id":"rac_mpxn_gas_energy_consumption_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `chargingZone`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `calorificValues`,\n  `effectiveCalorificValue`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_energy_consumption_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v2","table_id":"rac_mpxn_gas_energy_consumption_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `chargingZone`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `calorificValues`,\n  `effectiveCalorificValue`,\n  `consumption`,\n  `kafkaData`,\n  `fromReadingType`,\n  `toReadingType`,\n  `unitOfMeasurement`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_energy_consumption_generated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v3","table_id":"rac_mpxn_gas_energy_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDate`,\n  `toDate`,\n  `fromReading`,\n  `toReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_energy_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated_v5","table_id":"rac_mpxn_gas_energy_consumption_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDate`,\n  `toDate`,\n  `fromReading`,\n  `toReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_energy_consumption_generated_v5`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_volume_consumption_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_volume_consumption_generated_v1","table_id":"rac_mpxn_gas_volume_consumption_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `chargingZone`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_volume_consumption_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_volume_consumption_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_volume_consumption_generated_v2","table_id":"rac_mpxn_gas_volume_consumption_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `volume`,\n  `chargingZone`,\n  `kafkaData`,\n  `fromReadingType`,\n  `toReadingType`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_volume_consumption_generated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_volume_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_mpxn_gas_volume_consumption_generated_v3","table_id":"rac_mpxn_gas_volume_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mprn`,\n  `msn`,\n  `fromDate`,\n  `toDate`,\n  `fromReading`,\n  `toReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_mpxn_gas_volume_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_consumption_requested_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_consumption_requested_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_consumption_requested_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_consumption_requested_v1","table_id":"rac_msn_consumption_requested_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_consumption_requested_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_consumption_requested_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_consumption_requested_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_consumption_requested_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_consumption_requested_v2","table_id":"rac_msn_consumption_requested_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_consumption_requested_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v1","table_id":"rac_msn_electricity_consumption_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_electricity_consumption_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v2","table_id":"rac_msn_electricity_consumption_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_electricity_consumption_generated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v3","table_id":"rac_msn_electricity_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDateTime`,\n  `toDateTime`,\n  `tiers`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_electricity_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v4","table_id":"rac_msn_electricity_consumption_generated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDateTime`,\n  `toDateTime`,\n  `tiers`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_electricity_consumption_generated_v4`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_electricity_consumption_generated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated_v5","table_id":"rac_msn_electricity_consumption_generated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDate`,\n  `toDate`,\n  `fromReading`,\n  `toReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_electricity_consumption_generated_v5`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated_v1","table_id":"rac_msn_gas_volume_consumption_generated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `gasVolume`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_gas_volume_consumption_generated_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated_v2","table_id":"rac_msn_gas_volume_consumption_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDateTime`,\n  `fromMeterReading`,\n  `toDateTime`,\n  `toMeterReading`,\n  `gasVolume`,\n  `kafkaData`,\n  `fromReadingType`,\n  `toReadingType`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_gas_volume_consumption_generated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated_v3","table_id":"rac_msn_gas_volume_consumption_generated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `msn`,\n  `fromDate`,\n  `toDate`,\n  `fromReading`,\n  `toReading`,\n  `consumption`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_msn_gas_volume_consumption_generated_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_orion_personal_projections_published_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_orion_personal_projections_published_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_orion_personal_projections_published_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_orion_personal_projections_published_v3","table_id":"rac_orion_personal_projections_published_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_orion_personal_projections_published_v3`"},"data-engineering-prod:landing_andromeda_secure.rac_personal_projections_calculated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_personal_projections_calculated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_personal_projections_calculated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_personal_projections_calculated_v2","table_id":"rac_personal_projections_calculated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_personal_projections_calculated_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_personal_projections_calculated_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_personal_projections_calculated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_personal_projections_calculated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_personal_projections_calculated_v4","table_id":"rac_personal_projections_calculated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_personal_projections_calculated_v4`"},"data-engineering-prod:landing_andromeda_secure.rac_personal_projections_calculated_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_personal_projections_calculated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_personal_projections_calculated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_personal_projections_calculated_v5","table_id":"rac_personal_projections_calculated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_personal_projections_calculated_v5`"},"data-engineering-prod:landing_andromeda_secure.rac_profile_data_backfilled_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_profile_data_backfilled_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_profile_data_backfilled_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_profile_data_backfilled_v1","table_id":"rac_profile_data_backfilled_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `profileData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_profile_data_backfilled_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_profile_data_received_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_profile_data_received_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_profile_data_received_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_profile_data_received_v1","table_id":"rac_profile_data_received_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `profileData`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_profile_data_received_v1`"},"data-engineering-prod:landing_andromeda_secure.rac_readings_requested_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_readings_requested_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_readings_requested_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_readings_requested_v2","table_id":"rac_readings_requested_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `fuelType`,\n  `date`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_readings_requested_v2`"},"data-engineering-prod:landing_andromeda_secure.rac_readings_requested_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.rac_readings_requested_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_readings_requested_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/rac_readings_requested_v3","table_id":"rac_readings_requested_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `msn`,\n  `fuelType`,\n  `date`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.rac_readings_requested_v3`"},"data-engineering-prod:landing_andromeda_secure.results_20190204_121755_jt_temp":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.results_20190204_121755_jt_temp","location":"EU","num_bytes":17270088,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/results_20190204_121755_jt_temp","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/results_20190204_121755_jt_temp","table_id":"results_20190204_121755_jt_temp","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.results_20190206_125316":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.results_20190206_125316","location":"EU","num_bytes":17249961,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/results_20190206_125316","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/results_20190206_125316","table_id":"results_20190206_125316","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.results_20190212_095935":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.results_20190212_095935","location":"EU","num_bytes":17249304,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/results_20190212_095935","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/results_20190212_095935","table_id":"results_20190212_095935","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.sfe_tariff_change_history":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.sfe_tariff_change_history","location":"EU","num_bytes":192542207,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/sfe_tariff_change_history","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/sfe_tariff_change_history","table_id":"sfe_tariff_change_history","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.smart_read_spam_mpxn_to_msn_mismatch":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.smart_read_spam_mpxn_to_msn_mismatch","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/smart_read_spam_mpxn_to_msn_mismatch","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/smart_read_spam_mpxn_to_msn_mismatch","table_id":"smart_read_spam_mpxn_to_msn_mismatch","time_partitioning":null,"view_query":"with sfe as (\nselect  if (MSN is null, 'null', MSN) as MSN, \n        if (MPXN is null, 0, CAST(MPXN AS INT64)) as MPXN,\n        timestamp,\n        lower(fuel) fuel\n        from (\n         select snapshotData.device.serialNumber MSN,\n                SAFE_CAST(snapshotData.device.servicePointNumber AS INT64) MPXN,\n                snapshotData.device.supplyType fuel,                \n                snapshotData.device.snapshotTime as timestamp,\n                row_number() over (partition by snapshotData.device.servicePointNumber order by snapshotData.device.snapshotTime desc) rank\n         from `data-engineering-prod.raw_andromeda_secure.rac_msd_received`\n         where snapshotData.device.snapshotTime < current_timestamp()\n        )\n       where rank = 1\n),\n\nsmets2_e as (\n    select if (MSN is null, 'null', MSN) as MSN, \n           if (MPXN is null, 0, CAST(MPXN AS INT64)) as MPXN,\n           timestamp,\n           'electricity' fuel\n    from (select body.xreadOut01.meter.msn MSN,\n                 SAFE_CAST(body.xreadOut01.meter.importMpan AS INT64) MPXN,\n                 header.timestamp as timestamp,\n                 row_number() over (partition by body.xreadOut01.meter.importMpan order by header.timestamp desc) rank\n           from `data-engineering-prod.raw_andromeda_secure.flow_BOL_XREADOUT01_validated` \n           where header.timestamp < current_timestamp()\n     )\n     where rank = 1\n     and MPXN != 0\n),\n\nsmets2_g as (\n    select if (MSN is null, 'null', MSN) as MSN, \n           if (MPXN is null, 0, CAST(MPXN AS INT64)) as MPXN,\n           timestamp,\n           'gas' fuel\n    from (select body.xreadOut01.meter.msn MSN,\n                 SAFE_CAST(body.xreadOut01.meter.importMprn AS INT64) MPXN,\n                 header.timestamp as timestamp,\n                 row_number() over (partition by body.xreadOut01.meter.importMprn order by header.timestamp desc) rank\n           from `data-engineering-prod.raw_andromeda_secure.flow_BOL_XREADOUT01_validated` \n           where header.timestamp < current_timestamp()\n     )\n     where rank = 1\n     and MPXN != 0\n),\n           \nsmets2 as (\n  select * from smets2_g \n  \n  union all \n  \n  select * from smets2_e\n),           \n\nlatest_read_union as (\n  select * from sfe\n  \n  union all\n  \n  select * from smets2\n),\n\nlatest_read_mapping as (\n  select *\n  from (\n      select MSN,\n             MPXN,\n             timestamp,\n             fuel,\n             row_number() over (partition by MPXN order by timestamp desc) rank\n       from latest_read_union\n   )\n   where rank = 1\n   AND CAST(timestamp AS DATE) >= DATE_SUB(CURRENT_DATE,INTERVAL 2 MONTH)\n),\n\nspam_e AS (\n    SELECT CAST(t.MPXN AS INT64) spam_MPXN, \n           if (MSN is null, 'null', MSN) spam_MSN, \n           insert_time,\n           'electricity' fuel\n    FROM (\n        SELECT MPXN, \n               MSN, \n               kafkaData.insertTime as insert_time, \n               ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n        FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n        INNER JOIN UNNEST(supplyPeriods) sp\n        INNER JOIN UNNEST(installationHistory) ih\n     ) t\n     WHERE t.rank = 1\n),\n            \nspam_g AS (\n    SELECT CAST(t.MPXN AS INT64) spam_MPXN, \n           if (MSN is null, 'null', MSN) spam_MSN, \n           insert_time,\n           'gas' fuel\n    FROM (\n        SELECT MPXN, \n               MSN, \n               kafkaData.insertTime as insert_time, \n               ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n        FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n        INNER JOIN UNNEST(supplyPeriods) sp\n        INNER JOIN UNNEST(installationHistory) ih\n     ) t\n     WHERE t.rank = 1\n),\n\nspam as (\n    select * from spam_e\n    where CAST(insert_time AS DATE) >= DATE_SUB(CURRENT_DATE,INTERVAL 2 MONTH)\n    \n    union all \n    \n    select * from spam_g\n    where CAST(insert_time AS DATE) >= DATE_SUB(CURRENT_DATE,INTERVAL 2 MONTH)\n),\n\norion AS (\n    SELECT cast(mpxn as int64) mpxn,\n           true on_orion\n    FROM `data-engineering-prod.product_andromeda_secure.supply_points`\n    WHERE chargeMandateStatus = 'Has Current Charge Mandate'\n),\n\nsp_details as (\nselect spam_MPXN MPXN,\n       spam_MSN msn, \n       s.fuel\nfrom spam s\nJOIN latest_read_mapping m on s.spam_MPXN = m.MPXN and s.fuel = m.fuel and s.spam_MSN != m.MSN\n)\n\nselect sp_details.*,\n       if(orion.on_orion is true, true, false) on_orion\nfrom sp_details\nleft join orion on sp_details.mpxn = orion.mpxn"},"data-engineering-prod:landing_andromeda_secure.spam_billingOverrides_overrideError_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_billingOverrides_overrideError_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_billingOverrides_overrideError_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_billingOverrides_overrideError_v1","table_id":"spam_billingOverrides_overrideError_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `fuel`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_billingOverrides_overrideError_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_current_electricity_mapping":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_current_electricity_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_current_electricity_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_current_electricity_mapping","table_id":"spam_current_electricity_mapping","time_partitioning":null,"view_query":"with\nlatest_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n--   ignore BigQuery messages inserted more than 90 days ago\n  where kafkaData.insertTime > TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL -90 DAY)) where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from latest_data_per_sp\n),\n\nwith_convenience_fields as (\n  select *,\n          case\n           when latestSupplyPeriod.lossConfirmed is true and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date()\n             -- is loss confirmed and has an end date set and end date is before today\n           then \"offSupply\"\n           when (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is null and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null))\n             or (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate >= current_date())\n             -- isn't missing supply period data, and either doesn't have a loss journey (is not loss confirmed and has no end date set)\n             -- or is in the loss journey but hasn't reached loss yet (has end date set and end date is before or equal to today)\n           then \"onSupply\"\n           when latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date() and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null)\n           -- when it looks like it should have been lost, but we haven't received lossConfirmed, it's likely in dispute and so still on supply\n           then \"unconfirmedLoss\"\n           else \"NULL\" end supplyOnOff,\n         latestSupplyPeriod.supplyEndDate is not null and current_date() <= date_add(latestSupplyPeriod.supplyEndDate, interval 20 day) inLoss,\n         latestSupplyPeriod.supplyStartDate is not null and current_date() < latestSupplyPeriod.supplyStartDate ingain\n  from with_latest_meter_and_supply),\n  \nambiguous_meters as (select MSN, if(total > 1, true, false) ambiguous_meter from\n           (select latestInstallation.MSN, count(1) total\n            from with_convenience_fields\n            where latestInstallation.MSN != \"NULL\"\n            and supplyPointType != \"export\"\n            and supplyOnOff != \"offSupply\"\n            group by MSN))\n\nselect MPXN,\n       (case when latestInstallation.MSN is null then \"NULL\" else latestInstallation.MSN end) MSN,\n       kafkaData.insertTime insertTime,\n       (case when latestInstallation.MSN is null then false else true end) mappingFound,\n       (case when inloss = true then \"in loss\"\n             when ingain = true then \"in gain\"\n             else supplyOnOff end) supplyStatus,\n       ambiguous_meter\nfrom with_convenience_fields\nLEFT JOIN ambiguous_meters on latestInstallation.MSN = ambiguous_meters.MSN"},"data-engineering-prod:landing_andromeda_secure.spam_current_gas_mapping":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_current_gas_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_current_gas_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_current_gas_mapping","table_id":"spam_current_gas_mapping","time_partitioning":null,"view_query":"with\nlatest_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n--   ignore BigQuery messages inserted more than 90 days ago\n  where kafkaData.insertTime > TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL -90 DAY)) where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from latest_data_per_sp\n),\n\nwith_convenience_fields as (\n  select *,\n          case\n           when latestSupplyPeriod.lossConfirmed is true and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date()\n             -- is loss confirmed and has an end date set and end date is before today\n           then \"offSupply\"\n           when (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is null and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null))\n             or (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate >= current_date())\n             -- isn't missing supply period data, and either doesn't have a loss journey (is not loss confirmed and has no end date set)\n             -- or is in the loss journey but hasn't reached loss yet (has end date set and end date is before or equal to today)\n           then \"onSupply\"\n           when latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date() and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null)\n           -- when it looks like it should have been lost, but we haven't received lossConfirmed, it's likely in dispute and so still on supply\n           then \"unconfirmedLoss\"\n           else \"NULL\" end supplyOnOff,\n         latestSupplyPeriod.supplyEndDate is not null and current_date() <= date_add(latestSupplyPeriod.supplyEndDate, interval 20 day) inLoss,\n         latestSupplyPeriod.supplyStartDate is not null and current_date() < latestSupplyPeriod.supplyStartDate ingain\n  from with_latest_meter_and_supply),\n  \nambiguous_meters as (select MSN, if(total > 1, true, false) ambiguous_meter from\n           (select latestInstallation.MSN, count(1) total\n            from with_convenience_fields\n            where latestInstallation.MSN != \"NULL\"\n            and supplyOnOff != \"offSupply\"\n            group by MSN))\n\nselect MPXN,\n       (case when latestInstallation.MSN is null then \"NULL\" else latestInstallation.MSN end) MSN,\n       kafkaData.insertTime insertTime,\n       (case when latestInstallation.MSN is null then false else true end) mappingFound,\n       (case when inloss = true then \"in loss\"\n             when ingain = true then \"in gain\"\n             else supplyOnOff end) supplyStatus,\n       ambiguous_meter\nfrom with_convenience_fields\nLEFT JOIN ambiguous_meters on latestInstallation.MSN = ambiguous_meters.MSN"},"data-engineering-prod:landing_andromeda_secure.spam_d_minus_1_electricity_mapping":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_d_minus_1_electricity_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_d_minus_1_electricity_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_d_minus_1_electricity_mapping","table_id":"spam_d_minus_1_electricity_mapping","time_partitioning":null,"view_query":"with\nday_minus_one_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n  where kafkaData.insertTime < TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL -1 DAY)) where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from day_minus_one_data_per_sp\n),\n\nwith_convenience_fields as (\n  select *,\n          case\n           when latestSupplyPeriod.lossConfirmed is true and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date()\n             -- is loss confirmed and has an end date set and end date is before today\n           then \"offSupply\"\n           when (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is null and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null))\n             or (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate >= current_date())\n             -- isn't missing supply period data, and either doesn't have a loss journey (is not loss confirmed and has no end date set)\n             -- or is in the loss journey but hasn't reached loss yet (has end date set and end date is before or equal to today)\n           then \"onSupply\"\n           when latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date() and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null)\n           -- when it looks like it should have been lost, but we haven't received lossConfirmed, it's likely in dispute and so still on supply\n           then \"unconfirmedLoss\"\n           else \"NULL\" end supplyOnOff,\n         latestSupplyPeriod.supplyEndDate is not null and current_date() <= date_add(latestSupplyPeriod.supplyEndDate, interval 20 day) inLoss,\n         latestSupplyPeriod.supplyStartDate is not null and current_date() < latestSupplyPeriod.supplyStartDate ingain\n  from with_latest_meter_and_supply),\n\nambiguous_meters as (select MSN, if(total > 1, true, false) ambiguous_meter from\n           (select latestInstallation.MSN, count(1) total\n            from with_convenience_fields\n            where latestInstallation.MSN != \"NULL\"\n            and supplyPointType != \"export\"\n            and supplyOnOff != \"offSupply\"\n            group by MSN))\n\nselect MPXN,\n       (case when latestInstallation.MSN is null then \"NULL\" else latestInstallation.MSN end) MSN,\n       kafkaData.insertTime insertTime,\n       (case when latestInstallation.MSN is null then false else true end) mappingFound,\n       (case when inloss = true then \"in loss\"\n             when ingain = true then \"in gain\"\n             else supplyOnOff end) supplyStatus,\n       ambiguous_meter\nfrom with_convenience_fields\nLEFT JOIN ambiguous_meters on latestInstallation.MSN = ambiguous_meters.MSN"},"data-engineering-prod:landing_andromeda_secure.spam_d_minus_1_gas_mapping":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_d_minus_1_gas_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_d_minus_1_gas_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_d_minus_1_gas_mapping","table_id":"spam_d_minus_1_gas_mapping","time_partitioning":null,"view_query":"with\nday_minus_one_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n  where kafkaData.insertTime < TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL -1 DAY)) where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from day_minus_one_data_per_sp\n),\n\nwith_convenience_fields as (\n  select *,\n          case\n           when latestSupplyPeriod.lossConfirmed is true and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date()\n             -- is loss confirmed and has an end date set and end date is before today\n           then \"offSupply\"\n           when (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is null and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null))\n             or (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate >= current_date())\n             -- isn't missing supply period data, and either doesn't have a loss journey (is not loss confirmed and has no end date set)\n             -- or is in the loss journey but hasn't reached loss yet (has end date set and end date is before or equal to today)\n           then \"onSupply\"\n           when latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date() and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null)\n           -- when it looks like it should have been lost, but we haven't received lossConfirmed, it's likely in dispute and so still on supply\n           then \"unconfirmedLoss\"\n           else \"NULL\" end supplyOnOff,\n         latestSupplyPeriod.supplyEndDate is not null and current_date() <= date_add(latestSupplyPeriod.supplyEndDate, interval 20 day) inLoss,\n         latestSupplyPeriod.supplyStartDate is not null and current_date() < latestSupplyPeriod.supplyStartDate ingain\n  from with_latest_meter_and_supply),\n\nambiguous_meters as (select MSN, if(total > 1, true, false) ambiguous_meter from\n           (select latestInstallation.MSN, count(1) total\n            from with_convenience_fields\n            where latestInstallation.MSN != \"NULL\"\n            and supplyOnOff != \"offSupply\"\n            group by MSN))\n\nselect MPXN,\n       (case when latestInstallation.MSN is null then \"NULL\" else latestInstallation.MSN end) MSN,\n       kafkaData.insertTime insertTime,\n       (case when latestInstallation.MSN is null then false else true end) mappingFound,\n       (case when inloss = true then \"in loss\"\n             when ingain = true then \"in gain\"\n             else supplyOnOff end) supplyStatus,\n       ambiguous_meter\nfrom with_convenience_fields\nLEFT JOIN ambiguous_meters on latestInstallation.MSN = ambiguous_meters.MSN"},"data-engineering-prod:landing_andromeda_secure.spam_diff_all_mapping":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_diff_all_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_diff_all_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_diff_all_mapping","table_id":"spam_diff_all_mapping","time_partitioning":null,"view_query":"SELECT * FROM (WITH\n  elec_before AS (select s.MPXN, s.MSN, s.supplyStatus, s.ambiguous_meter, 'elec' fuel\nfrom `data-engineering-prod.landing_andromeda_secure.spam_d_minus_1_electricity_mapping` s),\n  gas_before AS (select s.MPXN, s.MSN, s.supplyStatus, s.ambiguous_meter, 'gas' fuel\nfrom `data-engineering-prod.landing_andromeda_secure.spam_d_minus_1_gas_mapping` s),\nbefore AS (SELECT * FROM elec_before UNION ALL SELECT * FROM gas_before),\n\n  elec_after AS (select s.MPXN, s.MSN, s.supplyStatus, s.ambiguous_meter, 'elec' fuel\nfrom `data-engineering-prod.landing_andromeda_secure.spam_current_electricity_mapping` s),\n  gas_after AS (select s.MPXN, s.MSN, s.supplyStatus, s.ambiguous_meter, 'gas' fuel\nfrom `data-engineering-prod.landing_andromeda_secure.spam_current_gas_mapping` s),\nafter AS (SELECT * FROM elec_after UNION ALL SELECT * FROM gas_after)\n\nSELECT after.*,\n  if(before.MSN != after.MSN, true, false) mapping_change,\n  if(before.supplyStatus != after.supplyStatus, true, false) status_change,\n  if(before.ambiguous_meter != after.ambiguous_meter, true, false) ambiguous_meter_change\n  FROM before, after\n  WHERE before.MPXN = after.MPXN)"},"data-engineering-prod:landing_andromeda_secure.spam_electricityFudges_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricityFudges_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricityFudges_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricityFudges_v1_internal","table_id":"spam_electricityFudges_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `action`,\n  `reason`,\n  `effectiveDateTime`,\n  `MSN`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricityFudges_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_electricityInstallation_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricityInstallation_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricityInstallation_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricityInstallation_v1","table_id":"spam_electricityInstallation_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MSN`,\n  `MPXN`,\n  `installationDate`,\n  `bgisCreationDate`,\n  `d149CreationDate`,\n  `d150CreationDate`,\n  `d303CreationDate`,\n  `installationFileCreationDate`,\n  `sfeInstallationCreationDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricityInstallation_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_electricityInstallation_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricityInstallation_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricityInstallation_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricityInstallation_v2","table_id":"spam_electricityInstallation_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MSN`,\n  `MPXN`,\n  `installationDate`,\n  `bgisCreationDate`,\n  `d149CreationDate`,\n  `d150CreationDate`,\n  `d303InstallationCreationDate`,\n  `installationFileCreationDate`,\n  `sfeInstallationCreationDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricityInstallation_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_INTERNAL":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_INTERNAL","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_INTERNAL","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_INTERNAL","table_id":"spam_electricitySupplyPointHistory_INTERNAL","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `installationHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPointHistory_INTERNAL`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_industry_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_industry_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_industry_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_industry_v1_internal","table_id":"spam_electricitySupplyPointHistory_industry_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyPointType`,\n  `installationHistory`,\n  `kafkaData`,\n  `profileClassId`,\n  `gspGroupId`,\n  `supplyPeriods`,\n  `lineLossFactorClassId`,\n  `addressLines`,\n  `postCode`,\n  `meterTimeswitchCode`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPointHistory_industry_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_megatron_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_megatron_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_megatron_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_megatron_v1_internal","table_id":"spam_electricitySupplyPointHistory_megatron_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `installationHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPointHistory_megatron_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_v1","table_id":"spam_electricitySupplyPointHistory_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `installationHistory`,\n  `kafkaData`,\n  `supplyPointType`,\n  `profileClassId`,\n  `gspGroupId`,\n  `supplyPeriods`,\n  `addressLines`,\n  `lineLossFactorClassId`,\n  `postCode`,\n  `meterTimeswitchCode`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPointHistory_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_v1_legacy":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_v1_legacy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_v1_legacy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_v1_legacy","table_id":"spam_electricitySupplyPointHistory_v1_legacy","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `installationHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPointHistory_v1_legacy`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPointHistory_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPointHistory_v2","table_id":"spam_electricitySupplyPointHistory_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyPointType`,\n  `profileClassId`,\n  `gspGroupId`,\n  `lineLossFactorClassId`,\n  `addressLines`,\n  `postCode`,\n  `supplyPeriods`,\n  `installationHistory`,\n  `kafkaData`,\n  `meterTimeswitchCode`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPointHistory_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_megatron_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_megatron_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_megatron_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_megatron_v1_internal","table_id":"spam_electricitySupplyPoint_megatron_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `MSN`,\n  `addressLines`,\n  `postCode`,\n  `lineLossFactorClassId`,\n  `gspGroupId`,\n  `profileClassId`,\n  `meterTimeswitchCode`,\n  `supplyStatus`,\n  `supplyHistory`,\n  `supplyPointType`,\n  `meterRegisterHistory`,\n  `meterNoOfDigitsOrDials`,\n  `kafkaData`,\n  `meterType`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_megatron_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyPeriods_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyPeriods_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyPeriods_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyPeriods_v1","table_id":"spam_electricitySupplyPoint_supplyPeriods_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `history`,\n  `latest`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_supplyPeriods_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_internal_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_internal_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyStatus_internal_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyStatus_internal_v1","table_id":"spam_electricitySupplyPoint_supplyStatus_internal_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyHistory`,\n  `currentStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_supplyStatus_internal_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_internal_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_internal_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyStatus_internal_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyStatus_internal_v2","table_id":"spam_electricitySupplyPoint_supplyStatus_internal_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `history`,\n  `current`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_supplyStatus_internal_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyStatus_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_supplyStatus_v1","table_id":"spam_electricitySupplyPoint_supplyStatus_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `history`,\n  `current`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_supplyStatus_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_v1","table_id":"spam_electricitySupplyPoint_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `addressLines`,\n  `postCode`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_v1_legacy":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_v1_legacy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_v1_legacy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_v1_legacy","table_id":"spam_electricitySupplyPoint_v1_legacy","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `MSN`,\n  `addressLines`,\n  `postCode`,\n  `lineLossFactorClassId`,\n  `gspGroupId`,\n  `profileClassId`,\n  `meterTimeswitchCode`,\n  `supplyStatus`,\n  `supplyHistory`,\n  `supplyPointType`,\n  `meterRegisterHistory`,\n  `meterNoOfDigitsOrDials`,\n  `meterType`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_v1_legacy`"},"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_electricitySupplyPoint_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_electricitySupplyPoint_v2","table_id":"spam_electricitySupplyPoint_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `MSN`,\n  `addressLines`,\n  `postCode`,\n  `lineLossFactorClassId`,\n  `gspGroupId`,\n  `profileClassId`,\n  `meterTimeswitchCode`,\n  `supplyStatus`,\n  `supplyHistory`,\n  `supplyPointType`,\n  `meterRegisterHistory`,\n  `kafkaData`,\n  `meterNoOfDigitsOrDials`,\n  `meterType`,\n  `measurementQuantityId`,\n  `meterRegisterMultiplier`,\n  `meterAssetProviderId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_electricitySupplyPoint_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__SPAM_MSN_mismatches_UG_MSN":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__SPAM_MSN_mismatches_UG_MSN","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__SPAM_MSN_mismatches_UG_MSN","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__SPAM_MSN_mismatches_UG_MSN","table_id":"spam_eligibility__elec__SPAM_MSN_mismatches_UG_MSN","time_partitioning":null,"view_query":"WITH \nutiliserve AS (SELECT * FROM (\n         SELECT cast(meter_point_no AS int64) mpxn,\n                upper(regexp_replace(utiliserve_meter_serial_no, ' ', '')) msn, \n                CAST(Is_Latest_Utiliserve_Transfer_Attempt AS STRING) TA\n         FROM   `data-engineering-prod.reporting_utiliserve.tbl_electricity_tracker`)\n         WHERE  TA = \"1\"),\n         \nspam AS ( \n       SELECT cast(mpxn AS int64) mpxn, \n              upper(regexp_replace(msn, ' ', '')) msn \n       FROM   `data-engineering-prod.landing_andromeda_secure.spam_current_electricity_mapping`)\n       \nSELECT    utiliserve.mpxn, \n          utiliserve.msn utiliserve_msn, \n          spam.msn spam_msn \nFROM      utiliserve \nLEFT JOIN spam \nON        utiliserve.mpxn = spam.mpxn \nWHERE     \n  (spam.msn IS NULL OR utiliserve.msn <> spam.msn)"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__ambiguous_meters_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__ambiguous_meters_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__ambiguous_meters_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__ambiguous_meters_nonorion","table_id":"spam_eligibility__elec__ambiguous_meters_nonorion","time_partitioning":null,"view_query":"WITH spam1 AS (\n  SELECT MPXN,\n         ih.MSN,\n         sp.supplyStartDate,\n         sp.supplyEndDate,\n         supplyPointType,\n         ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n  INNER JOIN UNNEST(installationHistory) ih\n  INNER JOIN UNNEST(supplyPeriods) sp\n),\nspam2 AS (\n  SELECT t.MPXN,\n         t.MSN\n  FROM spam1 t\n  WHERE t.rank = 1\n    AND t.MSN IS NOT NULL\n    AND supplyStartDate <= current_date()\n    AND (supplyEndDate >= CURRENT_DATE() OR supplyEndDate IS NULL)\n    AND (t.supplyPointType IS NULL OR t.supplyPointType != \"export\")\n),\nambiguous_meters AS (\n  SELECT t.MSN,\n         COUNT(*)\n  FROM spam2 t\n  GROUP BY t.MSN\n  HAVING COUNT(*) > 1\n)\n \nSELECT spam2.MPXN\nFROM spam2\nINNER JOIN ambiguous_meters a\n  ON spam2.MSN = a.MSN"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__invalid_ssc_tpr_combinations":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__invalid_ssc_tpr_combinations","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__invalid_ssc_tpr_combinations","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__invalid_ssc_tpr_combinations","table_id":"spam_eligibility__elec__invalid_ssc_tpr_combinations","time_partitioning":null,"view_query":"WITH valid_ssc_tpr_combos as (\n  select ssc valid_ssc,\n         (SELECT STRING_AGG(tprs)\n          FROM UNNEST(ARRAY(SELECT CAST(tpr as string)\n                            FROM UNNEST(tprs) AS tpr\n                            ORDER BY tpr)\n                            ) AS tprs) valid_tprs\n  FROM (\n    SELECT Standard_Settlement_Configuration_ID ssc,\n           ARRAY_AGG(DISTINCT Time_Pattern_Regime_ID) tprs\n    FROM `data-engineering-prod.landing_andromeda_secure.spam_eligibility__valid_measurement_requirement_profile_class_view` \n    GROUP BY Standard_Settlement_Configuration_ID)\n    ),\n\n spam_supply_points AS (\n  SELECT MPXN,\n         IF (meterRegisterHistory[ordinal(1)].ssc is null, 0, CAST(meterRegisterHistory[ordinal(1)].ssc AS INT64)) ssc,\n         IF (meterRegisterHistory[ordinal(1)].meterRegisters is null or array_length(meterRegisterHistory[ordinal(1)].meterRegisters) = 0,\n              \"NULL\",\n              (SELECT STRING_AGG(CAST(tpr AS STRING))\n                FROM (SELECT IF (registers.timePatternRegime IS NULL, 0, registers.timePatternRegime) AS tpr \n                      FROM unnest(meterRegisterHistory[ordinal(1)].meterRegisters) AS registers\n                      ORDER BY tpr))) spam_tprs\n  FROM (SELECT \n          MPXN, \n          MSN,\n          kafkaData.insertTime,\n          ARRAY(SELECT x\n                FROM UNNEST(meterRegisterHistory) AS x \n                ORDER BY startDate DESC) AS meterRegisterHistory,\n          ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n        FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n        LEFT JOIN UNNEST(supplyPeriods) sp\n        LEFT JOIN UNNEST(installationHistory) ih)\n  WHERE rank = 1\n    AND (meterRegisterHistory IS NOT NULL AND array_length(meterRegisterHistory) > 0)\n    )\n \nSELECT MPXN\n  FROM spam_supply_points, valid_ssc_tpr_combos\n  WHERE (spam_supply_points.ssc = valid_ssc_tpr_combos.valid_ssc\n         and spam_supply_points.spam_tprs != valid_ssc_tpr_combos.valid_tprs)\n     OR spam_supply_points.ssc NOT IN (SELECT valid_ssc FROM valid_ssc_tpr_combos)\n  ORDER BY MPXN"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__invalid_ssc_tpr_combinations_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__invalid_ssc_tpr_combinations_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__invalid_ssc_tpr_combinations_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__invalid_ssc_tpr_combinations_nonorion","table_id":"spam_eligibility__elec__invalid_ssc_tpr_combinations_nonorion","time_partitioning":null,"view_query":"WITH\n\norion AS (SELECT mpxn AS MPXN\n           FROM `data-engineering-prod.product_andromeda_secure.supply_points`\n           WHERE chargeMandateStatus = 'Has Current Charge Mandate'\n           AND fuel = 'electricity')\n\nSELECT MPXN\nFROM `data-engineering-prod.landing_andromeda_secure.spam_eligibility__elec__invalid_ssc_tpr_combinations`\nWHERE MPXN NOT IN (SELECT MPXN from orion)"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__null_msn_mappings_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__null_msn_mappings_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__null_msn_mappings_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__null_msn_mappings_nonorion","table_id":"spam_eligibility__elec__null_msn_mappings_nonorion","time_partitioning":null,"view_query":"WITH spam AS (\n  SELECT t.MPXN,\n         t.MSN\n  FROM (\n    SELECT MPXN,\n           MSN,\n           ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n    FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n    LEFT JOIN UNNEST(supplyPeriods) sp\n    LEFT JOIN UNNEST(installationHistory) ih\n        ) t\n  WHERE t.rank = 1\n),\n\norion AS (\n  SELECT mpxn AS MPXN\n  FROM `data-engineering-prod.product_andromeda_secure.supply_points`\n  WHERE chargeMandateStatus = 'Has Current Charge Mandate'\n    AND fuel = 'electricity'\n)\n\nSELECT spam.MPXN\nFROM spam\nWHERE spam.MSN is null\nAND spam.MPXN NOT IN (SELECT MPXN FROM orion)"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__off_supply":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__off_supply","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__off_supply","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__off_supply","table_id":"spam_eligibility__elec__off_supply","time_partitioning":null,"view_query":"select MPXN from (\n  select * from (\n    select *, ROW_NUMBER() over (partition by MPXN order by kafkaData.insertTime desc) rank\n    from `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_v1`\n    order by kafkaData.insertTime desc) t\n    where t.rank = 1\n    order by kafkaData.insertTime desc)\nwhere `current`.supplyEndDate is not null\nor `current`.expectedSupplyEndDate is not null\nor `current` is null\nor array_length(history) = 0"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__read_spam_register_mismatch_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__read_spam_register_mismatch_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__read_spam_register_mismatch_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__read_spam_register_mismatch_nonorion","table_id":"spam_eligibility__elec__read_spam_register_mismatch_nonorion","time_partitioning":null,"view_query":"# Obtain latest RAC reads data by MPAN, counting the number of readings to identify number of registers\nwith latest_read_per_mpxn as (\n  select value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan as mpxn,\n         array_agg(struct(value.ElectricityMidnightSnapshotReadingEvent.msn as msn,\n                          value.ElectricityMidnightSnapshotReadingEvent.snapshotTime as read_timestamp,\n                          (select count(reading) from unnest(value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers)) as n_readings,\n                          (select string_agg(cast(tier as string)) from unnest(value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers)) as registers,\n                          (select string_agg(cast(reading as string)) from unnest(value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers)) as readings\n                          )\n                    order by value.ElectricityMidnightSnapshotReadingEvent.snapshotTime desc\n                    limit 1\n                    ) as deets\n  from `data-engineering-prod.landing_andromeda.rac_msd_simplified_v2`\n  where value.ElectricityMidnightSnapshotReadingEvent.msn is not null\n  group by value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan\n),\n# Obtain smart MSNs, identifying latest data\nsmart_MSNs as (\n  select distinct ih.MSN,\n         row_number() over (partition by mpxn order by kafkadata.insertTime desc, kafkadata.offset desc, sp.supplyStartDate desc, ih.startDate desc) as rn\n  from `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n  inner join unnest(supplyPeriods) sp\n  inner join unnest(installationHistory) ih\n  where ih.meterType = 'S1' or ih.meterType like 'S2%'\n),\n# Obtain latest MSN and register history for MPAN based on SPAM\nlatest_meter_register_history as (\n  select MPXN,\n         MSN,\n         startdate,\n         mrh\n  from (\n        select MPXN, \n               (select MSN from unnest(installationHistory) order by startdate desc limit 1) as MSN,\n               (select startDate from unnest(installationHistory) order by startdate desc limit 1) as startdate,\n               (select meterRegisterHistory from unnest(installationHistory) order by startdate desc limit 1) as mrh,\n               (select endDate from unnest(installationHistory) order by startdate desc limit 1) as endDate\n        from (\n              select *,\n                     row_number() over (partition by mpxn order by kafkadata.inserttime desc, kafkadata.offset desc, sp.supplyStartDate desc) n\n              from `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n              inner join unnest (supplyPeriods) sp\n              ) x\n        where n = 1)\n  order by MPXN, MSN\n),\n# Count number of registers from SPAM MSN data where MSN is a smart meter\nlatest_tprs_smart_only as (\n   select MPXN,\n          MSN,\n          string_agg(cast(lr.timePatternRegime as string) order by lr.timepatternregime) as tprs,\n          count(distinct lr.meterregisterid) as n_registers,\n          max(startdate) as startdate\n  from (\n        select MPXN,\n               MSN,\n               startdate,\n               (select meterRegisters from unnest(mrh) order by startdate desc limit 1) as latest_registers\n        from latest_meter_register_history\n        ),\n  unnest(latest_registers) lr\n  where MSN in (select MSN from smart_MSNs where rn=1)\n  group by MPXN, MSN\n),\n# Find if mpxn is on Orion\norion as (\n  select MPXN,\n         true as on_orion\n  from `data-engineering-prod.product_andromeda_secure.supply_points`\n  where chargeMandateStatus = 'Has Current Charge Mandate'\n  and fuel = 'electricity'\n)\n# Select non-Orion MPXNs where the number of registers on SPAM and RAC don't match\nselect cast(MPXN as string) as MPXN \nfrom (\n      select c.*,\n             if(orion.on_orion, true, false) as on_orion,\n             'electricity' as fuel\n      from (\n            select a.*,\n                   b.*\n            from latest_tprs_smart_only a\n            left join (select mpxn as r_mpxn,\n                              msn as r_msn,\n                              registers,\n                              read_timestamp,\n                              n_readings as r_n_readings,\n                              readings\n                       from latest_read_per_mpxn,\n                       unnest(deets)\n                       ) b\n            on a.MPXN = b.r_mpxn\n            where r_msn is not null\n              and r_msn = msn\n              and date(read_timestamp) > startdate\n              and n_registers <> r_n_readings\n            order by read_timestamp desc, a.mpxn\n            ) c\n      left join orion on c.mpxn = orion.mpxn\n      )\nwhere on_orion is false"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__register_counts":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__elec__register_counts","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__register_counts","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__elec__register_counts","table_id":"spam_eligibility__elec__register_counts","time_partitioning":null,"view_query":"# SPAM data, identifying latest data for elec MPAN\nWITH cte_meter_dedupe as (\n\tSELECT sp.mpxn,\n         ih.meterRegisterHistory,\n\t       ROW_NUMBER() over(partition by MPXN order by kafkaData.insertTime desc, ih.startDate desc) rank \n\tFROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2` sp\n  INNER JOIN UNNEST(installationHistory) ih\n),\n# Obtain latest MPAN data, identify latest meter register data\ncte_meter as (\n\tSELECT sp.mpxn,\n\t       mh.meterRegisters,\n         ROW_NUMBER() OVER(PARTITION BY sp.mpxn ORDER BY mh.startDate DESC) rank\n\tFROM cte_meter_dedupe sp\n  LEFT JOIN UNNEST(sp.meterRegisterHistory) mh\n  WHERE sp.rank = 1\n),\n# Obtain latest meter register data, count the number of registers on the MPAN\ncte_registers as (\n    SELECT m.mpxn\n          ,COUNT(DISTINCT mr.meterRegisterId) Num_Registers\n    FROM cte_meter m\n    LEFT JOIN UNNEST(m.meterRegisters) mr\n    WHERE rank = 1\n    GROUP BY m.mpxn\n),\n# Identify latest reads data\ncte_Raw_Reads as (\n    SELECT DISTINCT CAST(value.ElectricityMidnightSnapshotReadingEvent.snapshotTime AS DATE) AS Read_Date,\n                    value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan as MPXN,\n                    r.tier as Tier,\n                    RANK() OVER(PARTITION BY value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan ORDER BY CAST(value.ElectricityMidnightSnapshotReadingEvent.snapshotTime AS DATE) DESC) RN\n    FROM `data-engineering-prod.raw_andromeda_secure.rac_msd_simplified`,\n    UNNEST(value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers) r     \n),\n# Count number of tiers on the latest reads data\ncte_tiers as (\n    select reads.MPXN,\n           Count(DISTINCT reads.Tier) as Num_Tiers\n    from cte_raw_reads reads\n    WHERE RN = 1\n    group by reads.MPXN\n),\n# Count number of registers on the meter point in GT\nGT_registers as (\nSELECT I.meter_point_no,\n       count(distinct register_id) as num_Registers\nFROM `data-engineering-prod.reporting_meters.v_Register` R\nINNER JOIN `data-engineering-prod.reporting_meters.v_Installation` I\n  ON R.installation_no=I.installation_no\nINNER JOIN `data-engineering-prod.reporting_crm.v_Consumer` con\n  ON con.meter_point_no = I.meter_point_no\n  AND con.installation_no = I.installation_no\n  AND con.Lifecycle_Category = 'Live (Excluding Loss)'\nWHERE Is_Latest_Register = 1\n  AND I.Utility_Type_Code = 'E'\nGROUP BY meter_point_no\n)\n# Find profile class for contract and compare to the number of SPAM registers and number of GT registers for the MPAN FOR TRAD ACCOUNTS\nSELECT DISTINCT core.Account_No,\n       core.Meter_Type_Category,\n       spam.Num_Registers as spam_registers,\n       CASE WHEN cp.Profile_Class_Code = 'N\/A' THEN NULL\n            WHEN cp.Profile_Class_Code = '03' THEN 1\n            WHEN cp.Profile_Class_Code = '04' THEN 2\n            ELSE CAST(cp.Profile_Class_Code AS INT64)\n       END as contract_registers,\n       gt.Num_Registers as gt_registers,\n       null as reads_registers\nFROM `andromeda-data-nonprod.eligibility.core_accounts` core\nINNER JOIN `data-engineering-prod.reporting_crm.v_Consumer` con on con.Account_No = core.Account_No and con.Lifecycle_Category = 'Live (Excluding Loss)'\nINNER JOIN `data-engineering-prod.reporting_contracts.v_Contract_Period` cp on cp.Consumer_No = con.Consumer_No AND cp.Is_Current_Contract_Period  = True\nINNER JOIN cte_registers spam on CAST(spam.MPXN AS INT64) = CAST(con.Meter_Point_No AS INT64)\nINNER JOIN gt_registers gt on con.Meter_Point_No = gt.Meter_Point_No\nWHERE core.Meter_Type_Category like '%Dumb%'\n\nUNION DISTINCT\n# Find profile class for contract and compare profile class, number of SPAM registers, number of GT registers, and number of RAC tiers FOR SMART ACCOUNTS\nSELECT DISTINCT core.Account_No,\n       core.Meter_Type_Category,\n       spam.Num_Registers as spam_registers,\n       CASE WHEN cp.Profile_Class_Code = 'N\/A' THEN NULL\n            WHEN cp.Profile_Class_Code = '03' THEN 1\n            WHEN cp.Profile_Class_Code = '04' THEN 2\n            ELSE CAST(cp.Profile_Class_Code AS INT64)\n       END as contract_registers,\n       gt.Num_Registers as gt_registers,\n       t.Num_Tiers as reads_registers\nFROM `andromeda-data-nonprod.eligibility.core_accounts` core\nINNER JOIN `data-engineering-prod.reporting_crm.v_Consumer` con on con.Account_No = core.Account_No and con.Lifecycle_Category = 'Live (Excluding Loss)'\nINNER JOIN `data-engineering-prod.reporting_contracts.v_Contract_Period` cp on cp.Consumer_No = con.Consumer_No AND cp.Is_Current_Contract_Period  = True\nINNER JOIN cte_registers spam on CAST(spam.MPXN AS INT64) = CAST(con.Meter_Point_No AS INT64)\nINNER JOIN gt_registers gt on con.Meter_Point_No = gt.Meter_Point_No\nINNER JOIN cte_tiers t on CAST(t.mpxn AS INT64) = CAST(con.Meter_Point_No AS INT64)\nWHERE core.Meter_Type_Category  like '%Smart%'"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__SPAM_MSN_mismatches_UG_MSN":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__SPAM_MSN_mismatches_UG_MSN","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__SPAM_MSN_mismatches_UG_MSN","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__SPAM_MSN_mismatches_UG_MSN","table_id":"spam_eligibility__gas__SPAM_MSN_mismatches_UG_MSN","time_partitioning":null,"view_query":"WITH \nutiliserve AS (SELECT * FROM (\n         SELECT cast(meter_point_no AS int64) mpxn,\n                upper(regexp_replace(utiliserve_meter_serial_no, ' ', '')) msn, \n                CAST(Is_Latest_Utiliserve_Transfer_Attempt AS STRING) TA\n         FROM   `data-engineering-prod.reporting_utiliserve.tbl_gas_tracker`)\n         WHERE  TA = \"1\"),\n         \nspam AS ( \n       SELECT cast(mpxn AS int64) mpxn, \n              upper(regexp_replace(msn, ' ', '')) msn \n       FROM   `data-engineering-prod.landing_andromeda_secure.spam_current_gas_mapping`)\n       \nSELECT    utiliserve.mpxn, \n          utiliserve.msn utiliserve_msn, \n          spam.msn spam_msn \nFROM      utiliserve \nLEFT JOIN spam \nON        utiliserve.mpxn = spam.mpxn \nWHERE     \n  (spam.msn IS NULL OR utiliserve.msn <> spam.msn)"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__ambiguous_meters_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__ambiguous_meters_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__ambiguous_meters_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__ambiguous_meters_nonorion","table_id":"spam_eligibility__gas__ambiguous_meters_nonorion","time_partitioning":null,"view_query":"WITH spam1 AS (\n  SELECT MPXN,\n         ih.MSN,\n         sp.supplyStartDate,\n         sp.supplyEndDate,\n         ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n  INNER JOIN UNNEST(installationHistory) ih\n  INNER JOIN UNNEST(supplyPeriods) sp\n),\nspam2 AS (\n  SELECT t.MPXN,\n         t.MSN\n  FROM spam1 t\n  WHERE t.rank = 1\n    AND t.MSN IS NOT NULL\n    AND supplyStartDate <= current_date()\n    AND (supplyEndDate >= CURRENT_DATE() OR supplyEndDate IS NULL)\n),\nambiguous_meters AS (\n  SELECT t.MSN,\n         COUNT(*)\n  FROM spam2 t\n  GROUP BY t.MSN\n  HAVING COUNT(*) > 1\n)\n \nSELECT spam2.MPXN\nFROM spam2\nINNER JOIN ambiguous_meters a\n  ON spam2.MSN = a.MSN"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__non_live_meter_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__non_live_meter_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__non_live_meter_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__non_live_meter_nonorion","table_id":"spam_eligibility__gas__non_live_meter_nonorion","time_partitioning":null,"view_query":"WITH spam AS (\n    SELECT t.MPXN, \n           t.MSN, \n           t.meterStatus\n    FROM (\n        SELECT MPXN, \n               MSN, \n               meterStatus, \n               supplyStatus.status, \n               kafkaData.insertTime as insert_time, \n               ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC) AS rank\n        FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPoint_v2` \n     ) t\n     WHERE t.rank = 1\n     AND t.insert_time > '2019-03-20 12:00:00'\n     AND t.MSN IS NOT NULL\n     AND (t.status IS NULL OR t.status != \"Loss completed\")\n),\n\norion AS (\n    SELECT mpxn AS MPXN\n    FROM `data-engineering-prod.product_andromeda_secure.supply_points`\n    WHERE chargeMandateStatus = 'Has Current Charge Mandate'\n    AND fuel = 'gas'\n),\n\nnonOrion AS (\n    SELECT * \n    FROM spam\n    WHERE spam.MPXN NOT IN (SELECT MPXN FROM orion)\n)\n\nSELECT MPXN, \n       MSN, \n       meterStatus\nFROM nonOrion\nWHERE UPPER(meterStatus) NOT IN ('LI', 'AC', 'RE','CA','CL')"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__null_msn_mappings_nonorion":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__null_msn_mappings_nonorion","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__null_msn_mappings_nonorion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__null_msn_mappings_nonorion","table_id":"spam_eligibility__gas__null_msn_mappings_nonorion","time_partitioning":null,"view_query":"WITH spam AS (\n  SELECT t.MPXN,\n         t.MSN\n  FROM (\n    SELECT MPXN,\n           MSN,\n           ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, sp.supplyStartDate DESC, ih.startDate DESC) AS rank\n    FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n    LEFT JOIN UNNEST(supplyPeriods) sp\n    LEFT JOIN UNNEST(installationHistory) ih\n        ) t\n  WHERE t.rank = 1\n),\n\norion AS (\n  SELECT mpxn AS MPXN\n  FROM `data-engineering-prod.product_andromeda_secure.supply_points`\n  WHERE chargeMandateStatus = 'Has Current Charge Mandate'\n  AND fuel = 'gas'\n)\n\nSELECT spam.MPXN\nFROM spam\nWHERE spam.MSN is null \nAND spam.MPXN NOT IN (SELECT MPXN FROM orion)"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__off_supply":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__gas__off_supply","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__off_supply","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__gas__off_supply","table_id":"spam_eligibility__gas__off_supply","time_partitioning":null,"view_query":"select MPXN from (\n  select * from (\n    select *, ROW_NUMBER() over (partition by MPXN order by kafkaData.insertTime desc) rank\n    from `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPoint_supplyStatus_v2`\n    order by kafkaData.insertTime desc) t\n    where t.rank = 1\n    order by kafkaData.insertTime desc)\nwhere `current`.supplyEndDate is not null\nor `current`.expectedSupplyEndDate is not null\nor `current` is null\nor array_length(history) = 0"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__multiple_live_supply_periods":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__multiple_live_supply_periods","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__multiple_live_supply_periods","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__multiple_live_supply_periods","table_id":"spam_eligibility__multiple_live_supply_periods","time_partitioning":null,"view_query":"with \n\norion as (select CAST(MPXN AS INT64) MPXN\n            from `data-engineering-prod.product_andromeda_secure.supply_points`\n            where chargeMandateStatus = 'Has Current Charge Mandate'),\n\nlatest_gas_supply_point_data as (\n  SELECT MPXN,\n        `current`.supplyStartDate current_ssd,\n         ARRAY(\n              SELECT STRUCT(status, supplyStartDate, supplyEndDate, expectedSupplyEndDate) \n              FROM UNNEST(history)) history, \n         \"gas\" fuel\n  FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC) rank\n        FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPoint_supplyStatus_v2`)\n  WHERE rank = 1),\n\nlatest_elec_supply_point_data as (\n  SELECT MPXN, \n        `current`.supplyStartDate current_ssd,\n        history,\n        \"electricity\" fuel\n  FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC) rank\n        FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPoint_supplyStatus_v1`)\n  WHERE rank = 1),\n\nall_supply_points as (\n  select * from latest_gas_supply_point_data\n    union all \n  select * from latest_elec_supply_point_data\n)\n\nSELECT MPXN, \n       fuel\nFROM all_supply_points\nwhere  ARRAY_LENGTH(\n        ARRAY(SELECT true \n            FROM UNNEST(history)\n            WHERE status != \"OFF_SUPPLY\")) > 1"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__multiple_meters":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__multiple_meters","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__multiple_meters","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__multiple_meters","table_id":"spam_eligibility__multiple_meters","time_partitioning":null,"view_query":"with elec as (\n  with\n  real_multi as (\n    with \n    multi_with_loss_info as (\n      with\n      multi_msn_same_150 as (\n        select * from (\n          select *, \n                 count(distinct msn) over (partition by file_id, mpxn) n\n          from (\n            select * from (\n              select record.MpanCores.mpanCore mpxn,\n                     header.fileIdentifier file_id,\n                     mi.meterIdSerialNumber msn,\n                     mi.dateOfMeterInstallation install_date\n              from `data-engineering-prod.landing_andromeda_secure.flow_D0150001_split_v4`, unnest(record.MpanCores.meterRetrievalMethodDetails) mi)\n            group by file_id, mpxn, msn, install_date))\n        where n > 1),\n      --multi_msn_same_150\n      \n      cos_loss as (\n      select * from (\n        select if(MPXN is null, 'null', MPXN) MPXN,\n               if(MSN is null, 'null', MSN) MSN,\n               status, fuel, ih\n        from (\n          select MPXN,\n                 MSN,\n                 'electricity' fuel,\n                 CASE WHEN supplyStartDate <= CURRENT_DATE() AND supplyEndDate >= CURRENT_DATE() AND lossConfirmed = true THEN 'Loss confirmed'\n                      WHEN supplyStartDate <= CURRENT_DATE() AND supplyEndDate >= CURRENT_DATE() THEN 'Loss notified'\n                      WHEN supplyStartDate > CURRENT_DATE() THEN 'Onboarding'\n                      WHEN supplyStartDate < CURRENT_DATE() AND supplyEndDate < CURRENT_DATE() THEN 'Off supply'\n                      WHEN supplyStartDate <= CURRENT_DATE() AND supplyEndDate IS NULL THEN 'On supply'\n                      ELSE NULL\n                 END as status,\n                 ih,\n                 ROW_NUMBER() over (partition by MPXN, MSN order by kafkaData.insertTime desc, kafkaData.offset desc, sp.supplyStartDate desc, ih.startDate desc) as rank\n          from `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n          inner join unnest(supplyPeriods) sp\n          inner join unnest(installationHistory) ih\n          order by kafkaData.insertTime desc)\n        where rank = 1)\n      where MPXN <> 'null'\n        and status in ('Loss confirmed','Off supply')),\n      --cos_loss\n  \n      removals as (\n        select * from (\n          select record.MpanCores.mpanCore mpxn,\n                 mr.meterIdSerialNumber msn,\n                 mr.dateOfMeterRemoval remove_date\n          from `data-engineering-prod.landing_andromeda_secure.flow_D0150001_split_v4`, unnest(record.MpanCores.metersRemoved) mr)\n        group by mpxn, msn, remove_date)\n      --removals\n      \n      select mm.*, \n             cos_loss.status, \n             removals.remove_date\n      from multi_msn_same_150 mm \n      left join cos_loss\n        on mm.mpxn = cos_loss.mpxn\n      left join removals\n        on mm.mpxn = removals.mpxn and\n           mm.msn = removals.msn\n      )\n    --multi_with_loss_info\n    \n      select mpxn, msn from (\n      select *, coalesce(remove_date, if(max(install_date) over (partition by mpxn) = install_date, null, max(install_date) over (partition by mpxn))) remove_date_inferred\n      from multi_with_loss_info)\n      where status is null and remove_date_inferred is null\n    )\n  --real_multi\n  \n    select mpxn,\n           'electricity' fuel,\n           count(distinct msn) number_of_meters,\n           array_agg(distinct msn) msn\n    from (\n      select * from (\n        select *, \n               count(distinct msn) over (partition by mpxn) n\n        from real_multi)\n      where n <> 1)\n    group by mpxn, n\n),\n--elec\norion as (\n  select mpxn,\n         fuel,\n         true on_orion\n  from `data-engineering-prod.product_andromeda_secure.supply_points`\n  where chargeMandateStatus = 'Has Current Charge Mandate' and\n        mpxn is not null\n)\n--orion\n\nselect ms.*, if(orion.on_orion, true, false) on_orion from (\n  select * from elec\n  --union all\n  --select * from gas\n  ) ms\nleft join orion on\nms.mpxn = orion.mpxn and\nms.fuel = orion.fuel"},"data-engineering-prod:landing_andromeda_secure.spam_eligibility__valid_measurement_requirement_profile_class_view":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_eligibility__valid_measurement_requirement_profile_class_view","location":"EU","num_bytes":76626,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__valid_measurement_requirement_profile_class_view","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_eligibility__valid_measurement_requirement_profile_class_view","table_id":"spam_eligibility__valid_measurement_requirement_profile_class_view","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.spam_fudges_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_fudges_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_fudges_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_fudges_v1_internal","table_id":"spam_fudges_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `fuel`,\n  `payload`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_fudges_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_gasFudges_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasFudges_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasFudges_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasFudges_v1_internal","table_id":"spam_gasFudges_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `action`,\n  `reason`,\n  `effectiveDateTime`,\n  `MSN`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasFudges_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_INTERNAL":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_INTERNAL","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_INTERNAL","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_INTERNAL","table_id":"spam_gasSupplyPointHistory_INTERNAL","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `installationHistory`,\n  `kafkaData`,\n  `LDZ`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPointHistory_INTERNAL`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_industry_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_industry_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_industry_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_industry_v1_internal","table_id":"spam_gasSupplyPointHistory_industry_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `LDZ`,\n  `installationHistory`,\n  `kafkaData`,\n  `supplyPeriods`,\n  `addressLines`,\n  `postCode`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPointHistory_industry_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_megatron_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_megatron_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_megatron_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_megatron_v1_internal","table_id":"spam_gasSupplyPointHistory_megatron_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `LDZ`,\n  `installationHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPointHistory_megatron_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_v1","table_id":"spam_gasSupplyPointHistory_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `LDZ`,\n  `installationHistory`,\n  `kafkaData`,\n  `supplyPeriods`,\n  `addressLines`,\n  `postCode`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPointHistory_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_v1_legacy":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_v1_legacy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_v1_legacy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_v1_legacy","table_id":"spam_gasSupplyPointHistory_v1_legacy","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `LDZ`,\n  `installationHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPointHistory_v1_legacy`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPointHistory_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPointHistory_v2","table_id":"spam_gasSupplyPointHistory_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `LDZ`,\n  `addressLines`,\n  `postCode`,\n  `supplyPeriods`,\n  `installationHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPointHistory_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_internal","table_id":"spam_gasSupplyPoint_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_internal_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_internal_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_internal_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_internal_v1","table_id":"spam_gasSupplyPoint_internal_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyHistory`,\n  `currentStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_internal_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_internal_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_internal_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_internal_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_internal_v2","table_id":"spam_gasSupplyPoint_internal_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyHistory`,\n  `currentStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_internal_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_megatron_v1_internal":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_megatron_v1_internal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_megatron_v1_internal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_megatron_v1_internal","table_id":"spam_gasSupplyPoint_megatron_v1_internal","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `MSN`,\n  `addressLines`,\n  `postCode`,\n  `LDZ`,\n  `meterNoOfDigitsOrDials`,\n  `supplyStatus`,\n  `supplyHistory`,\n  `kafkaData`,\n  `meterStatus`,\n  `meterType`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_megatron_v1_internal`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_supplyPeriods_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_supplyPeriods_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_supplyPeriods_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_supplyPeriods_v1","table_id":"spam_gasSupplyPoint_supplyPeriods_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `history`,\n  `latest`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_supplyPeriods_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_supplyStatus_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_supplyStatus_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_supplyStatus_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_supplyStatus_v1","table_id":"spam_gasSupplyPoint_supplyStatus_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `supplyHistory`,\n  `currentStatus`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_supplyStatus_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_supplyStatus_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_supplyStatus_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_supplyStatus_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_supplyStatus_v2","table_id":"spam_gasSupplyPoint_supplyStatus_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `history`,\n  `current`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_supplyStatus_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_v1_legacy":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_v1_legacy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_v1_legacy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_v1_legacy","table_id":"spam_gasSupplyPoint_v1_legacy","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `MSN`,\n  `addressLines`,\n  `postCode`,\n  `LDZ`,\n  `meterNoOfDigitsOrDials`,\n  `meterStatus`,\n  `meterType`,\n  `supplyStatus`,\n  `supplyHistory`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_v1_legacy`"},"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_gasSupplyPoint_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_gasSupplyPoint_v2","table_id":"spam_gasSupplyPoint_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `addressLines`,\n  `postCode`,\n  `LDZ`,\n  `kafkaData`,\n  `MSN`,\n  `supplyStatus`,\n  `supplyHistory`,\n  `meterNoOfDigitsOrDials`,\n  `meterStatus`,\n  `meterType`,\n  `meterAssetProviderId`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_gasSupplyPoint_v2`"},"data-engineering-prod:landing_andromeda_secure.spam_ldzExport_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_ldzExport_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_ldzExport_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_ldzExport_v1","table_id":"spam_ldzExport_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `MPXN`,\n  `LDZ`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_ldzExport_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_linked_flow_CFR_T07_POST_NEXUS_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_linked_flow_CFR_T07_POST_NEXUS_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_linked_flow_CFR_T07_POST_NEXUS_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_linked_flow_CFR_T07_POST_NEXUS_split_v1","table_id":"spam_linked_flow_CFR_T07_POST_NEXUS_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `MPXN`,\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_linked_flow_CFR_T07_POST_NEXUS_split_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_linked_flow_DCF_S63_split_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_linked_flow_DCF_S63_split_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_linked_flow_DCF_S63_split_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_linked_flow_DCF_S63_split_v1","table_id":"spam_linked_flow_DCF_S63_split_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `MPXN`,\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_linked_flow_DCF_S63_split_v1`"},"data-engineering-prod:landing_andromeda_secure.spam_linked_flow_TRF_S63_POST_NEXUS_split_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_linked_flow_TRF_S63_POST_NEXUS_split_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_linked_flow_TRF_S63_POST_NEXUS_split_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_linked_flow_TRF_S63_POST_NEXUS_split_v4","table_id":"spam_linked_flow_TRF_S63_POST_NEXUS_split_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `MPXN`,\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_linked_flow_TRF_S63_POST_NEXUS_split_v4`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_0_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_0_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_0_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_0_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_0_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_0_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_0_KSTREAM_PEEK_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_0_KSTREAM_PEEK_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_0_KSTREAM_PEEK_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_0_KSTREAM_PEEK_0000000012_repartition","table_id":"spam_streams_spike_0_KSTREAM_PEEK_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_0_KSTREAM_PEEK_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000012_repartition","table_id":"spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_1_KSTREAM_KEY_SELECT_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_2_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_2_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_2_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_2_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_2_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_2_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_10_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_10_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_10_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_10_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_j_10_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_10_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_11_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_12_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_13_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_changelog","table_id":"spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_repartition","table_id":"spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000028_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_changelog","table_id":"spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_repartition","table_id":"spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_14_KSTREAM_REDUCE_STATE_STORE_0000000044_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_changelog","table_id":"spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_repartition","table_id":"spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000029_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_changelog","table_id":"spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_repartition","table_id":"spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_15_KSTREAM_REDUCE_STATE_STORE_0000000046_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000010_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000010_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000010_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000010_repartition","table_id":"spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000010_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000010_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_1_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_1_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_2_KSTREAM_KEY_SELECT_0000000014_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_2_KSTREAM_KEY_SELECT_0000000014_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_2_KSTREAM_KEY_SELECT_0000000014_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_2_KSTREAM_KEY_SELECT_0000000014_repartition","table_id":"spam_streams_spike_j_2_KSTREAM_KEY_SELECT_0000000014_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_2_KSTREAM_KEY_SELECT_0000000014_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","table_id":"spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_changelog`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","table_id":"spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_2_KSTREAM_REDUCE_STATE_STORE_0000000012_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000004_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000004_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000004_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000004_repartition","table_id":"spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000004_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000004_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000017_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000017_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000017_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000017_repartition","table_id":"spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000017_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_3_KSTREAM_KEY_SELECT_0000000017_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000013_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000013_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000013_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000013_repartition","table_id":"spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000013_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000013_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000014_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000014_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000014_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000014_repartition","table_id":"spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000014_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000014_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000027_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000027_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000027_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000027_repartition","table_id":"spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000027_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_4_KSTREAM_KEY_SELECT_0000000027_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_5_KSTREAM_KEY_SELECT_0000000013_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_5_KSTREAM_KEY_SELECT_0000000013_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_5_KSTREAM_KEY_SELECT_0000000013_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_5_KSTREAM_KEY_SELECT_0000000013_repartition","table_id":"spam_streams_spike_j_5_KSTREAM_KEY_SELECT_0000000013_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_5_KSTREAM_KEY_SELECT_0000000013_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_6_KSTREAM_KEY_SELECT_0000000027_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_6_KSTREAM_KEY_SELECT_0000000027_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_6_KSTREAM_KEY_SELECT_0000000027_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_6_KSTREAM_KEY_SELECT_0000000027_repartition","table_id":"spam_streams_spike_j_6_KSTREAM_KEY_SELECT_0000000027_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_6_KSTREAM_KEY_SELECT_0000000027_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000010_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000010_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000010_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000010_repartition","table_id":"spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000010_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000010_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_7_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_8_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_8_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_8_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_8_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_j_8_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_8_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_9_KSTREAM_KEY_SELECT_0000000011_repartition":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.spam_streams_spike_j_9_KSTREAM_KEY_SELECT_0000000011_repartition","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_9_KSTREAM_KEY_SELECT_0000000011_repartition","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/spam_streams_spike_j_9_KSTREAM_KEY_SELECT_0000000011_repartition","table_id":"spam_streams_spike_j_9_KSTREAM_KEY_SELECT_0000000011_repartition","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `header`,\n  `footer`,\n  `record`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.spam_streams_spike_j_9_KSTREAM_KEY_SELECT_0000000011_repartition`"},"data-engineering-prod:landing_andromeda_secure.tardis_consumption_loss_adjustment_generated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_consumption_loss_adjustment_generated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_consumption_loss_adjustment_generated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_consumption_loss_adjustment_generated_v2","table_id":"tardis_consumption_loss_adjustment_generated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpan`,\n  `meterReadDateTime`,\n  `lossReadDateTime`,\n  `meterRegisters`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_consumption_loss_adjustment_generated_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_agreed_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_agreed_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_agreed_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_agreed_v1","table_id":"tardis_elec_dispute_agreed_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `agreedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_agreed_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_agreed_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_agreed_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_agreed_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_agreed_v2","table_id":"tardis_elec_dispute_agreed_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `agreedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_agreed_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_alternated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_alternated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_alternated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_alternated_v1","table_id":"tardis_elec_dispute_alternated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `alternatedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `responseComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_alternated_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_alternated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_alternated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_alternated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_alternated_v2","table_id":"tardis_elec_dispute_alternated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `alternatedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_alternated_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_initiated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_initiated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_initiated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_initiated_v1","table_id":"tardis_elec_dispute_initiated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `initiatedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `disputeComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_initiated_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_initiated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_initiated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_initiated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_initiated_v2","table_id":"tardis_elec_dispute_initiated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `initiatedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_initiated_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_initiated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_initiated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_initiated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_initiated_v3","table_id":"tardis_elec_dispute_initiated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `initiatedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_initiated_v3`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_invalid_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_invalid_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_invalid_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_invalid_v2","table_id":"tardis_elec_dispute_invalid_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `invalidAt`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `invalidReason`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_invalid_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_rejected_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_rejected_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_rejected_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_rejected_v1","table_id":"tardis_elec_dispute_rejected_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `rejectedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `responseComment`,\n  `rejectionCode`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_rejected_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_rejected_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_rejected_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_rejected_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_rejected_v2","table_id":"tardis_elec_dispute_rejected_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `registers`,\n  `rejectedAt`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `rejectionCode`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_rejected_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_state_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_state_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_state_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_state_v1","table_id":"tardis_elec_dispute_state_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `disputedReadDate`,\n  `status`,\n  `workRequired`,\n  `disputedReadValues`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_state_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_state_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_dispute_state_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_state_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_dispute_state_v2","table_id":"tardis_elec_dispute_state_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `disputedReadDate`,\n  `status`,\n  `workRequired`,\n  `disputedReadValues`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_dispute_state_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_elec_omr_api_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_elec_omr_api_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_omr_api_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_elec_omr_api_v4","table_id":"tardis_elec_omr_api_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `accountId`,\n  `mpxn`,\n  `readDate`,\n  `registers`,\n  `submittedBy`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_elec_omr_api_v4`"},"data-engineering-prod:landing_andromeda_secure.tardis_electricity_loss_reading_inferred_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_electricity_loss_reading_inferred_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_electricity_loss_reading_inferred_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_electricity_loss_reading_inferred_v3","table_id":"tardis_electricity_loss_reading_inferred_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `mpan`,\n  `electricityLossSource`,\n  `meterRegisters`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_electricity_loss_reading_inferred_v3`"},"data-engineering-prod:landing_andromeda_secure.tardis_electricity_manual_loss_read_submitted_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_electricity_manual_loss_read_submitted_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_electricity_manual_loss_read_submitted_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_electricity_manual_loss_read_submitted_v2","table_id":"tardis_electricity_manual_loss_read_submitted_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `lossReadDateTime`,\n  `mpan`,\n  `meterRegisters`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_electricity_manual_loss_read_submitted_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_agreed_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_agreed_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_agreed_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_agreed_v1","table_id":"tardis_gas_dispute_agreed_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `agreedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `receiveAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_agreed_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_agreed_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_agreed_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_agreed_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_agreed_v2","table_id":"tardis_gas_dispute_agreed_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `agreedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `agreedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_agreed_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_agreed_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_agreed_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_agreed_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_agreed_v3","table_id":"tardis_gas_dispute_agreed_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `agreedRead`,\n  `agreedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_agreed_v3`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_alternated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_alternated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_alternated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_alternated_v1","table_id":"tardis_gas_dispute_alternated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `alternateProposedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `alternatedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `disputeComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_alternated_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_alternated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_alternated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_alternated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_alternated_v2","table_id":"tardis_gas_dispute_alternated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `alternateProposedRead`,\n  `alternatedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_alternated_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_initiated_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_initiated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_initiated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_initiated_v1","table_id":"tardis_gas_dispute_initiated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `initiatedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `disputeComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_initiated_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_initiated_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_initiated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_initiated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_initiated_v2","table_id":"tardis_gas_dispute_initiated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `initiatedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_initiated_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_initiated_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_initiated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_initiated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_initiated_v3","table_id":"tardis_gas_dispute_initiated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `initiatedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_initiated_v3`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_invalid_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_invalid_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_invalid_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_invalid_v2","table_id":"tardis_gas_dispute_invalid_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `invalidAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `invalidReason`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_invalid_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_rejected_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_rejected_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_rejected_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_rejected_v1","table_id":"tardis_gas_dispute_rejected_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `receiveAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `responseComment`,\n  `rejectionCode`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_rejected_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_rejected_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_rejected_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_rejected_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_rejected_v2","table_id":"tardis_gas_dispute_rejected_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `backingRead1`,\n  `backingRead2`,\n  `rejectedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `responseComment`,\n  `rejectionCode`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_rejected_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_rejected_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_rejected_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_rejected_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_rejected_v3","table_id":"tardis_gas_dispute_rejected_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `initiatedBy`,\n  `losingSupplier`,\n  `gainingSupplier`,\n  `mpxn`,\n  `msn`,\n  `disputedReadDate`,\n  `disputedRead`,\n  `proposedRead`,\n  `rejectedAt`,\n  `sarReferenceNumber`,\n  `customerIds`,\n  `accountNumber`,\n  `eventComment`,\n  `rejectionCode`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_rejected_v3`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_state_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_state_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_state_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_state_v1","table_id":"tardis_gas_dispute_state_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `disputedReadDate`,\n  `status`,\n  `workRequired`,\n  `disputedReadValues`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_state_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_state_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_dispute_state_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_state_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_dispute_state_v2","table_id":"tardis_gas_dispute_state_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `disputedReadDate`,\n  `status`,\n  `workRequired`,\n  `disputedReadValues`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_dispute_state_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_api_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_api_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_api_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_api_v4","table_id":"tardis_gas_omr_api_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `accountId`,\n  `mpxn`,\n  `readDate`,\n  `read`,\n  `submittedBy`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_api_v4`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v1","table_id":"tardis_gas_omr_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `read`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v2":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v2","table_id":"tardis_gas_omr_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `msn`,\n  `actualReadDate`,\n  `read`,\n  `metadata`,\n  `meterReadingSource`,\n  `meterRoundtheClock`,\n  `registerDigits`,\n  `toleranceOverrideFlag`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v2`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v3":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v3","table_id":"tardis_gas_omr_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `msn`,\n  `actualReadDate`,\n  `read`,\n  `metadata`,\n  `meterReadingSource`,\n  `meterRoundtheClock`,\n  `registerDigits`,\n  `toleranceOverrideFlag`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v3`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v4":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v4","table_id":"tardis_gas_omr_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `msn`,\n  `actualReadDate`,\n  `read`,\n  `metadata`,\n  `meterReadingSource`,\n  `meterRoundtheClock`,\n  `registerDigits`,\n  `toleranceOverrideFlag`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v4`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v5":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v5","table_id":"tardis_gas_omr_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `msn`,\n  `actualReadDate`,\n  `read`,\n  `aq`,\n  `metadata`,\n  `meterReadingSource`,\n  `meterRoundTheClock`,\n  `registerDigits`,\n  `toleranceOverrideFlag`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v5`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v6":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v6","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v6","table_id":"tardis_gas_omr_v6","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `msn`,\n  `actualReadDate`,\n  `read`,\n  `aq`,\n  `metadata`,\n  `meterReadingSource`,\n  `meterRoundTheClock`,\n  `registerDigits`,\n  `toleranceOverrideFlag`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v6`"},"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v7":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_gas_omr_v7","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_gas_omr_v7","table_id":"tardis_gas_omr_v7","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpxn`,\n  `msn`,\n  `actualReadDate`,\n  `read`,\n  `aq`,\n  `metadata`,\n  `meterReadingSource`,\n  `meterRoundTheClock`,\n  `registerDigits`,\n  `toleranceOverrideFlag`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_gas_omr_v7`"},"data-engineering-prod:landing_andromeda_secure.tardis_omr_submitted_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_omr_submitted_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_omr_submitted_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_omr_submitted_v1","table_id":"tardis_omr_submitted_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `supplierId`,\n  `supplyType`,\n  `readSource`,\n  `mpxn`,\n  `msn`,\n  `ssd`,\n  `readDate`,\n  `registers`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_omr_submitted_v1`"},"data-engineering-prod:landing_andromeda_secure.tardis_tvr_decision_v1":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.tardis_tvr_decision_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_tvr_decision_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/tardis_tvr_decision_v1","table_id":"tardis_tvr_decision_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `mpan`,\n  `msn`,\n  `readDate`,\n  `outcome`,\n  `decisionStatus`,\n  `industryRead`,\n  `totalEst`,\n  `regEst`,\n  `readType`,\n  `flowType`,\n  `validationStatus`,\n  `flowDateTime`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.tardis_tvr_decision_v1`"},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190417":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190417","location":"EU","num_bytes":2578396,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190417","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190417","table_id":"utiliserve_held_flows_20190417","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190425":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190425","location":"EU","num_bytes":2892388,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190425","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190425","table_id":"utiliserve_held_flows_20190425","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190426":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190426","location":"EU","num_bytes":2850292,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190426","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190426","table_id":"utiliserve_held_flows_20190426","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190429":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190429","location":"EU","num_bytes":2879078,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190429","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190429","table_id":"utiliserve_held_flows_20190429","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190430":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190430","location":"EU","num_bytes":2889561,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190430","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190430","table_id":"utiliserve_held_flows_20190430","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190501":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190501","location":"EU","num_bytes":2857127,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190501","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190501","table_id":"utiliserve_held_flows_20190501","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190502":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190502","location":"EU","num_bytes":2841980,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190502","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190502","table_id":"utiliserve_held_flows_20190502","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190503":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190503","location":"EU","num_bytes":2617750,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190503","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190503","table_id":"utiliserve_held_flows_20190503","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190507":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190507","location":"EU","num_bytes":2521958,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190507","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190507","table_id":"utiliserve_held_flows_20190507","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190508":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190508","location":"EU","num_bytes":2530963,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190508","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190508","table_id":"utiliserve_held_flows_20190508","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190509":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190509","location":"EU","num_bytes":2595059,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190509","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190509","table_id":"utiliserve_held_flows_20190509","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190510":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190510","location":"EU","num_bytes":2643538,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190510","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190510","table_id":"utiliserve_held_flows_20190510","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190515":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.utiliserve_held_flows_20190515","location":"EU","num_bytes":2462683,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190515","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/utiliserve_held_flows_20190515","table_id":"utiliserve_held_flows_20190515","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.v1_v2_contract_extract":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.v1_v2_contract_extract","location":"EU","num_bytes":17241900,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/v1_v2_contract_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/v1_v2_contract_extract","table_id":"v1_v2_contract_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_andromeda_secure.v1_v2_conversion_20190305_jt":{"clustering_fields":null,"dataset_id":"landing_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_andromeda_secure.v1_v2_conversion_20190305_jt","location":"EU","num_bytes":17226199,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/v1_v2_conversion_20190305_jt","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_andromeda_secure\/tables\/v1_v2_conversion_20190305_jt","table_id":"v1_v2_conversion_20190305_jt","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_identity_secure.identity_user_backfill_v1":{"clustering_fields":null,"dataset_id":"landing_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_identity_secure.identity_user_backfill_v1","location":"EU","num_bytes":4318886,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_user_backfill_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_user_backfill_v1","table_id":"identity_user_backfill_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_identity_secure.identity_user_deleted_v1":{"clustering_fields":null,"dataset_id":"landing_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_identity_secure.identity_user_deleted_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_user_deleted_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_user_deleted_v1","table_id":"identity_user_deleted_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `id`,\n  `clientId`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.identity_user_deleted_v1`"},"data-engineering-prod:landing_identity_secure.identity_user_v1":{"clustering_fields":null,"dataset_id":"landing_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_identity_secure.identity_user_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_user_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_user_v1","table_id":"identity_user_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `clientId`,\n  `eventType`,\n  `user`,\n  `changes`,\n  `version`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.identity_user_v1`"},"data-engineering-prod:landing_identity_secure.identity_users_v1":{"clustering_fields":null,"dataset_id":"landing_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_identity_secure.identity_users_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_users_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_identity_secure\/tables\/identity_users_v1","table_id":"identity_users_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `realm`,\n  `event`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.identity_users_v1`"},"data-engineering-prod:landing_orex_secure.orex_account_customer_binding_updated_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_customer_binding_updated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_customer_binding_updated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_customer_binding_updated_v1","table_id":"orex_account_customer_binding_updated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `customerId`,\n  `accountCommsPreference`,\n  `kafkaData`,\n  `status`,\n  `isPrimaryCustomer`,\n  `isFinanciallyLiable`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_customer_binding_updated_v1`"},"data-engineering-prod:landing_orex_secure.orex_account_customer_binding_updated_v2":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_customer_binding_updated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_customer_binding_updated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_customer_binding_updated_v2","table_id":"orex_account_customer_binding_updated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `customerId`,\n  `isPrimaryCustomer`,\n  `isFinanciallyLiable`,\n  `accountCommsPreference`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_customer_binding_updated_v2`"},"data-engineering-prod:landing_orex_secure.orex_account_customer_binding_updated_v3":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_customer_binding_updated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_customer_binding_updated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_customer_binding_updated_v3","table_id":"orex_account_customer_binding_updated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `customerId`,\n  `isPrimaryCustomer`,\n  `isFinanciallyLiable`,\n  `accountCommsPreference`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_customer_binding_updated_v3`"},"data-engineering-prod:landing_orex_secure.orex_account_state_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_state_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v1","table_id":"orex_account_state_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `accountStateTimestamp`,\n  `hasOnlineDiscount`,\n  `interestRewardStartDate`,\n  `migratedInterestCalculationDate`,\n  `status`,\n  `kafkaData`,\n  `electricitySupplyStartDate`,\n  `gasSupplyStartDate`,\n  `interestRewardOptOut`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_state_v1`"},"data-engineering-prod:landing_orex_secure.orex_account_state_v2":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_state_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v2","table_id":"orex_account_state_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `accountStateTimestamp`,\n  `electricitySupplyStartDate`,\n  `gasSupplyStartDate`,\n  `hasOnlineDiscount`,\n  `interestRewardStartDate`,\n  `migratedInterestCalculationDate`,\n  `status`,\n  `interestRewardOptOut`,\n  `createdAt`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_state_v2`"},"data-engineering-prod:landing_orex_secure.orex_account_state_v3":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_state_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v3","table_id":"orex_account_state_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `body`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_state_v3`"},"data-engineering-prod:landing_orex_secure.orex_account_state_v4":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_account_state_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_account_state_v4","table_id":"orex_account_state_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `body`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_account_state_v4`"},"data-engineering-prod:landing_orex_secure.orex_balance_updated_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_balance_updated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_balance_updated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_balance_updated_v1","table_id":"orex_balance_updated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `amount`,\n  `balanceUpdateTime`,\n  `transaction`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_balance_updated_v1`"},"data-engineering-prod:landing_orex_secure.orex_balance_updated_v2":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_balance_updated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_balance_updated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_balance_updated_v2","table_id":"orex_balance_updated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `amount`,\n  `balanceUpdateTime`,\n  `transaction`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_balance_updated_v2`"},"data-engineering-prod:landing_orex_secure.orex_customer_contract_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_customer_contract_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_customer_contract_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_customer_contract_v1","table_id":"orex_customer_contract_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `energyContractId`,\n  `unitRate`,\n  `startDate`,\n  `expiryDate`,\n  `standingRate`,\n  `exitFee`,\n  `planName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_customer_contract_v1`"},"data-engineering-prod:landing_orex_secure.orex_customer_contract_v2":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_customer_contract_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_customer_contract_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_customer_contract_v2","table_id":"orex_customer_contract_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_customer_contract_v2`"},"data-engineering-prod:landing_orex_secure.orex_generic_transactions_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_generic_transactions_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_generic_transactions_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_generic_transactions_v1","table_id":"orex_generic_transactions_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `serviceAccountId`,\n  `transactionId`,\n  `transactionType`,\n  `taxable`,\n  `amount`,\n  `transactionTimestamp`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_generic_transactions_v1`"},"data-engineering-prod:landing_orex_secure.orex_interest_reward_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_interest_reward_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_interest_reward_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_interest_reward_v1","table_id":"orex_interest_reward_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `amount`,\n  `startTime`,\n  `endTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_interest_reward_v1`"},"data-engineering-prod:landing_orex_secure.orex_online_discount_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_online_discount_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_online_discount_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_online_discount_v1","table_id":"orex_online_discount_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `discount`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_online_discount_v1`"},"data-engineering-prod:landing_orex_secure.orex_online_discount_v2":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_online_discount_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_online_discount_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_online_discount_v2","table_id":"orex_online_discount_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `discount`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_online_discount_v2`"},"data-engineering-prod:landing_orex_secure.orex_statement_uploaded_v1":{"clustering_fields":null,"dataset_id":"landing_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orex_secure.orex_statement_uploaded_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_statement_uploaded_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orex_secure\/tables\/orex_statement_uploaded_v1","table_id":"orex_statement_uploaded_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_statement_uploaded_v1`"},"data-engineering-prod:landing_orion_migration_secure.INC_379_exclude_from_final_statements":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.INC_379_exclude_from_final_statements","location":"EU","num_bytes":16569,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/INC_379_exclude_from_final_statements","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/INC_379_exclude_from_final_statements","table_id":"INC_379_exclude_from_final_statements","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.SSR_2020":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.SSR_2020","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/SSR_2020","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/SSR_2020","table_id":"SSR_2020","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_exceptions":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_exceptions","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_exceptions","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_exceptions","table_id":"action_log_exceptions","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_exceptions_archive_1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_exceptions_archive_1","location":"EU","num_bytes":267615,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_exceptions_archive_1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_exceptions_archive_1","table_id":"action_log_exceptions_archive_1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_exceptions_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_exceptions_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_exceptions_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_exceptions_sheet","table_id":"action_log_exceptions_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_reversal_tasks_archive_1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_reversal_tasks_archive_1","location":"EU","num_bytes":2008665,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_reversal_tasks_archive_1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_reversal_tasks_archive_1","table_id":"action_log_reversal_tasks_archive_1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_reversal_tasks_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_reversal_tasks_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_reversal_tasks_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_reversal_tasks_sheet","table_id":"action_log_reversal_tasks_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_1","location":"EU","num_bytes":1848052,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_1","table_id":"action_log_tasks_archive_1","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_2":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_2","location":"EU","num_bytes":2772291,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_2","table_id":"action_log_tasks_archive_2","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_3":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_3","location":"EU","num_bytes":2547242,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_3","table_id":"action_log_tasks_archive_3","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_4":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_4","location":"EU","num_bytes":2363337,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_4","table_id":"action_log_tasks_archive_4","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_5":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_5","location":"EU","num_bytes":1780833,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_5","table_id":"action_log_tasks_archive_5","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_6":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_6","location":"EU","num_bytes":1565688,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_6","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_6","table_id":"action_log_tasks_archive_6","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_7":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_7","location":"EU","num_bytes":1754346,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_7","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_7","table_id":"action_log_tasks_archive_7","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_8":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_8","location":"EU","num_bytes":1539880,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_8","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_8","table_id":"action_log_tasks_archive_8","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_9":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_archive_9","location":"EU","num_bytes":1369219,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_9","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_archive_9","table_id":"action_log_tasks_archive_9","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.action_log_tasks_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/action_log_tasks_sheet","table_id":"action_log_tasks_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.complaints_extract":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.complaints_extract","location":"EU","num_bytes":12504,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/complaints_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/complaints_extract","table_id":"complaints_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.dd_setup_requests_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.dd_setup_requests_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/dd_setup_requests_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/dd_setup_requests_sheet","table_id":"dd_setup_requests_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.ensek_standing_charges_elec":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.ensek_standing_charges_elec","location":"EU","num_bytes":138560666,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_standing_charges_elec","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_standing_charges_elec","table_id":"ensek_standing_charges_elec","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.ensek_standing_charges_gas":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.ensek_standing_charges_gas","location":"EU","num_bytes":118861380,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_standing_charges_gas","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_standing_charges_gas","table_id":"ensek_standing_charges_gas","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.ensek_tariffs_elec":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.ensek_tariffs_elec","location":"EU","num_bytes":161891584,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_tariffs_elec","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_tariffs_elec","table_id":"ensek_tariffs_elec","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.ensek_tariffs_gas":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.ensek_tariffs_gas","location":"EU","num_bytes":110098742,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_tariffs_gas","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_tariffs_gas","table_id":"ensek_tariffs_gas","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.ensek_unit_charges_elec":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.ensek_unit_charges_elec","location":"EU","num_bytes":776083400,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_unit_charges_elec","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_unit_charges_elec","table_id":"ensek_unit_charges_elec","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.ensek_unit_charges_gas":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.ensek_unit_charges_gas","location":"EU","num_bytes":605081034,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_unit_charges_gas","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/ensek_unit_charges_gas","table_id":"ensek_unit_charges_gas","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.gas_read_disputes_worklist_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.gas_read_disputes_worklist_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/gas_read_disputes_worklist_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/gas_read_disputes_worklist_sheet","table_id":"gas_read_disputes_worklist_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.manual_process_snapshots":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.manual_process_snapshots","location":"EU","num_bytes":1875013,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/manual_process_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/manual_process_snapshots","table_id":"manual_process_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.manual_processes_static_data_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.manual_processes_static_data_sheet","location":"EU","num_bytes":3496,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/manual_processes_static_data_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/manual_processes_static_data_sheet","table_id":"manual_processes_static_data_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.manual_processes_variable_data_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.manual_processes_variable_data_sheet","location":"EU","num_bytes":1793,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/manual_processes_variable_data_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/manual_processes_variable_data_sheet","table_id":"manual_processes_variable_data_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.migration_balance_transfer_v1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.migration_balance_transfer_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/migration_balance_transfer_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/migration_balance_transfer_v1","table_id":"migration_balance_transfer_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `amount`,\n  `migrationTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.migration_balance_transfer_v1`"},"data-engineering-prod:landing_orion_migration_secure.move_out_requests_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.move_out_requests_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/move_out_requests_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/move_out_requests_sheet","table_id":"move_out_requests_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.new_action_log_tasks":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.new_action_log_tasks","location":"EU","num_bytes":18219852,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/new_action_log_tasks","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/new_action_log_tasks","table_id":"new_action_log_tasks","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.new_reversal_tasks":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.new_reversal_tasks","location":"EU","num_bytes":1663,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/new_reversal_tasks","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/new_reversal_tasks","table_id":"new_reversal_tasks","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.orion_migration_failure_v1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.orion_migration_failure_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_failure_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_failure_v1","table_id":"orion_migration_failure_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `stepErrors`,\n  `failedAtTimestamp`,\n  `didRollBackSucceed`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orion_migration_failure_v1`"},"data-engineering-prod:landing_orion_migration_secure.orion_migration_pending_payment_v1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.orion_migration_pending_payment_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_pending_payment_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_pending_payment_v1","table_id":"orion_migration_pending_payment_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orion_migration_pending_payment_v1`"},"data-engineering-prod:landing_orion_migration_secure.orion_migration_reverse_success_v1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.orion_migration_reverse_success_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_reverse_success_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_reverse_success_v1","table_id":"orion_migration_reverse_success_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `globalAccountId`,\n  `reverseMigrationActionedAt`,\n  `migrationDate`,\n  `migrationActionedAt`,\n  `userList`,\n  `didCancelArrangement`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orion_migration_reverse_success_v1`"},"data-engineering-prod:landing_orion_migration_secure.orion_migration_smets2_data_v1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.orion_migration_smets2_data_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_smets2_data_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_smets2_data_v1","table_id":"orion_migration_smets2_data_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `CH_GUID`,\n  `CH_Type`,\n  `CH_FW`,\n  `MPAN`,\n  `E_GUID`,\n  `E_MSN`,\n  `D0150_MSN`,\n  `METER_START_DATE`,\n  `METER_END_DATE`,\n  `E_FW`,\n  `E_STATUS`,\n  `SSC`,\n  `TWO_RATE`,\n  `E_STANDING_CHARGE`,\n  `E_REG_ID_1`,\n  `TPR_1`,\n  `E_REG_PRICE_1`,\n  `E_REG_ID_2`,\n  `TPR_2`,\n  `E_REG_PRICE_2`,\n  `SSD`,\n  `E_METER_TYPE`,\n  `E_READ_SCHED`,\n  `MPRN`,\n  `G_GUID`,\n  `G_MSN`,\n  `G_FW`,\n  `G_STATUS`,\n  `G_STANDING_CHARGE`,\n  `G_REG_ID_1`,\n  `G_REG_PRICE_1`,\n  `G_METER_TYPE`,\n  `G_READ_SCHED`,\n  `IHD_GUID`,\n  `IHD_FW`,\n  `IHD_TYPE`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orion_migration_smets2_data_v1`"},"data-engineering-prod:landing_orion_migration_secure.orion_migration_statement_load_failure_v1":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.orion_migration_statement_load_failure_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_statement_load_failure_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_statement_load_failure_v1","table_id":"orion_migration_statement_load_failure_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `errors`,\n  `failedAtTimestamp`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orion_migration_statement_load_failure_v1`"},"data-engineering-prod:landing_orion_migration_secure.orion_migration_success_v2":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.orion_migration_success_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_success_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/orion_migration_success_v2","table_id":"orion_migration_success_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `globalAccountId`,\n  `migrationDate`,\n  `supplyPointList`,\n  `userList`,\n  `annualFoundationAmountPounds`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orion_migration_success_v2`"},"data-engineering-prod:landing_orion_migration_secure.prb_1145_exclude_from_final_statements":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.prb_1145_exclude_from_final_statements","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prb_1145_exclude_from_final_statements","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prb_1145_exclude_from_final_statements","table_id":"prb_1145_exclude_from_final_statements","time_partitioning":null,"view_query":"WITH cte_ordered_charges\nAs\n(\nSelect\nc.supply_Point,\ncontract_id,\nch.clockingTimeID,\nch.fromMeterReading,\nch.toMeterReading,\nch.consumption,\nc.charge_from_date,\nc.charge_to_date,\nis_consumption_adjustment,\nrow_number() over (partition by c.supply_Point, ch.clockingTimeID order by ch.clockingTimeID desc, charge_to_date desc, charge_from_date desc) as charge_order\nFROM\n`data-engineering-prod.product_andromeda_secure.consumption_charges_extract` c\nINNER JOIN unnest (c.charges) ch\nwhere is_cancelled = 0\n)\n,\ncte_adjustment_reads as\n(\nSelect\nmpxn,\ndatetime(lastSmartReadDatetime) as fromDateTime,\ndatetime(finalReadDatetime) as toDateTime,\nr.clockingTimeId,\nr.meterRead as fromRead,\nr.lossRead as toRead\nFrom  `data-engineering-prod.product_andromeda_secure.consumption_loss_adjustments` la\ninner Join unnest (la.meterRegisters) r\n)\nSELECT\nDistinct\nach.*,\nla.fromRead,\nach.charge_order as AdjustmentChargeOrder,\npch.charge_order as previousChargeOrder,\nFROM\ncte_ordered_charges ach\nInner join cte_adjustment_reads la on ach.supply_point = la.mpxn and ach.clockingTimeId = la.clockingTimeID and ach.toMeterReading = la.toRead and ach.charge_to_date = la.toDateTime and ach.charge_from_date = la.fromDateTime\ninner join cte_ordered_charges pch on la.mpxn = pch.supply_point and la.fromRead = pch.toMeterReading and la.clockingTimeId = pch.clockingTimeId and la.fromDateTime = pch.charge_to_date\nwhere ach.is_consumption_adjustment = 1\nAND ach.charge_order <> (pch.charge_order - 1)\norder by ach.charge_to_date desc"},"data-engineering-prod:landing_orion_migration_secure.prb_exclude_from_final_statements":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.prb_exclude_from_final_statements","location":"EU","num_bytes":9540,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prb_exclude_from_final_statements","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prb_exclude_from_final_statements","table_id":"prb_exclude_from_final_statements","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.probate_responses_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.probate_responses_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/probate_responses_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/probate_responses_sheet","table_id":"probate_responses_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.prod_support_INC_461":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.prod_support_INC_461","location":"EU","num_bytes":8206,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prod_support_INC_461","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prod_support_INC_461","table_id":"prod_support_INC_461","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.prod_support_SSR":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.prod_support_SSR","location":"EU","num_bytes":918524,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prod_support_SSR","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/prod_support_SSR","table_id":"prod_support_SSR","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.refix_requests_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.refix_requests_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/refix_requests_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/refix_requests_sheet","table_id":"refix_requests_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.refund_requests_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.refund_requests_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/refund_requests_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/refund_requests_sheet","table_id":"refund_requests_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.reversal_requests_sheet_v2":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.reversal_requests_sheet_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/reversal_requests_sheet_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/reversal_requests_sheet_v2","table_id":"reversal_requests_sheet_v2","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.secondary_contact_requests_sheet":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.secondary_contact_requests_sheet","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/secondary_contact_requests_sheet","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/secondary_contact_requests_sheet","table_id":"secondary_contact_requests_sheet","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.tasks_reference":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.tasks_reference","location":"EU","num_bytes":256,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/tasks_reference","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/tasks_reference","table_id":"tasks_reference","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.test_and_control_groups":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.test_and_control_groups","location":"EU","num_bytes":241541,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/test_and_control_groups","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/test_and_control_groups","table_id":"test_and_control_groups","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_migration_secure.vacant_account_list":{"clustering_fields":null,"dataset_id":"landing_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_migration_secure.vacant_account_list","location":"EU","num_bytes":110,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/vacant_account_list","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_migration_secure\/tables\/vacant_account_list","table_id":"vacant_account_list","time_partitioning":null,"view_query":null},"data-engineering-prod:landing_orion_secure.migration_balance_transfer_v1":{"clustering_fields":null,"dataset_id":"landing_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_secure.migration_balance_transfer_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_secure\/tables\/migration_balance_transfer_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_secure\/tables\/migration_balance_transfer_v1","table_id":"migration_balance_transfer_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `accountId`,\n  `amount`,\n  `migrationTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.migration_balance_transfer_v1`"},"data-engineering-prod:landing_orion_secure.orex_customer_contract_v1":{"clustering_fields":null,"dataset_id":"landing_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_secure.orex_customer_contract_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_secure\/tables\/orex_customer_contract_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_secure\/tables\/orex_customer_contract_v1","table_id":"orex_customer_contract_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `mpxn`,\n  `serviceAccountId`,\n  `fuel`,\n  `energyContractId`,\n  `unitRate`,\n  `startDate`,\n  `expiryDate`,\n  `standingRate`,\n  `exitFee`,\n  `planName`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_customer_contract_v1`"},"data-engineering-prod:landing_orion_secure.orex_customer_contract_v2":{"clustering_fields":null,"dataset_id":"landing_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_orion_secure.orex_customer_contract_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_orion_secure\/tables\/orex_customer_contract_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_orion_secure\/tables\/orex_customer_contract_v2","table_id":"orex_customer_contract_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `unionRecord`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.orex_customer_contract_v2`"},"data-engineering-prod:landing_pace_secure.pace_loss_refund_v1":{"clustering_fields":null,"dataset_id":"landing_pace_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_pace_secure.pace_loss_refund_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_pace_secure\/tables\/pace_loss_refund_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_pace_secure\/tables\/pace_loss_refund_v1","table_id":"pace_loss_refund_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `serviceAccountId`,\n  `statementId`,\n  `closingBalance`,\n  `status`,\n  `requestedAt`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.pace_loss_refund_v1`"},"data-engineering-prod:landing_payments_secure.payments_card_paymentExecuted_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_card_paymentExecuted_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_card_paymentExecuted_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_card_paymentExecuted_v1","table_id":"payments_card_paymentExecuted_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `ownerId`,\n  `amount`,\n  `paymentTakenDate`,\n  `lastFourDigits`,\n  `sourceSystem`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_card_paymentExecuted_v1`"},"data-engineering-prod:landing_payments_secure.payments_card_paymentExecuted_v1_deleted":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_card_paymentExecuted_v1_deleted","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_card_paymentExecuted_v1_deleted","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_card_paymentExecuted_v1_deleted","table_id":"payments_card_paymentExecuted_v1_deleted","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `ownerId`,\n  `amount`,\n  `paymentTakenDate`,\n  `lastFourDigits`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_card_paymentExecuted_v1_deleted`"},"data-engineering-prod:landing_payments_secure.payments_lumo_cardPaymentExecuted_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_lumo_cardPaymentExecuted_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_lumo_cardPaymentExecuted_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_lumo_cardPaymentExecuted_v1","table_id":"payments_lumo_cardPaymentExecuted_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `ownerId`,\n  `amount`,\n  `paymentTakenDate`,\n  `lastFourDigits`,\n  `sourceSystem`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_lumo_cardPaymentExecuted_v1`"},"data-engineering-prod:landing_payments_secure.payments_mandateEvent_updated_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_mandateEvent_updated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_mandateEvent_updated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_mandateEvent_updated_v1","table_id":"payments_mandateEvent_updated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `serviceAccountId`,\n  `mandateId`,\n  `obfuscatedAccountNo`,\n  `bankName`,\n  `status`,\n  `statusDateTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_mandateEvent_updated_v1`"},"data-engineering-prod:landing_payments_secure.payments_mandateEvent_updated_v2":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_mandateEvent_updated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_mandateEvent_updated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_mandateEvent_updated_v2","table_id":"payments_mandateEvent_updated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `serviceAccountId`,\n  `mandateId`,\n  `obfuscatedAccountNo`,\n  `bankName`,\n  `reference`,\n  `status`,\n  `statusDateTime`,\n  `metadata`,\n  `SUN`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_mandateEvent_updated_v2`"},"data-engineering-prod:landing_payments_secure.payments_mandateEvent_updated_v3":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_mandateEvent_updated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_mandateEvent_updated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_mandateEvent_updated_v3","table_id":"payments_mandateEvent_updated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `serviceAccountId`,\n  `mandateId`,\n  `obfuscatedAccountNo`,\n  `bankName`,\n  `reference`,\n  `status`,\n  `statusOrigin`,\n  `statusReason`,\n  `statusDateTime`,\n  `metadata`,\n  `SUN`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_mandateEvent_updated_v3`"},"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v1","table_id":"payments_paymentEvent_updated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionId`,\n  `serviceAccountId`,\n  `amount`,\n  `chargeDate`,\n  `status`,\n  `statusDateTime`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_paymentEvent_updated_v1`"},"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v2":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v2","table_id":"payments_paymentEvent_updated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `mandateId`,\n  `amount`,\n  `chargeDate`,\n  `status`,\n  `statusDateTime`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_paymentEvent_updated_v2`"},"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v3":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v3","table_id":"payments_paymentEvent_updated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `mandateId`,\n  `subscriptionId`,\n  `amount`,\n  `chargeDate`,\n  `status`,\n  `statusDateTime`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_paymentEvent_updated_v3`"},"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v4":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v4","table_id":"payments_paymentEvent_updated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `mandateId`,\n  `subscriptionId`,\n  `amount`,\n  `chargeDate`,\n  `status`,\n  `statusOrigin`,\n  `statusReason`,\n  `statusDateTime`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_paymentEvent_updated_v4`"},"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v5":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_paymentEvent_updated_v5","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v5","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_paymentEvent_updated_v5","table_id":"payments_paymentEvent_updated_v5","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `ownerId`,\n  `mandateId`,\n  `subscriptionId`,\n  `amount`,\n  `chargeDate`,\n  `status`,\n  `statusOrigin`,\n  `statusReason`,\n  `statusDateTime`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_paymentEvent_updated_v5`"},"data-engineering-prod:landing_payments_secure.payments_platform_advanceNoticeSent_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_platform_advanceNoticeSent_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_advanceNoticeSent_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_advanceNoticeSent_v1","table_id":"payments_platform_advanceNoticeSent_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `accountId`,\n  `customerId`,\n  `sun`,\n  `origin`,\n  `reason`,\n  `collectionDay`,\n  `firstCollectionDate`,\n  `amount`,\n  `obfuscatedBankAccountNumber`,\n  `bankName`,\n  `reference`,\n  `timestamp`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_platform_advanceNoticeSent_v1`"},"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_apollo_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_apollo_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_apollo_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_apollo_v1","table_id":"payments_platform_card_payment_event_apollo_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionReference`,\n  `clientReference`,\n  `amountInPence`,\n  `paymentRequestedAt`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_platform_card_payment_event_apollo_v1`"},"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_boost_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_boost_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_boost_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_boost_v1","table_id":"payments_platform_card_payment_event_boost_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionReference`,\n  `clientReference`,\n  `amountInPence`,\n  `paymentRequestedAt`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_platform_card_payment_event_boost_v1`"},"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_lumo_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_lumo_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_lumo_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_lumo_v1","table_id":"payments_platform_card_payment_event_lumo_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionReference`,\n  `clientReference`,\n  `amountInPence`,\n  `paymentRequestedAt`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_platform_card_payment_event_lumo_v1`"},"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_orion_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_platform_card_payment_event_orion_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_orion_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_platform_card_payment_event_orion_v1","table_id":"payments_platform_card_payment_event_orion_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionReference`,\n  `clientReference`,\n  `amountInPence`,\n  `paymentRequestedAt`,\n  `status`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_platform_card_payment_event_orion_v1`"},"data-engineering-prod:landing_payments_secure.payments_refund_failed_v2":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_refund_failed_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_failed_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_failed_v2","table_id":"payments_refund_failed_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionId`,\n  `amount`,\n  `errorCode`,\n  `reason`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_refund_failed_v2`"},"data-engineering-prod:landing_payments_secure.payments_refund_statusUpdated_v1":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_refund_statusUpdated_v1","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_statusUpdated_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_statusUpdated_v1","table_id":"payments_refund_statusUpdated_v1","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `serviceAccountId`,\n  `ownerId`,\n  `amount`,\n  `status`,\n  `processingDate`,\n  `traceToken`,\n  `refundDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_refund_statusUpdated_v1`"},"data-engineering-prod:landing_payments_secure.payments_refund_statusUpdated_v2":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_refund_statusUpdated_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_statusUpdated_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_statusUpdated_v2","table_id":"payments_refund_statusUpdated_v2","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `metadata`,\n  `transactionId`,\n  `serviceAccountId`,\n  `ownerId`,\n  `amount`,\n  `status`,\n  `sortCode`,\n  `accountNumberLastDigits`,\n  `refundExpectedDate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_refund_statusUpdated_v2`"},"data-engineering-prod:landing_payments_secure.payments_refund_statusUpdated_v3":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_refund_statusUpdated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_statusUpdated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_refund_statusUpdated_v3","table_id":"payments_refund_statusUpdated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `transactionId`,\n  `amount`,\n  `sortCode`,\n  `accountNumberLastDigits`,\n  `serviceAccountId`,\n  `ownerId`,\n  `metadata`,\n  `statusUpdate`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_refund_statusUpdated_v3`"},"data-engineering-prod:landing_payments_secure.payments_subscriptionEvent_updated_v3":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_subscriptionEvent_updated_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_subscriptionEvent_updated_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_subscriptionEvent_updated_v3","table_id":"payments_subscriptionEvent_updated_v3","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `serviceAccountId`,\n  `subscriptionId`,\n  `mandateId`,\n  `amount`,\n  `dayOfMonth`,\n  `status`,\n  `statusDateTime`,\n  `upcomingPayment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_subscriptionEvent_updated_v3`"},"data-engineering-prod:landing_payments_secure.payments_subscriptionEvent_updated_v4":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.payments_subscriptionEvent_updated_v4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_subscriptionEvent_updated_v4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/payments_subscriptionEvent_updated_v4","table_id":"payments_subscriptionEvent_updated_v4","time_partitioning":null,"view_query":"#standardSQL\nSELECT\n  `serviceAccountId`,\n  `subscriptionId`,\n  `mandateId`,\n  `amount`,\n  `dayOfMonth`,\n  `status`,\n  `statusDateTime`,\n  `upcomingPayment`,\n  `metadata`,\n  `kafkaData`,\n  `_PARTITIONTIME` `PARTITIONTIME`\nFROM\n  `data-engineering-prod.auto_capture_v2_secure.payments_subscriptionEvent_updated_v4`"},"data-engineering-prod:landing_payments_secure.static_billing_coefficients_for_payments_use_only":{"clustering_fields":null,"dataset_id":"landing_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:landing_payments_secure.static_billing_coefficients_for_payments_use_only","location":"EU","num_bytes":118404,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/static_billing_coefficients_for_payments_use_only","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/landing_payments_secure\/tables\/static_billing_coefficients_for_payments_use_only","table_id":"static_billing_coefficients_for_payments_use_only","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.2020_04_historical_contract_change_estimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.2020_04_historical_contract_change_estimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/2020_04_historical_contract_change_estimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/2020_04_historical_contract_change_estimates","table_id":"2020_04_historical_contract_change_estimates","time_partitioning":null,"view_query":"\n\/*** HISTORICAL ESTIMATION FOR CONTRACT CHANGE DATES  ***\/\n\n-- piggybacking on Victor's code for contracts to start with\nWITH cte_contracts_raw AS(  \n  SELECT\n    a.unionRecord.Contract.mpxn,\n    a.unionRecord.Contract.serviceAccountId,\n    a.unionRecord.Contract.fuel,\n    a.unionRecord.Contract.contractId,\n    a.unionRecord.Contract.metadata.createdAt,\n    a.unionRecord.Contract.startDate,\n    a.unionRecord.Contract.endDate,\n    a.unionRecord.Contract.lossConfirmed,\n    ROW_NUMBER() OVER(PARTITION BY a.unionRecord.Contract.serviceAccountId, a.unionRecord.Contract.mpxn, a.unionRecord.Contract.contractId, a.unionRecord.Contract.startDate ORDER BY a.unionRecord.Contract.metadata.createdAt DESC) AS rn\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3` a\n  LEFT JOIN (SELECT DISTINCT unionRecord.Cancelled.contractId FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`) b --Remove cancelled contracts\n  ON a.unionRecord.Contract.contractId = b.contractId\n  WHERE a.unionRecord.Contract IS NOT NULL \n  AND b.contractId IS NULL\n  ),\ncte_contracts AS(    \n  SELECT serviceAccountId\n        , fuel\n        , mpxn\n        , contractId\n        , createdAt\n        , startDate\n        , endDate  \n        , ROW_NUMBER() OVER(PARTITION BY serviceAccountId, mpxn ORDER BY startDate DESC) contractOrderDesc\n        , ROW_NUMBER() OVER(PARTITION BY serviceAccountId, mpxn ORDER BY startDate ASC) contractOrderAsc\n        , lossConfirmed\n  FROM cte_contracts_raw\n  WHERE rn=1\n  AND lossConfirmed IS NULL --J ust live supplies?\n  AND startDate BETWEEN '2019-04-12' AND '2019-09-01' -- up to september last year\n ),\n --remove those accounts-mpxn where its last contract is loss confirmed\n cte_contracts_clean AS(\n   SELECT a.serviceAccountId\n          , a.fuel\n          , a.mpxn\n          , a.contractId\n          , a.createdAt\n          , a.startDate\n          , a.endDate  \n          , a.contractOrderDesc\n          , a.contractOrderAsc\n   FROM cte_contracts a\n   LEFT JOIN\n             (SELECT DISTINCT serviceAccountId, mpxn\n             FROM cte_contracts \n             WHERE lossConfirmed IS true \n             AND contractOrderDesc = 1) b\n   USING (serviceAccountId, mpxn)\n   WHERE b.serviceAccountId IS NULL\n),\n -- get consumption data\ncte_consumption AS(\n  SELECT DISTINCT\n     mpan AS mpxn\n    ,msn\n    ,fromDateTime\n    ,toDateTime\n    ,consumption\n    ,fromMeterReading\n    ,toMeterReading\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v2` -- consumption v2 runs from April 2019 to September 2019, which covers the whole period required\n  UNION ALL \n  SELECT DISTINCT \n     mprn AS mpxn\n    ,msn\n    ,fromDateTime\n    ,toDateTime\n    ,volume AS consumption\n    ,fromMeterReading\n    ,toMeterReading\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2`-- consumption v2 runs from April 2019 to now, which covers the whole period required\n),\n-- removes cases where there is a consumption block terminating on contract start date (Victor's code)\ncte_contracts_filtered AS(\n  SELECT \n    a.*\n  FROM cte_contracts_clean a\n  LEFT JOIN cte_consumption b\n  ON a.mpxn = b.MPXN\n  AND a.startDate = DATE(b.toDateTime)\n  WHERE b.MPXN IS NULL\n  \n  \n  -- ****** BULK OF THE NEW CODE IS BELOW *******\n  -- main addition: find consumption blocks bridging the contract start date, and work out the period between \n  -- the fromDate to the contract startDate as a proportion of the whole block. Rather than using days, the\n  -- clever bit is to use the change in the cumulatiev demand coefficient. To do this, we first capture the\n  -- demand coefficients and then express them in cumulative form:\n),\n  -- get coefficients\ncoefficients AS (\n  SELECT\n     settlement_date AS applicableDate\n    ,AVG(ALP) AS usageCoefficient\n    ,'gas' AS fuel\n  FROM\n    `data-engineering-prod.product_andromeda_secure.rac_gas_loadProfiles` \n  WHERE\n    band = 1\n    AND settlement_Date >= DATE_ADD('2019-04-12', INTERVAL -1 YEAR) -- go from one year before to one year after the constract start date\n    AND settlement_Date <= DATE_ADD('2019-09-01', INTERVAL 1 YEAR)\n  GROUP BY\n    settlement_date\n  UNION ALL\n  SELECT\n    settlementDate AS applicableDate\n    ,SUM(customerDemand) AS usageCoefficient\n    ,'electricity' AS fuel\n  FROM\n    `data-engineering-prod.product_andromeda_secure.rac_electricity_loadProfiles`\n  WHERE\n    profileClassId = 1\n    AND settlementDate >= DATE_ADD('2019-04-12', INTERVAL -1 YEAR) -- go from one year before to one year after the constract start date\n    AND settlementDate <= DATE_ADD('2019-09-01', INTERVAL 1 YEAR)\n  GROUP BY \n    settlementDate\n),\n-- take the cumulative coefficient using the running sum (sum window) function\ncumulative AS (\n  SELECT\n     applicableDate\n    ,fuel\n    ,SUM(usageCoefficient) OVER(PARTITION BY fuel ORDER BY applicableDate) AS cumulativeCoefficient\n  FROM\n    coefficients\n-- gather all of the data on the consumption block that straddles the  contract change date. This involves triple-joining on the \n-- new cumulative coefficients table for each of the three main dates (block start, block end, contract start). Then, take the \n-- difference between the cumulative coefficient values for the contract start and block start, and contract end and block start\n), straddling_block AS (\n  SELECT\n     ct.*\n    ,cons.msn\n    ,cons.fromDateTime\n    ,cons.toDateTime\n    ,cons.consumption\n    ,cons.fromMeterReading\n    ,cons.toMeterReading\n    ,cu1.cumulativeCoefficient AS fromDateCoefficient\n    ,cu2.cumulativeCoefficient AS toDateCoefficient\n    ,cu.cumulativeCoefficient AS contractStartDateCoefficient\n    ,cu2.cumulativeCoefficient - cu1.cumulativeCoefficient AS sumOfCoefficientsWholeBlock\n    ,cu.cumulativeCoefficient - cu1.cumulativeCoefficient AS sumOfCoefficientsBefore\n  FROM\n    cte_contracts_filtered ct\n  INNER JOIN\n    cte_consumption cons\n      ON  cons.mpxn = ct.mpxn\n      AND DATE(cons.fromDateTime) < ct.startDate \n      AND DATE(cons.toDateTime) > ct.startDate\n   INNER JOIN\n      cumulative cu\n        ON cu.fuel = ct.fuel\n        AND cu.applicableDate = ct.startDate\n   INNER JOIN\n      cumulative cu1\n        ON cu1.fuel = ct.fuel\n        AND cu1.applicableDate = DATE(cons.fromDateTime)\n   INNER JOIN\n      cumulative cu2\n        ON cu2.fuel = ct.fuel\n        AND cu2.applicableDate = DATE(cons.toDateTime)\n  ORDER BY\n    serviceAccountId, ct.mpxn, ct.startDate\n) \n  -- This then means we can simply work out the ratio between these two differences (giving the proportion of the block to \n  -- attribute to before the contract change. Adding this to the fromMeterReading gives us our estimate.\nSELECT \n   * \n   ,sumOfCoefficientsBefore\/sumOfCoefficientsWholeBlock AS proportionOfBlock\n   ,ROUND(fromMeterReading + ((sumOfCoefficientsBefore \/ sumOfCoefficientsWholeBlock) * consumption),0) AS estimatedReading\nFROM straddling_block\n"},"data-engineering-prod:product_andromeda_secure.PRE_SSD_MEXs":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.PRE_SSD_MEXs","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/PRE_SSD_MEXs","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/PRE_SSD_MEXs","table_id":"PRE_SSD_MEXs","time_partitioning":null,"view_query":"-- ALL NOSIs per MPRN --\nWITH NOSI AS(\n  select MPXN, NOSI_MSN, NOSI_date from (\n    select record.NosiGroup.meterPointReference MPXN, record.NosiGroup.meterSerialNumber NOSI_MSN, PARSE_DATE(\"%Y%m%d\", header.createdDate) NOSI_date\n    from `data-engineering-prod.landing_andromeda_secure.flow_NOSI_split_v1`)\n  where MPXN is not null and NOSI_MSN is not null and NOSI_date is not null\n  group by MPXN, NOSI_MSN, NOSI_date),\n\n-- ALL MRIs per MPRN --\nMRI AS\n(select MPXN, MRI_MSN, MRI_date\n from (\n select record.MeterReadInstructions.meterPointReference MPXN, record.MeterReadInstructions.meterSerialNumber MRI_MSN, PARSE_DATE(\"%Y%m%d\", header.creationDate) MRI_date\n from `data-engineering-prod.landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v4`)\n where MRI_date is not null and MPXN is not null and MRI_MSN is not null\n group by MPXN, MRI_MSN, MRI_date),\n \n-- ALL ONUPDs per MPRN --\nONUPD AS\n(select MPXN, ONUPD_MSN, ONUPD_date from (\n  select MP.meterPointReference MPXN, ASSET.serialNumber ONUPD_MSN, PARSE_DATE(\"%Y%m%d\", header.createdDate) ONUPD_date\n  from `data-engineering-prod.landing_andromeda_secure.flow_ONUPD_split_v4`,\n  unnest(record.Transaction.meterPoint) AS MP,\n  unnest(MP.asset) AS ASSET)),\n\n-- LATEST SSD per MPRN --\nSPAMSSD as\n(select MPXN, MSN, SSD from\n  (select MPXN, MSN, supplyStatusDate SSD, supplystatus SS\n   from `data-engineering-prod.landing_andromeda_secure.spam_current_gas_mapping`\n   where supplystatus = 'Gain completed')\n group by MPXN, MSN, SSD),\n\n-- NEAREST MRI to SSD --\nNMRI as (\n  select MPXN, MRI_MSN, SSD, MRI_date, spam_mri_diff from (\n    select *,\n           row_number() over (partition by MPXN order by spam_mri_diff) n\n    from (\n      select SPAMSSD.*, MRI.MRI_date, MRI_MSN,\n             abs(date_diff(MRI_date, SSD, Day)) spam_mri_diff\n      from SPAMSSD\n      left join MRI\n      on SPAMSSD.MPXN = MRI.MPXN\n      where MRI_date is not null\n      order by SPAMSSD.MPXN, MRI_date desc)\n    where spam_mri_diff <= 5)\n  where n = 1),\n\n-- NEAREST NOSI TO SSD --\nNNOSI as (\n  select MPXN, NOSI_MSN, SSD, NOSI_date, spam_nosi_diff from (\n    select *,\n           row_number() over (partition by MPXN order by spam_nosi_diff) n\n    from (\n      select SPAMSSD.*, NOSI.NOSI_date, NOSI_MSN,\n             abs(date_diff(NOSI_date, SSD, Day)) spam_nosi_diff\n      from SPAMSSD\n      left join NOSI\n      on SPAMSSD.MPXN = NOSI.MPXN\n      where NOSI_date is not null\n      order by SPAMSSD.MPXN, NOSI_date desc)\n    where spam_nosi_diff <= 5)\n  where n = 1),\n  \n-- NEAREST ONUPD TO SSD --\nNONUPD as (\n  select MPXN, ONUPD_MSN, SSD, ONUPD_date, spam_onupd_diff from (\n    select *,\n           row_number() over (partition by MPXN order by spam_onupd_diff) n\n    from (\n      select SPAMSSD.*, ONUPD.ONUPD_date, ONUPD_MSN,\n             abs(date_diff(ONUPD_date, SSD, Day)) spam_onupd_diff\n      from SPAMSSD\n      left join ONUPD\n      on SPAMSSD.MPXN = ONUPD.MPXN\n      where ONUPD_date is not null\n      order by SPAMSSD.MPXN, ONUPD_date desc)\n    where spam_onupd_diff <= 5)\n  where n = 1)\n\nselect * from (\nselect SPAMSSD.*,\nONUPD_MSN=MSN matching_ONUPD_MSN,\nNOSI_MSN=MSN matching_NOSI_MSN,\nMRI_MSN=MSN matching_MRI_MSN,\nONUPD_date, ONUPD_MSN, spam_onupd_diff, NOSI_date, NOSI_MSN, spam_nosi_diff, MRI_date, MRI_MSN, spam_mri_diff from SPAMSSD\nleft join NONUPD\non SPAMSSD.MPXN = NONUPD.MPXN\nand SPAMSSD.SSD = NONUPD.SSD\nleft join NNOSI\non SPAMSSD.MPXN = NNOSI.MPXN\nand SPAMSSD.SSD = NNOSI.SSD\nleft join NMRI\non SPAMSSD.MPXN = NMRI.MPXN\nand SPAMSSD.SSD = NMRI.SSD)\nwhere (NOSI_date is not null or MRI_date is not null or ONUPD_date is not null) and (matching_MRI_MSN = true and (matching_NOSI_MSN != true or matching_ONUPD_MSN != true))\norder by SSD desc, MPXN\n\n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_ambiguous_meters":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_ambiguous_meters","location":"EU","num_bytes":32430,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_ambiguous_meters","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_ambiguous_meters","table_id":"READ_SUBMISSION_ambiguous_meters","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_consumption_history_from_actual_readings":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_consumption_history_from_actual_readings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_consumption_history_from_actual_readings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_consumption_history_from_actual_readings","table_id":"READ_SUBMISSION_consumption_history_from_actual_readings","time_partitioning":null,"view_query":"\/*  ======================================  *\/\n\/*  CONSUMPTION FROM ACTUAL METER READINGS  *\/\n\/*  ======================================  *\/\n\n\n-- PURPOSE:\n-- This view creates artifical consumption blocks excluding estimatedReadings, as is required for use in estimation. In \n-- order to ensure that only valid consumption blocks are created, SPAM latest mappings are checked against, and only \n-- consumption for the current meter is allowed.\n-- Created: 2020-05-05\n-- Last updated: 2020-05-05\n\nWITH\n\n\/* CONSUMPTION FROM NON-ESTIMATES  *\/\n-- from the full set of meter readings taken from mpxn consumption, create the latest available consumption blocks.\n-- joining on SPAM data here ensures that no blocks are produces accross \n actual_consumption AS (\n   SELECT\n     rd.mpxn\n    ,rd.msn\n    ,orionMeterType\n    ,rd.tier\n    ,rd.timeOfUseLabel\n    ,rd.clockingTimeId\n    ,readingDate AS toReadingDate\n    ,meterReading AS toReading\n    ,readingType AS toReadingType\n    ,LAG(readingDate) OVER(PARTITION BY rd.mpxn, rd.msn, rd.tier, rd.timeOfUseLabel ORDER BY readingDate) AS fromReadingDate -- include tou label to ensure that no blocks are built across configs\n    ,LAG(meterReading) OVER(PARTITION BY rd.mpxn, rd.msn, rd.tier, rd.timeOfUseLabel ORDER BY readingDate) AS fromReading\n    ,LAG(readingType) OVER(PARTITION BY rd.mpxn, rd.msn, rd.tier, rd.timeOfUseLabel ORDER BY readingDate) AS fromReadingType\n  FROM (\n    SELECT\n       rd.mpxn\n      ,rd.msn\n      ,CASE      -- this logic is safe, as SMETS2 is the only type with different register mappings and these types are robust in SPAM\n        WHEN mp.meterType LIKE '%S2%' THEN 'SMETS2'\n        WHEN mp.meterType LIKE 'S1%' THEN 'SMETS1'\n        ELSE 'TRAD' END AS orionMeterType\n      ,mp.tier\n      ,mp.timeOfUseLabel\n      ,mp.clockingTimeId\n      ,readingDate\n      ,meterReading\n      ,readingType\n      ,COUNT(DISTINCT rd.tier) OVER(PARTITION BY rd.mpxn,rd.msn,rd.readingDate) AS activeRegisterCount\n    FROM\n      `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_unique_meter_readings` rd\n    INNER JOIN\n      `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings` mp\n        ON  rd.mpxn = mp.mpxn\n        AND rd.msn = mp.msn\n        AND COALESCE(rd.tier, 99) = mp.tier                               -- mapping data in mp guarantees tier. Default 99 for gas applied to the read data\n        AND rd.readingDate >= mp.meterStartDate\n        AND rd.readingDate < COALESCE(mp.meterEndDate, '2099-12-31')\n        AND rd.readingDate >= mp.configStartDate\n        AND rd.readingDate < COALESCE(mp.configEndDate, '2099-12-31') \n    WHERE\n      readingType <> 'EstimatedReading'    -- only exclude estimated readings. This means we keep locked in estimates, like migration date reads. TODO review any new estimated type\n  ) rd\n),\ncleaned_actual AS (\n  SELECT\n     mpxn\n    ,msn\n    ,orionMeterType\n    ,tier\n    ,timeOfUseLabel\n    ,clockingTimeId\n    ,fuel\n    ,toReadingDate\n    ,toReading\n    ,ToReadingType\n    ,fromReadingDate\n    ,fromReading\n    ,fromReadingType \n    ,usagePerDay\n    ,blockLength\n    ,CASE \n      WHEN usage < 0 THEN NULL                                      -- non-negative usage\n      WHEN fuel = 'gas' AND usagePerDay >= 500 THEN NULL\n      WHEN fuel = 'electricity' AND usagePerDay >= 200 THEN NULL    -- very high usage thresholds\n      WHEN blockLength > 365 THEN NULL                               -- don't estimate very long blocks; ops want to avoid this\n      ELSE usage END AS usage\n    ,CASE\n      WHEN usage < 0 THEN 'negative consumption'                    \n      WHEN fuel = 'gas' AND usagePerDay >= 500 THEN 'upper tolerance breach'\n      WHEN fuel = 'electricity' AND usagePerDay >= 200 THEN 'upper tolerance breach'\n      WHEN blockLength > 365 THEN 'one year block'\n      ELSE NULL END AS noConsumptionReason\n  FROM (\n    SELECT\n       *\n      ,CASE WHEN tier = 99 THEN 'gas' ELSE 'electricity' END AS fuel                              -- deriving fuel from tier (a little ugly but it's safe)\n      ,SAFE_DIVIDE((toReading - fromReading) , DATE_DIFF(toReadingDate, fromReadingDate, DAY)) AS usagePerDay  -- these are used to set thresholds\n      ,toReading - fromReading AS usage\n      ,DATE_DIFF(toReadingDate, fromReadingDate, DAY) AS blockLength\n    FROM\n      actual_consumption\n    WHERE\n      fromReadingDate IS NOT NULL -- must be a complete block\n  )\n)\n--TESTS:\n\n--PRODUCTION:\nSELECT * FROM cleaned_actual WHERE usage IS NULL\n  "},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_electrcity_mex_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_electrcity_mex_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_electrcity_mex_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_electrcity_mex_reads","table_id":"READ_SUBMISSION_electrcity_mex_reads","time_partitioning":null,"view_query":"WITH\nall_D10 AS (\n  SELECT \n     record.MpanCores.mpanCore AS mpan\n    ,record.MpanCores.bscValidationStatus\n    ,meterReadingTypes.meterIdSerialNumber AS msn\n    ,meterReadingTypes.readingType\n    ,registerReadings.meterRegisterId AS registerId\n    ,PARSE_DATE(\"%Y%m%d\", SUBSTR(registerReadings.readingDateTime,0,8)) AS readingDate\n    ,registerReadings.registerReading AS reading\n    ,registerReadings.meterReadingFlag\n    ,meterReadingValidationResult.meterReadingReasonCode\n    ,meterReadingValidationResult.meterReadingStatus\n    ,header.fromMarketParticipantRoleCode\n    ,header.fromMarketParticipantId\n    ,header.toMarketParticipantRoleCode\n    ,header.toMarketParticipantId\n    ,header.fileIdentifier\n    ,PARSE_DATE(\"%Y%m%d\", SUBSTR(header.fileCreationTimestamp,0,8)) AS fileCreationTimestamp\n  FROM `data-engineering-prod.landing_andromeda_secure.flow_D0010002_split_v1` \n  INNER JOIN UNNEST( record.MpanCores.meterReadingTypes )  AS meterReadingTypes\n  INNER JOIN UNNEST( meterReadingTypes.registerReadings )  AS registerReadings\n  LEFT JOIN UNNEST( registerReadings.meterReadingValidationResult )  AS meterReadingValidationResult\n  WHERE\n    PARTITIONTIME >= '2020-04-01'\n), i_and_f AS (\n  SELECT\n    *\n  FROM (\n    SELECT \n      *\n      ,ROW_NUMBER() OVER(PARTITION BY mpan, msn, readingDate, registerId ORDER BY fileCreationTimestamp DESC) AS orderReceived\n    FROM \n      all_d10 \n    WHERE \n      readingType IN ('F', 'I') \n  ) AS d10\n  -- check that supplies are on Orion now\n  INNER JOIN (\n    SELECT DISTINCT\n       sp.mpxn\n    FROM \n      `data-engineering-prod.landing_orion_migration.orion_migration_success_v2`\n    INNER JOIN\n      UNNEST(supplyPointList) AS sp\n  ) AS orion\n    ON orion.mpxn = d10.mpan\n  WHERE \n    orderReceived = 1\n    AND readingDate >= '2020-04-01'\n  ORDER BY \n    mpan\n), true_mex AS (  -- this removes cases where old msn = new msn (dummy mex)\nSELECT i.* FROM (\n  SELECT DISTINCT mpan, msn, readingDate FROM i_and_f WHERE readingType = 'I') AS i\nINNER JOIN (\n  SELECT DISTINCT mpan, msn, readingDate FROM i_and_f WHERE readingType = 'F') AS f\n    ON  i.mpan = f.mpan\n    AND i.readingDate = f.readingDate\n    AND i.msn <> f.msn\n), existing_reads AS (\n  SELECT DISTINCT\n     event.ElectricityManualReadingEvent.msn \n    ,DATE(event.ElectricityManualReadingEvent.readingDateTime) AS readingDate\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_manual_read_submitted_v2`\n  WHERE\n    DATE(event.ElectricityManualReadingEvent.readingDateTime) >= '2020-04-01'    -- TODO change to rolling 3 months\n), reads_to_submit AS (\n  SELECT \n    fi.*\n  FROM \n    i_and_f AS fi\n  INNER JOIN \n    true_mex  AS tm\n      ON  fi.mpan = tm.mpan\n      AND fi.readingDate = tm.readingDate\n  LEFT JOIN\n    existing_reads AS er\n      ON  er.msn = fi.msn\n      AND er.readingDate = fi.readingDate\n  WHERE\n    er.msn IS NULL -- checks that there is no reading for this msn and date already in R&C\n)\nSELECT\n   rs.msn\n  ,rs.mpan AS mpxn\n  ,spam.fuel AS fuel\n  ,CASE \n    WHEN meterType LIKE '%S2%' THEN 'SMETS2'\n    WHEN meterType LIKE '%S1%' THEN 'SMETS1'\n    ELSE 'TRAD' END AS orionMeterType\n  ,'electricity MEX' AS readRequestedReason\n  ,rs.readingDate AS readRequestedDate\n  ,CASE\n    WHEN rs.readingType = 'F' THEN 'MexReadingFinal'\n    WHEN rs.readingType = 'I' THEN 'MexReadingInitial'\n    END AS orionReadingType\n  ,CAST(rs.reading AS FLOAT64) AS registerReading\n  ,spam.timeOfUseLabel\nFROM\n  reads_to_submit rs\nINNER JOIN\n  `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings` spam\n    ON  spam.mpxn = rs.mpan\n    AND spam.msn = rs.msn\n    AND spam.meterRegisterId = rs.registerId\n    AND spam.meterStartDate <= rs.readingDate\n    AND COALESCE(spam.meterEndDate, '2999-12-31') >= rs.readingDate\n    AND spam.configStartDate <= rs.readingDate\n    AND COALESCE(spam.configEndDate, '2999-12-31') >= rs.readingDate\nORDER BY rs.mpan, readingType\n\n\n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_extrapolation_estimate":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_extrapolation_estimate","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_extrapolation_estimate","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_extrapolation_estimate","table_id":"READ_SUBMISSION_extrapolation_estimate","time_partitioning":null,"view_query":"WITH\n\nlast_read AS (\n  SELECT\n     rd.mpxn\n    ,rd.msn\n    ,rd.tier\n    ,rd.meterReading\n    ,rd.readingType\n    ,rd.readingDate\n    ,COUNT(DISTINCT rd.tier) OVER(PARTITION BY rd.mpxn, rd.msn) AS activeRegisterCount    \n  FROM \n    `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_unique_meter_readings` rd\n  INNER JOIN (\n    SELECT\n       mpxn     --AMBIGUOUS FIX\n      ,msn\n      ,MAX(readingDate) AS lastReadDate\n    FROM\n      `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_unique_meter_readings` \n    WHERE\n      readingType <> 'EstimatedReading'\n    GROUP BY\n      mpxn --AMBIGUOUS FIX\n       , msn\n    ) lst\n      ON lst.mpxn=rd.mpxn --AMBIGUOUS FIX\n      AND  lst.msn = rd.msn\n      AND lst.lastReadDate = rd.readingDate\n),\n\nlast_read_mapped AS (\n\/* JOIN SPAM DATA *\/\n-- join on register count to ensure that only correct registers are estimated\n  SELECT \n     rd.mpxn\n    ,mp.region\n    ,rd.msn\n    ,mp.fuel\n    ,CASE      -- this logic is safe, as SMETS2 is the only type with different register mappings and these types are robust in SPAM\n      WHEN mp.meterType LIKE '%S2%' THEN 'SMETS2'\n      WHEN mp.meterType LIKE 'S1%' THEN 'SMETS1'\n      ELSE 'TRAD' END AS orionMeterType\n    ,rd.tier\n    ,mp.timeOfUseLabel\n    ,mp.clockingTimeId      -- still temporarily needed for personal projections\n    ,rd.meterReading\n    ,rd.readingType\n    ,rd.readingDate\n    ,rd.activeRegisterCount\n    ,mp.imperialMeterIndicator --Imperial update\n  FROM\n    last_read rd\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings` mp -- join on SPAM for tou label and to confirm that the mapping is correct\n      ON  rd.mpxn = mp.mpxn\n      AND rd.msn = mp.msn\n      AND COALESCE(rd.tier, 99) = mp.tier                               -- mapping data in mp guarantees tier. Default 99 for gas applied to the read data\n      AND rd.readingDate >= mp.meterStartDate\n      AND rd.readingDate < COALESCE(mp.meterEndDate, '2099-12-31')\n      AND rd.readingDate >= mp.configStartDate\n      AND rd.readingDate < COALESCE(mp.configEndDate, '2099-12-31')   \n      AND rd.activeRegisterCount = mp.activeRegisterCount               -- of counts differ, don't estimate\n  ),\n\n\n\/* TARGET DATES *\/\nnew_block AS (\n  SELECT\n     r.mpxn\n    ,r.region\n    ,r.msn\n    ,r.fuel\n    ,r.orionMeterType\n    ,r.tier\n    ,r.timeOfUseLabel\n    ,r.clockingTimeId\n    ,r.meterReading AS lastReading\n    ,r.readingType AS lastReadingType\n    ,r.readingDate AS lastReadingDate\n    ,r.activeRegisterCount\n    ,d.readRequestedDate\n    ,d.readRequestedReason\n    ,r.imperialMeterIndicator --Imperial update\n  FROM\n    last_read_mapped r\n  INNER JOIN (\n    -- join the target dates on SPAM data as well, so that we can check register count and timeOfUseLabel\n    SELECT d.mpxn, d.readRequestedDate, d.readRequestedReason, mp.timeOfUseLabel, mp.activeRegisterCount, mp.imperialMeterIndicator\n    FROM `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_read_dates_required_v2` d\n    INNER JOIN `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings` mp\n       ON d.mpxn = mp.mpxn\n      AND d.readRequestedDate >= mp.meterStartDate\n      AND d.readRequestedDate < COALESCE(mp.meterEndDate, '2099-12-31')\n      AND d.readRequestedDate >= mp.configStartDate\n      AND d.readRequestedDate < COALESCE(mp.configEndDate, '2099-12-31')  \n    WHERE readRequestedReason IN ('missing contract change read', 'missing billing read', 'missing loss confirmation read')   -- exclude migration dates\n    ) d\n      ON  r.mpxn = d.mpxn\n      AND r.readingDate < d.readRequestedDate -- extrapolation only applies to dates forward of last reading\n      AND r.timeOfUseLabel = d.timeOfUseLabel\n      AND r.activeRegisterCount = d.activeRegisterCount\n      AND COALESCE(r.imperialMeterIndicator, \"NA\") = COALESCE(d.imperialMeterIndicator, \"NA\") --Imperial update: in case of null imperialMeterIndicator, those won't be mapped as NULL=NULL is not True. Hence the coalesce\n),\n\n\/* GET CVS *\/\ncv AS(\n  SELECT\n    chargingZone,\n    applicableGasDay,\n    value\n  FROM (\n    SELECT\n      metadata.createdAt,\n      chargingZone,\n      applicableGasDay,\n      value,\n      status,\n      ROW_NUMBER() OVER(\n        PARTITION BY chargingZone,\n        applicableGasDay\n        ORDER BY\n          metadata.createdAt DESC\n      ) as rn\n    FROM\n      `data-engineering-prod.landing_andromeda.rac_calorific_value_received_v1`\n    WHERE\n      value IS NOT NULL\n  )\n  WHERE\n    rn = 1\n),\n\n  \/*  GET COEFFICIENTS   *\/\ncoefficients AS (\n  SELECT\n     settlement_date AS applicableDate\n    ,AVG(ALP) AS usageCoefficient\n    ,'gas' AS fuel\n  FROM\n    `data-engineering-prod.product_andromeda_secure.rac_gas_loadProfiles` \n  WHERE\n    band = 1\n    AND settlement_date >= DATE_ADD('2020-01-01', INTERVAL -1 YEAR)\n    AND settlement_date <= DATE_ADD('2020-12-31', INTERVAL 1 YEAR)\n  GROUP BY\n    settlement_date\n  UNION ALL\n  SELECT\n    settlementDate AS applicableDate\n    ,SUM(customerDemand) AS usageCoefficient\n    ,'electricity' AS fuel\n  FROM\n    `data-engineering-prod.product_andromeda_secure.rac_electricity_loadProfiles`\n  WHERE\n    profileClassId = 1\n    AND settlementDate >= DATE_ADD('2020-01-01', INTERVAL -1 YEAR)\n    AND settlementDate <= DATE_ADD('2020-12-31', INTERVAL 1 YEAR)\n  GROUP BY \n    settlementDate\n),\n-- take the cumulative coefficient using the running sum (sum window) function\ncumulative AS (\n  SELECT\n     applicableDate\n    ,fuel\n    ,SUM(usageCoefficient) OVER(PARTITION BY fuel ORDER BY applicableDate) AS cumulativeCoefficient\n  FROM\n    coefficients\n),\n\n\/* GET USAGE PROJECTION *\/\n--latest projection by mpxn and register\nusage_projections AS(\nSELECT\n   mpxn\n  ,clockingTimeId\n  ,projectedConsumption\nFROM (\n  SELECT \n     event.GasAnnualProjectionEvent.metadata.createdAt\n    ,event.GasAnnualProjectionEvent.mprn AS mpxn\n    ,event.GasAnnualProjectionEvent.effectiveFrom\n    ,9999 AS clockingTimeId\n    ,event.GasAnnualProjectionEvent.projectedConsumption --kWh\n    ,ROW_NUMBER() OVER(\n      PARTITION BY event.GasAnnualProjectionEvent.mprn \n      ORDER BY event.GasAnnualProjectionEvent.metadata.createdAt DESC) AS rn -- assume latest projection is the best one. Projection logic should make this safe\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_personal_projections_calculated_v5`\n  WHERE\n    PARTITIONTIME >= '2020-01-01'\n    AND event.GasAnnualProjectionEvent.projectedConsumption < 150000\n  UNION ALL\n  SELECT \n     event.ElectricityAnnualProjectionEvent.metadata.createdAt\n    ,event.ElectricityAnnualProjectionEvent.mpan AS mpxn\n    ,event.ElectricityAnnualProjectionEvent.effectiveFrom\n    ,prc.clockingTimeId                                                                           -- @TODO this will be replaced by timeOfUseLabel soon\n    ,prc.projectedConsumption\n    ,ROW_NUMBER() OVER(\n      PARTITION BY event.ElectricityAnnualProjectionEvent.mpan, prc.clockingTimeId \n      ORDER BY event.ElectricityAnnualProjectionEvent.metadata.createdAt DESC) AS rn -- assume latest projection is the best one. Projection logic should make this safe\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_personal_projections_calculated_v5` \n  INNER JOIN \n    UNNEST (event.ElectricityAnnualProjectionEvent.projectedRegisterConsumption) AS prc\n  WHERE\n    PARTITIONTIME >= '2020-01-01'\n    AND prc.projectedConsumption < 30000 -- TODO review these\n  )\nWHERE\n  rn = 1\n),\n-- TEST:  (confirm zero results)\n\n\n\/* CALCULATE ESTIMATE *\/\nextrapolation AS (\n\nSELECT \n   nb.*\n  ,effectiveCalorificValue\n  ,up.projectedConsumption\n  ,cu1.cumulativeCoefficient AS fromDateCoefficient\n  ,cu2.cumulativeCoefficient AS toDateCoefficient\n  ,cu2.cumulativeCoefficient - cu1.cumulativeCoefficient AS sumOfCoefficientsBlock\nFROM\n  new_block nb\nINNER JOIN        -- from reading\n  cumulative cu1\n    ON  cu1.fuel = nb.fuel\n    AND cu1.applicableDate = nb.lastReadingDate\nINNER JOIN        -- to reading\n  cumulative cu2\n    ON  cu2.fuel = nb.fuel\n    AND cu2.applicableDate = nb.readRequestedDate\nLEFT JOIN\n  usage_projections up\n    ON  up.mpxn = nb.mpxn\n    AND up.clockingTimeId = nb.clockingTimeId -- both are defaulted to 9999 for gas\nLEFT JOIN ( -- get effective calorific value (gas only)\n  SELECT\n     nb.mpxn\n    ,nb.msn\n    ,nb.readRequestedDate\n    ,AVG(value) AS effectiveCalorificValue\n  FROM (\n    SELECT mpxn, msn, region, lastReadingDate, readRequestedDate FROM new_block)\n    nb\n  INNER JOIN\n    cv\n      ON  nb.region = cv.chargingZone\n      AND nb.lastReadingDate <= cv.applicableGasDay\n      AND nb.readRequestedDate > cv.applicableGasDay\n  GROUP BY\n     nb.mpxn\n    ,nb.msn\n    ,nb.region\n    ,nb.lastReadingDate\n    ,nb.readRequestedDate \n  ) cv\n    ON  cv.mpxn = nb.mpxn\n    AND cv.msn = nb.msn\n    AND cv.readRequestedDate = nb.readRequestedDate\n)\n--,\n\n\/* CREATE ESTIMATED READING *\/\n--estimate AS (\n  SELECT \n     mpxn\n    ,msn\n    ,orionMeterType\n    ,imperialMeterIndicator --Imperial update\n    ,region\n    ,fuel\n    ,tier\n    ,timeOfUseLabel\n    ,clockingTimeId    \n    ,readRequestedReason\n    ,readRequestedDate    \n    ,lastReadingDate\n    ,lastReadingType\n    ,ROUND(lastReading, 1) AS lastReading\n    ,ROUND(projectedConsumption,1) AS projectedConsumption\n    ,ROUND(effectiveCalorificValue,1) AS effectiveCalorificValue\n    -- estimate calculation. For electricity, we multiply projection by sum of coefficients\n    -- for gas, we need to back volume out from energy (multiply by 3.6, divide by CV and volume correction factor 1.02264\n    -- for gas an imperial, 100 cubic feet = 2.83168 cubic m\n    ,CASE\n      WHEN fuel = 'electricity' THEN ROUND( (sumOfCoefficientsBlock * projectedConsumption) + lastReading, 0)\n      WHEN fuel = 'gas' AND imperialMeterIndicator = 'Y' THEN ROUND(SAFE_DIVIDE(                            --Imperial update\n                                       (sumOfCoefficientsBlock * projectedConsumption * 3.6)                --Imperial update\n                                      ,effectiveCalorificValue * 1.02264 * 2.83168) + lastReading, 0        --Imperial update\n                                      )\n      WHEN fuel = 'gas' AND COALESCE(imperialMeterIndicator, \"NA\") <> 'Y' THEN ROUND(SAFE_DIVIDE( --COALESCE added since there are some nulll cases that would not be picked otherwise\n                              (sumOfCoefficientsBlock * projectedConsumption * 3.6)\n                              ,effectiveCalorificValue * 1.02264) + lastReading, 0\n                                      )\n      END AS estimatedReading\n    ,'EstimatedReading' AS orionReadingType\n  FROM \n    extrapolation\n    \n    --WHERE DATE_DIFF(readRequestedDate, lastReadingDate, DAY) > 5 --Added here to improve performance\n    WHERE NOT (readRequestedReason = 'missing billing read' AND DATE_DIFF(readRequestedDate, lastReadingDate, DAY) <= 5)\n--)\n\n-- TESTS (confirm all zero)\n-- SELECT 'last read duplicate registers' AS test, mpxn, msn, timeOfUseLabel, COUNT(*) FROM last_read_mapped GROUP BY mpxn, msn, timeOfUseLabel HAVING COUNT(*) > 1\n-- UNION ALL\n-- SELECT 'multiple anytime registers' AS test, mpxn, msn, '' AS timeOfUseLabel, COUNT(*) FROM last_read_mapped WHERE timeOfUseLabel = 'anytime' GROUP BY mpxn, msn  HAVING COUNT(*) > 1\n-- UNION ALL\n-- SELECT 'single peak\/offpeak register' AS test, mpxn, msn, '' AS timeOfUseLabel, COUNT(*) FROM last_read_mapped WHERE timeOfUseLabel <> 'anytime' GROUP BY mpxn, msn  HAVING COUNT(*) = 1\n\n--select mpxn, clockingTimeId, count(*)  from usage_projections group by  mpxn, clockingTimeId having count(*) > 1\n--select mpxn, msn, timeOfUseLabel, readRequestedDate, readRequestedReason, count(*) from estimate group by mpxn, msn, timeOfUseLabel, readRequestedDate ,readRequestedReason having count(*) > 1\n\n\n--check numbers:\n--SELECT fuel, readRequestedReason, COUNT(*), COUNT(DISTINCT mpxn) FROM estimate GROUP BY fuel, readRequestedReason ORDER BY fuel, readRequestedReason\n\n--PRODUCTION:\n--SELECT * FROM estimate\n--TODO remove when no longer needed\n--WHERE DATE_DIFF(readRequestedDate, lastReadingDate, DAY) > 5\n   \n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_gas_mex_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_gas_mex_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_gas_mex_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_gas_mex_reads","table_id":"READ_SUBMISSION_gas_mex_reads","time_partitioning":null,"view_query":"WITH\nall_onjob AS (\n SELECT\n    meterPoint.meterPointReference AS mprn\n   ,transactionTypeCode\n   ,record.Transaction.transactionTypeCode AS transactionTypeCode_b\n   ,asset.serialNumber AS msn\n   ,meter.meterTypeCode\n   ,PARSE_DATE(\"%Y%m%d\", reading.readingDate) AS readingDate \n   ,reading.readingIndex AS reading\n   ,header.originatorId \n   ,header.originatorRole\n   ,header.recipientId\n   ,header.recipientRole\n   ,PARSE_DATE(\"%Y%m%d\", header.createdDate) AS fileCreationTimeStamp\n   ,header.fileIdentifier\n   ,ROW_NUMBER() OVER(PARTITION BY meterPoint.meterPointReference, asset.serialNumber, PARSE_DATE(\"%Y%m%d\", reading.readingDate) ORDER BY PARSE_DATE(\"%Y%m%d\", header.createdDate) DESC) AS orderReceived\n FROM `data-engineering-prod.landing_andromeda_secure.flow_ONJOB_split_v4` onj\n INNER JOIN UNNEST( record.Transaction.meterPoint ) AS meterPoint\n INNER JOIN UNNEST( meterPoint.asset ) AS asset\n INNER JOIN UNNEST( asset.meter ) AS meter\n INNER JOIN UNNEST( asset.registerDetails ) AS registerDetails\n INNER JOIN UNNEST( registerDetails.reading ) AS reading\n  WHERE\n    PARTITIONTIME >= '2020-04-01' \n    AND record.Transaction.transactionTypeCode = 'EXCHG'\n), i_and_f AS (\n  SELECT\n    *\n  FROM\n    all_onjob  onj\n  -- check that supplies are on Orion now\n  INNER JOIN (\n    SELECT DISTINCT\n       sp.mpxn\n    FROM \n      `data-engineering-prod.landing_orion_migration.orion_migration_success_v2`\n    INNER JOIN\n      UNNEST(supplyPointList) AS sp\n  ) AS orion\n    ON orion.mpxn = onj.mprn\n  WHERE\n    orderReceived = 1\n    AND readingDate >= '2020-04-01'\n  ORDER BY \n     mprn\n    ,transactionTypeCode\n), existing_reads AS (\n  SELECT DISTINCT\n     event.GasVolumeManualReadingEvent.msn \n    ,DATE(event.GasVolumeManualReadingEvent.readingDateTime) AS readingDate\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_manual_read_submitted_v2`\n  WHERE\n    DATE(event.GasVolumeManualReadingEvent.readingDateTime) >= '2020-04-01'    \n), reads_to_submit AS (\n  SELECT \n    fi.*\n  FROM \n    i_and_f AS fi\n  LEFT JOIN\n    existing_reads AS er\n      ON  er.msn = fi.msn\n      AND er.readingDate = fi.readingDate\n  WHERE\n    er.msn IS NULL -- checks that there is no reading for this msn and date already in R&C\n)\nSELECT\n   rs.msn\n  ,rs.mprn AS mpxn\n  ,spam.fuel AS fuel\n  ,CASE \n    WHEN meterType LIKE '%S2%' THEN 'SMETS2'\n    WHEN meterType LIKE '%S1%' THEN 'SMETS1'\n    ELSE 'TRAD' END AS orionMeterType\n  ,'gas MEX' AS readRequestedReason\n  ,rs.readingDate AS readRequestedDate\n  ,CASE\n    WHEN rs.transactionTypeCode = 'REMVE' THEN 'MexReadingFinal'\n    WHEN rs.transactionTypeCode = 'INSTL' THEN 'MexReadingInitial'\n    END AS orionReadingType\n  ,CAST(rs.reading AS FLOAT64) AS registerReading\n  ,spam.timeOfUseLabel\nFROM\n  reads_to_submit rs\nINNER JOIN\n  `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings` spam\n    ON  spam.mpxn = rs.mprn\n    AND spam.msn = rs.msn\n    AND spam.meterStartDate <= rs.readingDate\n    AND COALESCE(spam.meterEndDate, '2999-12-31') >= rs.readingDate\n    AND spam.configStartDate <= rs.readingDate\n    AND COALESCE(spam.configEndDate, '2999-12-31') >= rs.readingDate\nWHERE NOT (\n  rs.transactionTypeCode = 'REMVE' AND rs.reading IN ('0000', '00000')) -- avoid cases where final and initial are swapped\nORDER BY rs.mprn, transactionTypeCode\n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_gentrack_migration_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_gentrack_migration_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_gentrack_migration_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_gentrack_migration_reads","table_id":"READ_SUBMISSION_gentrack_migration_reads","time_partitioning":null,"view_query":"\nWITH\n--Select migrated accounts\n\ntargets AS (\n  SELECT\n     mpxn\n    ,fuel\n    ,readRequestedDate\n    ,readRequestedReason\n  FROM\n   `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_read_dates_required_v2`\n  WHERE\n    readRequestedReason = 'missing migration read'  -- migration date read missing\n),\n\n--Get gentrack reads\ninvoice_reads AS(\nSELECT \n   msn\n  ,mpxn\n  ,clockingTimeId\n  ,gentrackReadDate\n  ,gentrackReading\n  ,gentrackReadCategory\n  ,gentrackReadCategoryGroup\nFROM(\n  SELECT \n     reg.Meter_Serial_No AS msn \n    ,inst.Meter_Point_No AS mpxn\n    ,CASE \n      WHEN reg.Register_Type LIKE 'G%' THEN 9999 \n      ELSE CAST(reg.Time_Pattern AS NUMERIC)\n      END AS clockingTimeId                                -- clockingTimeId and TPR are synonymous\n    ,invr.Current_Read_Date AS gentrackReadDate    \n    ,invr.Current_Read AS gentrackReading\n    ,rc.Read_Category  AS gentrackReadCategory\n    ,rc.Read_Category_Group AS gentrackReadCategoryGroup   --actual\/estimated\n    ,ROW_NUMBER() OVER(\n      PARTITION BY reg.Meter_Serial_No, CASE WHEN reg.Register_Type LIKE 'G%' THEN '9999' ELSE reg.Time_Pattern END, Current_Read_Date \n      ORDER BY ETL_Datetime DESC) AS rowNumber\n  FROM (\n    SELECT\n       Invoice_ID\n      ,Meter_Serial_No\n      ,Register_ID\n      ,Current_Read_Date\n      ,Current_Read_Type_Code\n      ,Current_Read\n      ,Installation_No\n      ,ROW_NUMBER() OVER(PARTITION BY Meter_Serial_No, Register_ID, Current_Read_Date ORDER BY ETL_Datetime DESC) AS rowNumber\n    FROM\n      `data-engineering-prod.reporting_billing.v_Invoice_Register`\n      ) invr\n   --join to \"reporting billing.v_Invoice\" using Invoice_ID and exclude the ones that are reverse\n  LEFT JOIN (SELECT DISTINCT Invoice_ID FROM  `data-engineering-prod.reporting_billing.v_Invoice` WHERE Reversed_Datetime IS NOT NULL) invoice \n      ON invr.Invoice_ID = invoice.Invoice_ID\n  INNER JOIN \n    `data-engineering-prod.reporting_meters.v_Read_Type` rt\n      ON invr.Current_Read_Type_Code = rt.Read_Type_Code\n  INNER JOIN (\n    SELECT * FROM `data-engineering-prod.reporting_meters.v_Read_Category` WHERE Read_Category_Group IS NOT NULL\n    ) rc\n      ON rt.Read_Category_Code = rc.Read_Category_Code\n  INNER JOIN (\n    SELECT\n       Register_ID\n      ,Meter_Serial_No\n      ,Register_Type\n      ,Time_Pattern\n      ,ETL_Datetime\n      ,ROW_NUMBER() OVER(PARTITION BY Register_ID,Meter_Serial_No ORDER BY ETL_Datetime DESC) AS regRowNum\n    FROM `data-engineering-prod.reporting_meters.v_Register` WHERE Register_ID != 'JUN-6505' AND Register_Type IS NOT NULL\n    ) reg\n      ON invr.Register_ID = reg.Register_ID\n      AND invr.Meter_Serial_No = reg.Meter_Serial_No\n-- The following snippet was added to include mpxn on the analysis. This ensure uniqueness in case of Ambiguos meters. This inner join resulted on the query returning slighltly less results (e.g. 316 vs 295)    \n  INNER JOIN (\n    SELECT DISTINCT Installation_No\n                  , Meter_Point_No \n    FROM `data-engineering-prod.reporting_meters.v_Installation` \n    WHERE  Billing_System= 'GENTRACK'\n    ) inst\n  ON invr.Installation_No = inst.Installation_No\n--  \n  WHERE\n    rowNumber = 1 -- latest invoice version\n    AND regRowNum = 1\n    AND invoice.Invoice_ID IS NULL\n  )\n  WHERE \n    rowNumber = 1\n),\n\n\/* READS TO SUBMIT *\/\nmissing_migration_reads AS (\n  SELECT\n     tgt.mpxn\n    ,map.msn\n    ,CASE      -- this logic is safe, as SMETS2 is the only type with different register mappings and these types are robust in SPAM\n      WHEN map.meterType LIKE '%S2%' THEN 'SMETS2'\n      WHEN map.meterType LIKE 'S1%' THEN 'SMETS1'\n      ELSE 'TRAD' END AS orionMeterType\n    ,tgt.fuel  \n    ,map.tier\n    ,map.clockingTimeId\n    ,map.timeOfUseLabel\n    ,tgt.readRequestedDate\n    ,tgt.readRequestedReason\n    ,inv.gentrackReadDate\n    ,inv.gentrackReading\n    ,inv.gentrackReadCategoryGroup\n    ,CASE \n      WHEN inv.gentrackReadCategoryGroup = 'Estimated Read' THEN 'MigrationReadingEstimated'\n      WHEN inv.gentrackReadCategoryGroup = 'Actual Read' THEN 'MigrationReadingActual'\n      END AS orionReadingType\n  FROM\n    invoice_reads inv\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings` map\n      ON  inv.msn = map.msn\n      AND inv.mpxn = map.mpxn\n      AND inv.clockingTimeId = map.clockingTimeId\n      AND inv.gentrackReadDate >= configStartDate\n      AND inv.gentrackReadDate >= meterStartDate\n      AND inv.gentrackReadDate < COALESCE(configEndDate, '2999-12-31')\n      AND inv.gentrackReadDate < COALESCE(meterEndDate, '2999-12-31')\n  INNER JOIN\n    targets AS tgt\n      ON  tgt.mpxn = map.mpxn\n      AND tgt.readRequestedDate = inv.gentrackReadDate\n)\n--TESTS: (assert all zero results)\n--SELECT msn, clockingTimeId, gentrackReadDate, COUNT(*) FROM invoice_reads GROUP BY msn, clockingTimeId, gentrackReadDate HAVING COUNT(*) > 1\n--SELECT msn, clockingTimeId, COUNT(*) FROM missing_migration_reads GROUP BY msn, clockingTimeId HAVING COUNT(*) > 1\n\n--PRODUCTION:\nSELECT * FROM missing_migration_reads\n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_interpolation_estimate":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_interpolation_estimate","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_interpolation_estimate","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_interpolation_estimate","table_id":"READ_SUBMISSION_interpolation_estimate","time_partitioning":null,"view_query":"\nWITH\n\n  \/*  GET COEFFICIENTS   *\/\ncoefficients AS (\n  SELECT\n     settlement_date AS applicableDate\n    ,AVG(ALP) AS usageCoefficient\n    ,'gas' AS fuel\n  FROM\n    `data-engineering-prod.product_andromeda_secure.rac_gas_loadProfiles` \n  WHERE\n    band = 1\n    AND settlement_date >= DATE_ADD('2020-01-01', INTERVAL -1 YEAR)\n    AND settlement_date <= DATE_ADD('2020-12-31', INTERVAL 1 YEAR)\n  GROUP BY\n    settlement_date\n  UNION ALL\n  SELECT\n    settlementDate AS applicableDate\n    ,SUM(customerDemand) AS usageCoefficient\n    ,'electricity' AS fuel\n  FROM\n    `data-engineering-prod.product_andromeda_secure.rac_electricity_loadProfiles`\n  WHERE\n    profileClassId = 1\n    AND settlementDate >= DATE_ADD('2020-01-01', INTERVAL -1 YEAR)\n    AND settlementDate <= DATE_ADD('2020-12-31', INTERVAL 1 YEAR)\n  GROUP BY \n    settlementDate\n),\n-- take the cumulative coefficient using the running sum (sum window) function\ncumulative AS (\n  SELECT\n     applicableDate\n    ,fuel\n    ,SUM(usageCoefficient) OVER(PARTITION BY fuel ORDER BY applicableDate) AS cumulativeCoefficient\n  FROM\n    coefficients\n),\n\n\/* JOIN ON TARGET DATES *\/\nstraddling_block AS (\n  SELECT\n     cons.mpxn\n    ,cons.msn\n    ,cons.orionMeterType\n    ,cons.tier\n    ,cons.timeOfUseLabel\n    ,cons.clockingTimeId\n    ,cons.fuel\n    ,ct.readRequestedDate\n    ,ct.readRequestedReason\n    ,cons.fromReadingDate\n    ,cons.toReadingDate\n    ,cons.usage\n    ,cons.fromReading\n    ,cons.toReading\n    ,cons.fromReadingType\n    ,cons.toReadingType\n    ,cu1.cumulativeCoefficient AS fromDateCoefficient\n    ,cu2.cumulativeCoefficient AS toDateCoefficient\n    ,cu.cumulativeCoefficient AS billingDateCoefficient\n    ,cu2.cumulativeCoefficient - cu1.cumulativeCoefficient AS sumOfCoefficientsWholeBlock\n    ,cu.cumulativeCoefficient - cu1.cumulativeCoefficient AS sumOfCoefficientsBefore   \n  FROM (\n    SELECT * \n    FROM `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_read_dates_required_v2` \n    WHERE readRequestedReason IN ('missing contract change read', 'missing billing read', 'missing loss confirmation read')\n    ) ct\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_consumption_history_from_actual_readings` cons\n      ON  cons.mpxn = ct.mpxn\n      AND cons.fromReadingDate < ct.readRequestedDate \n      AND cons.toReadingDate > ct.readRequestedDate\n   INNER JOIN\n      cumulative cu\n        ON  cu.fuel = cons.fuel\n        AND cu.applicableDate = ct.readRequestedDate\n   INNER JOIN\n      cumulative cu1\n        ON  cu1.fuel = cons.fuel\n        AND cu1.applicableDate = cons.fromReadingDate\n   INNER JOIN\n      cumulative cu2\n        ON  cu2.fuel = cons.fuel\n        AND cu2.applicableDate = cons.toReadingDate\n), \n\/* calculate the estimate *\/\nestimate AS (\n  SELECT \n     mpxn\n    ,msn\n    ,fuel\n    ,orionMeterType\n    ,tier\n    ,timeOfUseLabel\n    ,clockingTimeId\n    ,readRequestedDate\n    ,readRequestedReason\n    ,fromReadingDate\n    ,toReadingDate\n    ,fromReading\n    ,toReading\n    ,fromReadingType\n    ,toReadingType\n    ,usage\n    --      ,fromDateCoefficient\n    --      ,toDateCoefficient\n    --      ,billingDateCoefficient\n    --      ,sumOfCoefficientsWholeBlock\n    --      ,sumOfCoefficientsBefore\n    --      ,sumOfCoefficientsBefore \/ sumOfCoefficientsWholeBlock AS proportionOfBlock\n    ,ROUND(fromReading + ((sumOfCoefficientsBefore \/ sumOfCoefficientsWholeBlock) * usage),0) AS estimatedReading\n    ,'EstimatedReading' AS orionReadingType\n  FROM \n    straddling_block\n)\n-- TESTS:\n--SELECT mpxn, msn, timeOfUseLabel, readRequestedDate, readRequestedReason, COUNT(*) FROM estimate GROUP BY mpxn, msn, timeOfUseLabel, readRequestedReason,readRequestedDate  HAVING COUNT(*)  > 1\n\n--PRODUCTION\nSELECT * FROM estimate"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_read_dates_required":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_read_dates_required","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_read_dates_required","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_read_dates_required","table_id":"READ_SUBMISSION_read_dates_required","time_partitioning":null,"view_query":"WITH \n\n\/* CREATE DATE RANGE *\/\n-- we only want to create reads up to three months in the past. This creates the range dates of interest\ntarget_dates AS (\n  SELECT \n    targetDate\n  FROM \n    UNNEST(\n      GENERATE_DATE_ARRAY(\n        DATE_ADD(\n          CURRENT_DATE(), INTERVAL -3 MONTH\n        ), CURRENT_DATE(), INTERVAL 1 DAY\n      )\n    ) AS targetDate\n),\n\n\/* MIGRATION DATES  *\/\n-- never create estimates before migration dates\nmigrations AS (\n  SELECT\n     accountId\n    ,globalAccountId\n    ,fuel\n    ,mpxn\n    ,DATE(createdAt)  AS migrationRunDate\n    ,migrationDate \n  FROM (\n    SELECT\n       accountId\n      ,globalAccountId\n      ,migrationDate\n      ,sp.mpxn\n      ,fuel\n      ,metadata.createdAt\n      ,ROW_NUMBER() OVER(PARTITION BY sp.mpxn ORDER BY migrationDate DESC, metadata.createdAt DESC) AS ordering\n    FROM \n      `data-engineering-prod.landing_orion_migration.orion_migration_success_v2`\n    INNER JOIN\n      UNNEST(supplyPointList) AS sp\n  )\n  WHERE\n    ordering = 1\n),\n\n\/* CONTRACTS *\/\n-- fetch customer contract data, needed to get billing dates and contract change dates\ncontracts AS(  \n  SELECT\n     serviceAccountId\n    ,fuel\n    ,mpxn\n    ,contractId\n    ,startDate\n    ,endDate  \n    ,createdAt\n  FROM (\n    SELECT\n      ct.unionRecord.Contract.mpxn,\n      ct.unionRecord.Contract.serviceAccountId,\n      ct.unionRecord.Contract.fuel,\n      ct.unionRecord.Contract.contractId,\n      ct.unionRecord.Contract.metadata.createdAt,\n      ct.unionRecord.Contract.startDate,\n      ct.unionRecord.Contract.endDate,\n      ct.unionRecord.Contract.lossConfirmed,\n      ROW_NUMBER() OVER(\n          PARTITION BY ct.unionRecord.Contract.serviceAccountId, ct.unionRecord.Contract.mpxn, ct.unionRecord.Contract.contractId, ct.unionRecord.Contract.startDate \n          ORDER BY ct.unionRecord.Contract.metadata.createdAt DESC\n          ) AS rn\n    FROM \n      `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3` ct\n    LEFT JOIN (\n      SELECT DISTINCT \n        unionRecord.Cancelled.contractId \n      FROM \n        `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`\n    ) rm                --Remove cancelled contracts\n        ON ct.unionRecord.Contract.contractId = rm.contractId\n    WHERE \n      ct.unionRecord.Contract IS NOT NULL \n      AND rm.contractId IS NULL\n  )\n  WHERE\n    rn = 1                      -- de-duplicate\n    AND lossConfirmed IS NULL   -- Just live supplies\n),     \n\n\n\/* BILLING DATES *\/\n-- use BAST billing info to find the correct billing date. If none is available, default to 1st\nbast_billing AS(\n  SELECT \n     accountId\n    ,billingDayOfTheMonth\n  FROM (\n    SELECT \n       accountId\n      ,status.Active.billingFrequency\n      ,status.Active.billingDayOfTheMonth\n      ,row_number() OVER (PARTITION BY accountId ORDER BY metadata.createdAt DESC) AS rn \n    FROM \n      `data-engineering-prod.landing_bast_secure.bast_account_billing_information_v1`\n    )\n  WHERE \n    rn = 1 \n    AND billingFrequency IS NOT NULL\n),\nbilling_dates AS( \n  SELECT\n     fuel\n    ,serviceAccountId\n    ,mpxn\n    ,CASE \n      WHEN billingDayOfTheMonth IS NOT NULL THEN billingDayOfTheMonth\n      ELSE 1 END AS billingDayOfTheMonth\n  FROM (\n    SELECT \n       ct.fuel\n      ,ct.serviceAccountId\n      ,ct.mpxn\n      ,bs.billingDayOfTheMonth\n    FROM ( -- for billing dates we just need the mpxn-account mappign\n      SELECT DISTINCT serviceAccountId, mpxn, fuel\n      FROM contracts \n    ) ct\n    LEFT JOIN \n      bast_billing bs\n        ON ct.serviceAccountId = bs.accountId \n  )\n),\n\n\/*  BILLING DATE TARGETS  *\/\n-- create a target list of dates by taking all billing dates since migration and in the last 3 months\ntarget_billing_dates AS (\n  SELECT\n     b.fuel\n    ,b.serviceAccountId\n    ,b.mpxn\n    ,td.targetDate AS readRequestedDate\n    ,'missing billing read' AS readRequestedReason\n  FROM \n    billing_dates b\n  INNER JOIN\n    target_dates td\n      ON EXTRACT(DAY FROM td.targetDate) = b.billingDayOfTheMonth\n  INNER JOIN \n    migrations m \n      ON  m.mpxn = b.mpxn \n      AND b.serviceAccountId = m.accountId\n      AND DATE_ADD(m.migrationDate, INTERVAL +1 DAY) < td.targetDate  -- first billing date is the day after migration. Exclude this.\n  WHERE\n    td.targetDate >= '2020-04-01'  -- hard backstop, as we've already re-issued reads up to April\n   \n),\n\n\/*  CONTRACT CHANGE DATE TARGETS  *\/\n-- create a target list of dates by taking all contract change dates since migration and in the period targetted \ntarget_contract_dates AS (\n  SELECT\n     ct.fuel\n    ,ct.serviceAccountId\n    ,ct.mpxn\n    ,td.targetDate AS readRequestedDate\n    ,'missing contract change read' AS readRequestedReason\n  FROM \n    contracts ct\n  INNER JOIN                              -- check within 3 month range\n    target_dates td\n      ON td.targetDate = ct.startDate\n  INNER JOIN \n    migrations m \n      ON  m.mpxn = ct.mpxn \n      AND m.migrationDate < ct.startDate  -- must be later than migration date\n),\n\n\/*  MIGRATION DATE TARGETS  *\/\n-- create a target list of dates by taking all billing dates since migration and in the last 3 months\ntarget_migration_dates AS (\n  SELECT\n     m.fuel\n    ,m.accountId AS serviceAccountId\n    ,m.mpxn\n    ,td.targetDate AS readRequestedDate\n    ,'missing migration read' AS readRequestedReason\n  FROM \n    migrations m\n  INNER JOIN\n    target_dates td\n      ON td.targetDate = m.migrationDate\n\n),\n\n\/* ALL DATES TOGETHER *\/\nall_dates AS(\n  SELECT * FROM target_billing_dates\n  UNION ALL \n  SELECT * FROM target_contract_dates\n  UNION ALL \n  SELECT * FROM target_migration_dates\n),\n\n  \/* EXCLUDE ALL CASES WHERE WE HOLD A READING  *\/\nmissing_reads AS (\n  SELECT\n     ad.mpxn\n    ,ad.readRequestedDate\n    ,ad.readRequestedReason\n    ,ad.fuel\n  FROM\n    all_dates ad\n  LEFT JOIN (\n    SELECT DISTINCT mpxn, readingDate FROM `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_unique_meter_readings`) r\n      ON  r.mpxn = ad.mpxn\n      AND r.readingDate = ad.readRequestedDate\n  WHERE\n    r.readingDate IS NULL             -- no read on target date\n)\n-- SUMMARY NUMBERS:\n--SELECT fuel,readRequestedReason, count(mpxn)  FROM missing_reads group by fuel,readRequestedReason order by fuel,readRequestedReason\n\n--TEST (should return nothing, TODO add more)\n--select mpxn, readRequestedDate, readRequestedReason, count(*) from all_dates  group by mpxn, readRequestedDate, readRequestedReason having count(*) > 1\n\n--PRODUCTION\nSELECT * FROM missing_reads\n\n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_read_dates_required_v2":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_read_dates_required_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_read_dates_required_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_read_dates_required_v2","table_id":"READ_SUBMISSION_read_dates_required_v2","time_partitioning":null,"view_query":"WITH \n\n\/* CREATE DATE RANGE *\/\n-- we only want to create reads up to three months in the past. This creates the range dates of interest\ntarget_dates AS (\n  SELECT \n    targetDate\n  FROM \n    UNNEST(\n      GENERATE_DATE_ARRAY(\n        DATE_ADD(\n          CURRENT_DATE(), INTERVAL -3 MONTH\n        ), CURRENT_DATE(), INTERVAL 1 DAY\n      )\n    ) AS targetDate\n),\n\n\/* MIGRATION DATES  *\/\n-- never create estimates before migration dates\nmigrations AS (\n  SELECT\n     accountId\n    ,globalAccountId\n    ,fuel\n    ,mpxn\n    ,DATE(createdAt)  AS migrationRunDate\n    ,migrationDate \n  FROM (\n    SELECT\n       accountId\n      ,globalAccountId\n      ,migrationDate\n      ,sp.mpxn\n      ,fuel\n      ,metadata.createdAt\n      ,ROW_NUMBER() OVER(PARTITION BY sp.mpxn ORDER BY migrationDate DESC, metadata.createdAt DESC) AS ordering\n    FROM \n      `data-engineering-prod.landing_orion_migration.orion_migration_success_v2`\n    INNER JOIN\n      UNNEST(supplyPointList) AS sp\n  )\n  WHERE\n    ordering = 1\n),\n\n\/* CONTRACTS *\/\n-- fetch customer contract data, needed to get billing dates and contract change dates\n\n-- contracts AS(  \n--   SELECT\n--      serviceAccountId\n--     ,fuel\n--     ,mpxn\n--     ,contractId\n--     ,startDate\n--     ,endDate  \n--     ,createdAt\n--   FROM (\n--     SELECT\n--       ct.unionRecord.Contract.mpxn,\n--       ct.unionRecord.Contract.serviceAccountId,\n--       ct.unionRecord.Contract.fuel,\n--       ct.unionRecord.Contract.contractId,\n--       ct.unionRecord.Contract.metadata.createdAt,\n--       ct.unionRecord.Contract.startDate,\n--       ct.unionRecord.Contract.endDate,\n--       ct.unionRecord.Contract.lossConfirmed,\n--       ROW_NUMBER() OVER(\n--           PARTITION BY ct.unionRecord.Contract.serviceAccountId, ct.unionRecord.Contract.mpxn, ct.unionRecord.Contract.contractId, ct.unionRecord.Contract.startDate \n--           ORDER BY ct.unionRecord.Contract.metadata.createdAt DESC\n--           ) AS rn\n--     FROM \n--       `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3` ct\n--     LEFT JOIN (\n--       SELECT DISTINCT \n--         unionRecord.Cancelled.contractId \n--       FROM \n--         `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`\n--     ) rm                --Remove cancelled contracts\n--         ON ct.unionRecord.Contract.contractId = rm.contractId\n--     WHERE \n--       ct.unionRecord.Contract IS NOT NULL \n--       AND rm.contractId IS NULL\n--   )\n--   WHERE\n--     rn = 1                      -- de-duplicate\n--     AND lossConfirmed IS NULL   -- Just live supplies\n-- ), \n\n--New contracts logic:\ncontracts AS(  \n  SELECT\n     serviceAccountId\n    ,fuel\n    ,mpxn\n    ,contractId\n    ,startDate\n    ,endDate  \n    ,createdAt\n  FROM (\n    SELECT\n      mpxn,\n      serviceAccountId,\n      fuel,\n      contractId,\n      metadata.createdAt,\n      startDate,\n      endDate,\n      lossConfirmed,\n      cancelled\n    FROM (SELECT *, ROW_NUMBER() OVER(PARTITION BY serviceAccountId, mpxn, contractId, startDate \n                                      ORDER BY metadata.createdAt DESC) AS rn\n          FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v4`)\n  WHERE rn = 1                      -- de-duplicate\n  AND lossConfirmed IS NULL   -- Just live supplies\n  AND cancelled = false --Remove cancelled contracts\n)\n),\n\n\/* BILLING DATES *\/\n-- use BAST billing info to find the correct billing date. If none is available, default to 1st\nbast_billing AS(\n  SELECT \n     accountId\n    ,billingDayOfTheMonth\n  FROM (\n    SELECT \n       accountId\n      ,status.Active.billingFrequency\n      ,status.Active.billingDayOfTheMonth\n      ,row_number() OVER (PARTITION BY accountId ORDER BY metadata.createdAt DESC) AS rn \n    FROM \n      `data-engineering-prod.landing_bast_secure.bast_account_billing_information_v1`\n    )\n  WHERE \n    rn = 1 \n    AND billingFrequency IS NOT NULL\n),\nbilling_dates AS( \n  SELECT\n     fuel\n    ,serviceAccountId\n    ,mpxn\n    ,CASE \n      WHEN billingDayOfTheMonth IS NOT NULL THEN billingDayOfTheMonth\n      ELSE 1 END AS billingDayOfTheMonth\n  FROM (\n    SELECT \n       ct.fuel\n      ,ct.serviceAccountId\n      ,ct.mpxn\n      ,bs.billingDayOfTheMonth\n    FROM ( -- for billing dates we just need the mpxn-account mappign\n      SELECT DISTINCT serviceAccountId, mpxn, fuel\n      FROM contracts \n    ) ct\n    LEFT JOIN \n      bast_billing bs\n        ON ct.serviceAccountId = bs.accountId \n  )\n),\n\n\/*  BILLING DATE TARGETS  *\/\n-- create a target list of dates by taking all billing dates since migration and in the last 3 months\ntarget_billing_dates AS (\n  SELECT\n     b.fuel\n    ,b.serviceAccountId\n    ,b.mpxn\n    ,td.targetDate AS readRequestedDate\n    ,'missing billing read' AS readRequestedReason\n  FROM \n    billing_dates b\n  INNER JOIN\n    target_dates td\n      ON EXTRACT(DAY FROM td.targetDate) = b.billingDayOfTheMonth\n  INNER JOIN \n    migrations m \n      ON  m.mpxn = b.mpxn \n      AND b.serviceAccountId = m.accountId\n      AND DATE_ADD(m.migrationDate, INTERVAL +1 DAY) < td.targetDate  -- first billing date is the day after migration. Exclude this.\n  WHERE\n    td.targetDate >= '2020-05-01'  -- hard backstop, as we've already re-issued reads up to April\n   \n),\n\n\/*  CONTRACT CHANGE DATE TARGETS  *\/\n-- create a target list of dates by taking all contract change dates since migration and in the period targetted \ntarget_contract_dates AS (\n  SELECT\n     ct.fuel\n    ,ct.serviceAccountId\n    ,ct.mpxn\n    ,td.targetDate AS readRequestedDate\n    ,'missing contract change read' AS readRequestedReason\n  FROM \n    contracts ct\n  INNER JOIN                              -- check within 3 month range\n    target_dates td\n      ON td.targetDate = ct.startDate\n  INNER JOIN \n    migrations m \n      ON  m.mpxn = ct.mpxn \n      AND m.migrationDate < ct.startDate  -- must be later than migration date\n),\n\n\/*  MIGRATION DATE TARGETS  *\/\n-- create a target list of dates by taking all billing dates since migration and in the last 3 months\ntarget_migration_dates AS (\n  SELECT\n     m.fuel\n    ,m.accountId AS serviceAccountId\n    ,m.mpxn\n    ,td.targetDate AS readRequestedDate\n    ,'missing migration read' AS readRequestedReason\n  FROM \n    migrations m\n  INNER JOIN\n    target_dates td\n      ON td.targetDate = m.migrationDate\n\n),\n\n--###################################\n\/* LOSS CONFIRMATION DATES *\/\n\n\ncte_loss_confirmation_fuels AS(\n\n\nSELECT\n      mpxn\n      ,\"elecricity\" AS fuel\n      , supplyEndDate AS LossConfirmationDate --SupplyEndDate is the effective Loss Confirmation Date. lossConfirmedDate is just the date in which we receive the flow\nFROM (\n    SELECT \n       MPXN                           AS mpxn\n      ,gspGroupId                     AS region\n      ,sp.supplyStartDate\n      ,sp.supplyEndDate\n      ,sp.lossConfirmed\n      ,sp.lossConfirmedDate\n      ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY supplyStartDate DESC) AS LatestSP --Take the latest supply period per supplypoint\n\n    FROM (\n      -- take the latest history for each MPXN\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n      ) \n    INNER JOIN\n      UNNEST( supplyPeriods ) AS sp\n    WHERE\n          rowNumber = 1\n)\nWHERE LatestSP=1\nAND supplyEndDate IS NOT NULL --Where an end date exists\nAND lossConfirmed=true --and just those supplies that are confirmed. (to avoid cases where supplyEndDate but the confirmation flow has not arrived yet)\n\nUNION ALL\n\nSELECT\n      mpxn\n      ,\"gas\" AS fuel\n      , supplyEndDate AS LossConfirmationDate\n\nFROM (\n    SELECT \n       MPXN                           AS mpxn\n      ,LDZ                     AS region\n      ,sp.supplyStartDate\n      ,sp.supplyEndDate\n      ,sp.lossConfirmed\n      ,sp.lossConfirmedDate\n      ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY supplyStartDate DESC) AS LatestSP\n\n    FROM (\n      -- take the latest history for each MPXN\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n      ) \n    INNER JOIN\n      UNNEST( supplyPeriods ) AS sp\n    WHERE\n          rowNumber = 1\n)\nWHERE LatestSP=1\nAND lossConfirmed=true\nAND supplyEndDate IS NOT NULL\n\n),\n\n-- cte_loss_confirmation_gas AS(\n-- SELECT\n--       mpxn\n--       ,\"gas\" AS fuel\n--       , supplyEndDate AS LossConfirmationDate\n\n-- FROM (\n--     SELECT \n--        MPXN                           AS mpxn\n--       ,LDZ                     AS region\n--       ,sp.supplyStartDate\n--       ,sp.supplyEndDate\n--       ,sp.lossConfirmed\n--       ,sp.lossConfirmedDate\n--       ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY supplyStartDate DESC) AS LatestSP\n\n--     FROM (\n--       -- take the latest history for each MPXN\n--       SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber \n--       FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n--       ) \n--     INNER JOIN\n--       UNNEST( supplyPeriods ) AS sp\n--     WHERE\n--           rowNumber = 1\n-- )\n-- WHERE LatestSP=1\n-- AND lossConfirmed=true\n-- AND supplyEndDate IS NOT NULL\n--       ORDER BY mpxn\n-- ),\n\ntarget_loss_confirmation_dates AS(\n\nSELECT \n       a.fuel\n      , b.accountId AS serviceAccountId\n      , a.MPXN as mpxn\n      , c.targetDate AS readRequestedDate\n      ,'missing loss confirmation read' AS readRequestedReason\nFROM cte_loss_confirmation_fuels a\n-- ( \n--   SELECT * FROM cte_loss_confirmation_elec\n--   UNION ALL\n--   SELECT * FROM cte_loss_confirmation_gas\n--   ) a\nINNER JOIN migrations b\nON a.MPXN=b.mpxn --just those mpxn that belong to migrated accounts\nINNER JOIN target_dates c\nON c.targetDate = a.LossConfirmationDate --for those dates defined as target\n),\n\n--###################################\n\n\/* ALL DATES TOGETHER *\/\nall_dates AS(\n  SELECT * FROM target_billing_dates\n  UNION ALL \n  SELECT * FROM target_contract_dates\n  UNION ALL \n  SELECT * FROM target_migration_dates\n  UNION ALL \n  SELECT * FROM target_loss_confirmation_dates\n),\n\n  \/* EXCLUDE ALL CASES WHERE WE HOLD A READING  *\/\nmissing_reads AS (\n  SELECT\n     ad.mpxn\n    ,ad.readRequestedDate\n    ,ad.readRequestedReason\n    ,ad.fuel\n  FROM\n    all_dates ad\n  LEFT JOIN (\n    SELECT DISTINCT mpxn, readingDate FROM `data-engineering-prod.u_barney_scott.READ_SUBMISSION_unique_meter_readings`) r\n      ON  r.mpxn = ad.mpxn\n      AND r.readingDate = ad.readRequestedDate\n  WHERE\n    r.readingDate IS NULL             -- no read on target date\n)\n-- SUMMARY NUMBERS:\n--SELECT fuel,readRequestedReason, count(mpxn)  FROM missing_reads group by fuel,readRequestedReason order by fuel,readRequestedReason\n\n--TEST (should return nothing, TODO add more)\n--select mpxn, readRequestedDate, readRequestedReason, count(*) from all_dates  group by mpxn, readRequestedDate, readRequestedReason having count(*) > 1\n\n--PRODUCTION\nSELECT * FROM missing_reads"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_supply_meter_register_mappings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_supply_meter_register_mappings","table_id":"READ_SUBMISSION_supply_meter_register_mappings","time_partitioning":null,"view_query":"\/*  ======================================  *\/\n\/*  DEFINITIVE METER AND REGISTER MAPPINGS  *\/\n\/*  ======================================  *\/\n\n\n-- PURPOSE:\n-- This view provides a clean view of SPAM data for both fuels, giving the latest version of all known supply\n-- histories. \n-- Created: 2020-05-05\n-- Last updated: 2020-05-28: add imperial meter indicator column\n\nWITH\n\n-- derive the configuration end date. To do this, we need to order the config start dates without including registers\nelectricity_config_dates AS (\n  SELECT\n     mpxn\n    ,msn\n    ,meterStartDate\n    ,meterEndDate\n    ,configStartDate\n    ,configEndDate\n  FROM (\n    SELECT DISTINCT\n       MPXN                           AS mpxn\n      ,gspGroupId                     AS region\n      ,installationHistory.MSN        AS msn\n      ,installationHistory.startDate  AS meterStartDate\n      ,installationHistory.endDate    AS meterEndDate \n      ,installationHistory.meterType\n      ,meterRegisterHistory.startDate AS configStartDate\n      -- now derive the configuration 'end date' by looking up the next valid start date for the supply-meter-register combination\n      ,LEAD(meterRegisterHistory.startDate) OVER(\n                PARTITION BY mpxn, installationHistory.MSN\n                ORDER BY meterRegisterHistory.startDate)\n                AS configEndDate\n    FROM (\n      -- take the latest history for each MPXN\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n      ) \n    INNER JOIN\n      UNNEST(installationHistory) AS installationHistory\n    INNER JOIN\n      UNNEST(installationHistory.meterRegisterHistory) AS meterRegisterHistory\n    WHERE\n          rowNumber = 1\n  )\n),\n\n\/* SPAM ELECTRICITY *\/\n-- fetch the current view of supply to meter to register mapping from SPAM. We look for the latest view only, and then \n-- derive dates that configuration end for register configurations\nelectricity_supply_history AS (\n  SELECT\n     hist.mpxn\n    ,region\n    ,hist.msn\n    ,CAST(NULL AS string) AS imperialMeterIndicator\n    ,'electricity' AS fuel\n    ,hist.meterStartDate\n    ,hist.meterEndDate\n    ,meterType\n    ,hist.configStartDate\n    ,dt.configEndDate\n    ,tier\n    ,clockingTimeId\n    ,meterRegisterId\n    ,timeOfUseLabel\n    ,COUNT(DISTINCT tier) OVER(PARTITION BY hist.mpxn, hist.msn, hist.meterStartDate, hist.meterEndDate, hist.configStartDate) AS activeRegisterCount\n    ,COUNT(clockingTimeId) OVER(PARTITION BY hist.mpxn, hist.msn, hist.meterStartDate, hist.meterEndDate, hist.configStartDate) AS clockingTimeIdCount --Victor Update\n  FROM (\n    SELECT \n       MPXN                           AS mpxn\n      ,gspGroupId                     AS region\n      ,installationHistory.MSN        AS msn\n      ,installationHistory.startDate  AS meterStartDate\n      ,installationHistory.endDate    AS meterEndDate \n      ,installationHistory.meterType\n      ,meterRegisterHistory.startDate AS configStartDate\n      -- we can apply defaults to tiers, because of the following:\n      -- 1) all known smart meters already have tiers asigned\n      -- 2) trad meters default to SMETS1 behaviour (0 is night, 1 is day)\n      -- 3) any unknown smart meter is smets1, which behaves as trad\n      ,CASE \n        WHEN meterRegisters.tier IS NOT NULL THEN meterRegisters.tier\n        WHEN meterRegisters.tier IS NULL AND timeOfUseLabel = 'anytime' THEN 0\n        WHEN meterRegisters.tier IS NULL AND timeOfUseLabel = 'offpeak' THEN 0\n        WHEN meterRegisters.tier IS NULL AND timeOfUseLabel = 'peak' THEN 1\n        END AS tier\n      ,clockingTimeId\n      ,meterRegisters.meterRegisterId\n      ,meterRegisters.timeOfUseLabel\n    FROM (\n      -- take the latest history for each MPXN\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n      ) \n    INNER JOIN\n      UNNEST(installationHistory) AS installationHistory\n    INNER JOIN\n      UNNEST(installationHistory.meterRegisterHistory) AS meterRegisterHistory\n    INNER JOIN\n      UNNEST(meterRegisterHistory.meterRegisters) AS meterRegisters\n    WHERE\n          rowNumber = 1\n      AND meterRegisters.timeOfUseLabel IS NOT NULL  -- this would render the meter un-mappable\n  ) hist\n  -- this join gives us the config end date\n  INNER JOIN\n    electricity_config_dates dt\n      ON  hist.mpxn = dt.mpxn\n      AND hist.msn = dt.msn\n      AND hist.meterStartDate = dt.meterStartDate\n      AND hist.meterStartDate = dt.meterStartDate\n      AND hist.configStartDate = dt.configStartDate\n  \n),\n\n\/* REMOVE INVALID MAPPINGS *\/\n-- any case where the time of use label doesn't match the register count, exclude\nelectricity_supply_history_cleaned AS (\n  SELECT\n    *\n  FROM\n    electricity_supply_history\n  WHERE\n    NOT (activeRegisterCount > 1 AND timeOfUseLabel = 'anytime')\n    AND NOT (activeRegisterCount = 1 AND timeOfUseLabel <> 'anytime') \n    AND NOT (activeRegisterCount<>clockingTimeIdCount) --Victor's update: Some elec supplypoints happen to have more than 1 registers mapped for single rate or more than 2 for multirate. This scenario sometimes happens after a MEX. In the case of a multi-rate, this could result with the same clockingTimeId duplicated or 4 different clockingTimeId if the regime has changed. For now all those cases are filtered out using this condition. For the single rate cases this should have been filtered in the previous 2 conditions\n),\n\n\/* SPAM GAS *\/\n-- fetch the current view of supply to meter mapping from SPAM. In gas configuration and registers are not included \n-- so no derivation of dates is required. Fields are defaulted which are not applicable so that schemas match.\ngas_supply_history AS (\n  SELECT\n     mpxn\n    ,region\n    ,msn\n    ,imperialMeterIndicator\n    ,'gas' AS fuel\n    ,meterStartDate\n    ,meterEndDate\n    ,meterType\n    ,configStartDate\n    ,configEndDate\n    ,tier\n    ,clockingTimeId\n    ,meterRegisterId\n    ,timeOfUseLabel\n    ,COUNT(DISTINCT tier) OVER(PARTITION BY mpxn,msn,meterStartDate,meterEndDate,configStartDate,configEndDate) AS activeRegisterCount\n  FROM (\n    SELECT \n       MPXN                           AS mpxn\n      ,LDZ                            AS region\n      ,installationHistory.MSN        AS msn\n      ,installationHistory.imperialMeterIndicator AS imperialMeterIndicator\n      ,installationHistory.startDate  AS meterStartDate\n      ,installationHistory.endDate    AS meterEndDate \n      ,installationHistory.meterType\n      ,installationHistory.startDate  AS configStartDate  -- default to meter start date\n      ,installationHistory.endDate    AS configEndDate    -- default to meter end date\n      ,99                             AS tier\n      ,9999                           AS clockingTimeId   -- create defaults for tier and cti\n      ,CAST(NULL AS STRING)           AS meterRegisterId  -- no default needed for registerID at present\n      ,'anytime'                      AS timeOfUseLabel   -- gas is always anytime\n    FROM (\n      -- take the latest history for each MPXN\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2` \n      ) \n    INNER JOIN\n      UNNEST(installationHistory) AS installationHistory\n    WHERE\n      rowNumber = 1\n  )\n)\n--TESTs: (all should return nothing)\n-- SELECT '1: multiple anytime registers' AS test, COUNT(*) FROM electricity_supply_history_cleaned WHERE timeOfUseLabel = 'anytime' AND activeRegisterCount > 1\n-- UNION ALL\n-- SELECT '2: lone peak or off peak register' AS test,COUNT(*) FROM electricity_supply_history_cleaned WHERE timeOfUseLabel <> 'anytime' AND activeRegisterCount = 1\n-- UNION ALL \n-- SELECT '3: missing elec tier' AS test,COUNT(*) FROM electricity_supply_history_cleaned WHERE tier IS NULL\n-- UNION ALL \n-- SELECT '4: missing gas tier' AS test, COUNT(*) FROM gas_supply_history WHERE tier <> 99\n-- UNION ALL \n-- SELECT '5: many gas registers' AS test, COUNT(*) FROM gas_supply_history WHERE activeRegisterCount > 1\n\n-- the following test fails for ~30 supplies where two reg IDs map to the same tier\/timeOfUseLabel\n-- select mpxn, msn, timeOfUseLabel, meterStartDate, meterEndDate, configStartDate, configEndDate, count(*) \n-- from electricity_supply_history_cleaned\n-- group by mpxn, msn, timeOfUseLabel, meterStartDate, meterEndDate, configStartDate, configEndDate\n-- having count(*) > 1\n-- order by mpxn\n\n--check cases:\n-- select * from electricity_supply_history_cleaned where mpxn in (\n-- '1012553792158','1012774256359','1610011562411','1012435031199')\n--  order by mpxn, meterStartDate, configStartDate\n\n\nSELECT \n      mpxn\n    ,region\n    ,msn\n    ,imperialMeterIndicator\n    ,fuel\n    ,meterStartDate\n    ,meterEndDate\n    ,meterType\n    ,configStartDate\n    ,configEndDate\n    ,tier\n    ,clockingTimeId\n    ,meterRegisterId\n    ,timeOfUseLabel\n    ,activeRegisterCount  \nFROM gas_supply_history\n\nUNION ALL \n\nSELECT \n      mpxn\n    ,region\n    ,msn\n    ,imperialMeterIndicator\n    ,fuel\n    ,meterStartDate\n    ,meterEndDate\n    ,meterType\n    ,configStartDate\n    ,configEndDate\n    ,tier\n    ,clockingTimeId\n    ,meterRegisterId\n    ,timeOfUseLabel\n    ,activeRegisterCount  \nFROM electricity_supply_history_cleaned \n\n\n\n\n  \n"},"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_unique_meter_readings":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.READ_SUBMISSION_unique_meter_readings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_unique_meter_readings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/READ_SUBMISSION_unique_meter_readings","table_id":"READ_SUBMISSION_unique_meter_readings","time_partitioning":null,"view_query":"\/*  ====================================  *\/\n\/*  METER READINGS FROM MPXN CONSUMPTION  *\/\n\/*  ====================================  *\/\n\n\n-- PURPOSE:\n-- This view extracts all unique meter readings from the latest version of both gas volume and electriicty consumption generated tables.\n-- Created: 2020-05-05\n-- Last updated: 2020-05-05\n-- Source Versions: 'rac_mpxn_electricity_consumption_generated_v5', 'rac_mpxn_electricity_consumption_generated_v4'\n--                  'rac_mpxn_gas_volume_consumption_generated_v3', 'rac_mpxn_gas_volume_consumption_generated_v2'\n\nWITH\n\n\/* RAW CONSUMPTION DATA *\/\n-- fetch gas and electricity consumption data from latest two versions\n-- of each of the mpxn consumption tables\nconsumption AS(\n  SELECT DISTINCT\n     mpan AS mpxn\n    ,msn\n    ,f.tier\n    ,fromDate\n    ,toDate\n    ,f.reading AS fromMeterReading\n    ,fromReading.readingType AS fromReadingType\n    ,t.reading AS toMeterReading\n    ,toReading.readingType AS toReadingType\n    ,metadata.createdAt\n    ,5 AS version                                 -- topic version\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5` \n  INNER JOIN  UNNEST(fromReading.registers) AS f\n  INNER JOIN  UNNEST(toReading.registers) AS t ON t.tier = f.tier\n  --INNER JOIN  UNNEST(consumption.registers) AS c ON c.tier = f.tier\n  UNION ALL \n  SELECT DISTINCT \n     mprn AS mpxn\n    ,msn\n    ,99 AS tiers                                  -- int identifer for gas tier (not used)       \n    ,fromDate                                     -- no timezone conversion required as these are in local date form\n    ,toDate\n    ,fromReading.reading AS fromMeterReading\n    ,fromReading.readingType AS fromReadingType\n    ,toReading.reading AS toMeterReading\n    ,toReading.readingType AS toReadingType\n    ,metadata.createdAt\n    ,3 AS version\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v3`\n  UNION ALL                                       -- now take old topic versions of topics\n  SELECT DISTINCT\n     mpan AS mpxn\n    ,msn\n    ,tiers.tier\n    ,DATE(fromDateTime, 'Europe\/London') AS fromDate\n    ,DATE(toDateTime, 'Europe\/London') AS toDate\n    ,tiers.fromMeterReading\n    ,tiers.fromReadingType AS fromReadingType\n    ,tiers.toMeterReading\n    ,tiers.toReadingType AS toReadingType\n    ,metadata.createdAt\n    ,4 AS version\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4`\n  INNER JOIN UNNEST(tiers) AS tiers\n  WHERE PARTITIONTIME >= '2020-01-01'           -- limit to 2020. Earlier estimation is performed on demand\n  UNION ALL \n  SELECT DISTINCT \n     mprn AS mpxn\n    ,msn\n    ,99 AS tier\n    ,DATE(fromDateTime, 'Europe\/London') AS fromDate  --timezone conversion requrired as these are stored as UTC datetime\n    ,DATE(toDateTime, 'Europe\/London') AS toDate\n    ,fromMeterReading\n    ,fromReadingType\n    ,toMeterReading\n    ,toReadingType\n    ,metadata.createdAt\n    ,2 AS version\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2`\n  WHERE PARTITIONTIME >= '2020-01-01'\n),\n\n\/* CLEAN CONSUMPTION DATA *\/\n-- de-duplicating on mpxn, msn, tier, fromDate, toDate. Note that this doesn't prevent \n-- overlapping consumption (not problematic as we will extract the reads only)\nclean_consumption AS (\n  SELECT\n     mpxn\n    ,msn\n    ,tier\n    ,fromDate\n    ,toDate\n    ,fromMeterReading\n    ,fromReadingType\n    ,toMeterReading \n    ,toReadingType\n    ,createdAt\n  FROM (\n    SELECT\n       mpxn\n      ,msn\n      ,tier\n      ,fromDate\n      ,toDate\n      ,fromMeterReading\n      ,fromReadingType\n      ,toMeterReading\n      ,toReadingType\n      ,ROW_NUMBER() OVER(PARTITION BY mpxn, msn, tier, fromDate, toDate ORDER BY version DESC, createdAt DESC) AS latestVersion\n      ,createdAt\n    FROM\n      consumption\n--     WHERE\n--       fromDate >= '2020-01-01'\n  )\n  WHERE latestVersion = 1\n),\n\n\/* READS FROM CONSUMPTION *\/\n-- extract all meter readings (from and to) from consumption, allowing only one instance\n-- by mpxn, msn, tier, readingDate\nreads AS (\n  SELECT \n     mpxn\n    ,msn\n    ,tier\n    ,readingDate\n    ,meterReading\n    ,readingType\n  FROM (\n    SELECT \n       *\n      ,ROW_NUMBER() OVER(\n          PARTITION BY mpxn, msn, tier, readingDate \n          ORDER BY createdAt DESC\n        ) AS rn\n    FROM (\n      SELECT\n         mpxn\n        ,msn\n        ,tier\n        ,fromDate AS readingDate\n        ,fromMeterReading AS meterReading\n        ,fromReadingType AS readingType\n        ,createdAt\n      FROM\n        clean_consumption\n      UNION ALL\n      SELECT\n         mpxn\n        ,msn\n        ,tier\n        ,toDate AS readingDate\n        ,toMeterReading AS meterReading\n        ,toReadingType AS readingType\n        ,createdAt\n      FROM\n        clean_consumption\n     )\n  )\n  WHERE\n    rn = 1\n)\n--  TEST: this should return no results\n--SELECT mpxn, msn, tier, readingDate, COUNT(meterReading) AS readCount FROM reads GROUP BY mpxn, msn, tier, readingDate HAVING COUNT(meterReading) > 1\n-- PRODUCTION:\nSELECT * FROM reads"},"data-engineering-prod:product_andromeda_secure.SSD_NOSI_and_MRI":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.SSD_NOSI_and_MRI","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/SSD_NOSI_and_MRI","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/SSD_NOSI_and_MRI","table_id":"SSD_NOSI_and_MRI","time_partitioning":null,"view_query":"-- ALL NOSIs per MPRN --\nWITH NOSI AS(\n  select MPXN, NOSI_MSN, NOSI_date from (\n    select record.NosiGroup.meterPointReference MPXN, record.NosiGroup.meterSerialNumber NOSI_MSN, PARSE_DATE(\"%Y%m%d\", header.createdDate) NOSI_date\n    from `data-engineering-prod.landing_andromeda_secure.flow_NOSI_split_v1`)\n  where MPXN is not null and NOSI_MSN is not null and NOSI_date is not null\n  group by MPXN, NOSI_MSN, NOSI_date),\n\n-- ALL MRIs per MPRN --\nMRI AS\n(select MPXN, MRI_MSN, MRI_date\n from (\n select record.MeterReadInstructions.meterPointReference MPXN, record.MeterReadInstructions.meterSerialNumber MRI_MSN, PARSE_DATE(\"%Y%m%d\", header.creationDate) MRI_date\n from `data-engineering-prod.landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v4`)\n where MRI_date is not null and MPXN is not null and MRI_MSN is not null\n group by MPXN, MRI_MSN, MRI_date),\n\n-- LATEST SSD per MPRN --\nSPAMSSD as\n(select MPXN, MSN, SSD from\n  (select MPXN, MSN, supplyStatusDate SSD, supplystatus SS\n   from `data-engineering-prod.landing_andromeda_secure.spam_current_gas_mapping`\n   where supplystatus = 'Gain completed')\n group by MPXN, MSN, SSD),\n\n-- NEAREST MRI to SSD --\nNMRI as (\n  select MPXN, MRI_MSN, SSD, MRI_date, spam_mri_diff from (\n    select *,\n           row_number() over (partition by MPXN order by spam_mri_diff) n\n    from (\n      select SPAMSSD.*, MRI.MRI_date, MRI_MSN,\n             abs(date_diff(MRI_date, SSD, Day)) spam_mri_diff\n      from SPAMSSD\n      left join MRI\n      on SPAMSSD.MPXN = MRI.MPXN\n      where MRI_date is not null\n      order by SPAMSSD.MPXN, MRI_date desc)\n    where spam_mri_diff <= 5)\n  where n = 1),\n\n-- NEAREST NOSI TO SSD --\nNNOSI as (\n  select MPXN, NOSI_MSN, SSD, NOSI_date, spam_nosi_diff from (\n    select *,\n           row_number() over (partition by MPXN order by spam_nosi_diff) n\n    from (\n      select SPAMSSD.*, NOSI.NOSI_date, NOSI_MSN,\n             abs(date_diff(NOSI_date, SSD, Day)) spam_nosi_diff\n      from SPAMSSD\n      left join NOSI\n      on SPAMSSD.MPXN = NOSI.MPXN\n      where NOSI_date is not null\n      order by SPAMSSD.MPXN, NOSI_date desc)\n    where spam_nosi_diff <= 5)\n  where n = 1)\n\nselect * from (\nselect SPAMSSD.*,\nNOSI_MSN=MSN matching_NOSI_MSN,\nMRI_MSN=MSN matching_MRI_MSN,\nNOSI_date, NOSI_MSN, spam_nosi_diff, MRI_date, MRI_MSN, spam_mri_diff from SPAMSSD\nleft join NNOSI \non SPAMSSD.MPXN = NNOSI.MPXN\nand SPAMSSD.SSD = NNOSI.SSD\nleft join NMRI\non SPAMSSD.MPXN = NMRI.MPXN\nand SPAMSSD.SSD = NMRI.SSD)\nwhere NOSI_date is not null or MRI_date is not null\norder by SSD desc, MPXN\n\n"},"data-engineering-prod:product_andromeda_secure.Utiliserve_MSN_Meter_Type_Comparison_Electricity":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.Utiliserve_MSN_Meter_Type_Comparison_Electricity","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/Utiliserve_MSN_Meter_Type_Comparison_Electricity","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/Utiliserve_MSN_Meter_Type_Comparison_Electricity","table_id":"Utiliserve_MSN_Meter_Type_Comparison_Electricity","time_partitioning":null,"view_query":"\/*\nThis view aims to identify Smart Meters both based on the code used by Utiliserve and the MSN itself. \nA regex based on a list of MSN patterns provided by SPAM has been used to identify meter type on msn.\nNOTE: The results shows a clear bias towards false positives. This means that probably the list of MSN provided by SPAM was not full comprehensive. This basically means that some Smart Meters are likely to be labelled as Traditional (false under Smart_Meter_Type_by_MSN column).\n\n#Author: Victor Irles\n#Date: 14-01-2020\n\n#Amended: Pete Diwell\n#Date: 02-06-2020\n#Reason: use new SPAM topic\n*\/\n\n--ELECTRICITY\n--take the latest view\nWITH cte_latest_mappings AS(\nSELECT MPXN\n      , MSN\n      , profileClassId\n      , meterRegisterHistory\n      , meterType\nFROM (SELECT *\n            ,ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, ih.startDate DESC, sp.supplyStartDate DESC) AS rn \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n      INNER JOIN UNNEST(installationHistory) ih\n      INNER JOIN UNNEST(supplyPeriods) sp)\nWHERE rn=1\n),\n--latest register mapping\ncte_latest_mappings_reg AS(\n    SELECT MPXN\n          , MSN\n          , profileClassId\n          , ssc\n          , startDate AS registerConfigEffectiveFrom\n          , meterType\n          , meterRegisters\n    FROM (\n          SELECT MPXN, MSN, profileClassId, meterType, regHist.startDate, regHist.ssc, regHist.meterRegisters\n                , ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY regHist.startDate DESC) AS rn2 \n          FROM cte_latest_mappings\n          INNER JOIN UNNEST (meterRegisterHistory) AS regHist)\n    WHERE rn2=1\n),\n--latest supply points in utility group\ncte_ug AS(\nSELECT * \nFROM `data-engineering-prod.reporting_utiliserve.tbl_electricity_tracker` \nWHERE Utiliserve_Not_Live_Reason != \"Failed Gain\" \nAND Is_Latest_Utiliserve_Transfer_Attempt\t= 1\n),\n--union both\ncte_union AS(\n  SELECT a.Meter_Point_No\n        , a.Utiliserve_Supply_Start_Date\n        , a.Utiliserve_Reported_Status\n        , a.Utiliserve_Meter_Serial_No\n        , a.Utiliserve_Meter_Install_Date\n        , a.Utiliserve_Meter_Type_Code\n        , a.Utiliserve_Smart_Meter_Smets_Version_Code\n        , b.meterType AS SPAM_Meter_Type_Code\n        , b.msn\n        --, b.MPXN\n  FROM cte_ug a \n  LEFT JOIN cte_latest_mappings_reg b\n  ON a.Meter_Point_No    = CAST(CAST(b.MPXN AS INT64) AS STRING)\n)\n\n--Create new columns to identify smart meters by using the msn and the code\nSELECT *\n      , REGEXP_CONTAINS(Utiliserve_Meter_Serial_No, r\"^([0-9][0-9][A-Z]\\d+|Z[0-9][0-9](N|Q)\\d+)\") AS Smart_Meter_Type_by_MSN\n      , CASE WHEN Utiliserve_Meter_Type_Code IN ('S1', 'S2A', 'S2B', 'S2C', 'S2AD', 'S2BD', 'S2CD', 'S2ADE', 'S2BDE', 'S2CDE') THEN True \n             WHEN Utiliserve_Meter_Type_Code IN ('CHECK', 'H', 'K' , 'LAG', 'LEAD', 'MAIN', 'N', 'NCAMR', 'NSS', 'RCAMR', 'RCAMY', 'S', 'SPECL', 'T') THEN False \n             ELSE null END AS Smart_Meter_Type_by_Code_UG\n      , CASE WHEN SPAM_Meter_Type_Code IN ('S1', 'S2A', 'S2B', 'S2C', 'S2AD', 'S2BD', 'S2CD', 'S2ADE', 'S2BDE', 'S2CDE') THEN True \n             WHEN SPAM_Meter_Type_Code IN ('CHECK', 'H', 'K' , 'LAG', 'LEAD', 'MAIN', 'N', 'NCAMR', 'NSS', 'RCAMR', 'RCAMY', 'S', 'SPECL', 'T') THEN False \n             ELSE null END AS Smart_Meter_Type_by_Code_SPAM\nFROM cte_union a"},"data-engineering-prod:product_andromeda_secure.Utiliserve_MSN_Meter_Type_Comparison_Gas":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.Utiliserve_MSN_Meter_Type_Comparison_Gas","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/Utiliserve_MSN_Meter_Type_Comparison_Gas","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/Utiliserve_MSN_Meter_Type_Comparison_Gas","table_id":"Utiliserve_MSN_Meter_Type_Comparison_Gas","time_partitioning":null,"view_query":"\/*\nThis view aims to identify Smart Meters both based on the code used by Utiliserve and the MSN itself. \nA regex based on a list of MSN patterns provided by SPAM has been used to identify meter type on msn.\nNOTE: The results shows a clear bias towards false positives. This means that probably the list of MSN provided by SPAM was not full comprehensive. This basically means that some Smart Meters are likely to be labelled as Traditional (false under Smart_Meter_Type_by_MSN column).\n\n#Author: Victor Irles \n#Date: 14-01-2020\n\n#Amended: Pete Diwell\n#Date: 02-06-2020\n#Reason: use new SPAM topic\n*\/\n\n\n--GAS\n--take the latest view\nWITH cte_latest_mappings AS(\nSELECT MPXN\n      , MSN\n      , meterType\nFROM (SELECT *\n            ,ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC, ih.startDate DESC, sp.supplyStartDate DESC) AS rn \n      FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n      INNER JOIN UNNEST(installationHistory) ih\n      INNER JOIN UNNEST(supplyPeriods) sp)\nWHERE rn=1\n),\n--latest supply points in utility group\ncte_ug AS(\nSELECT * \nFROM `data-engineering-prod.reporting_utiliserve.tbl_gas_tracker` \nWHERE Utiliserve_Not_Live_Reason != \"Failed Gain\" AND Is_Latest_Utiliserve_Transfer_Attempt\t= 1\n),\n\n--union both\ncte_union AS(\n  SELECT a.Meter_Point_No\n        , a.Utiliserve_Supply_Start_Date\n        , a.Utiliserve_Reported_Status\n        , a.Utiliserve_Meter_Serial_No\n        , a.Utiliserve_Meter_Install_Date\n        , a.Utiliserve_Meter_Type_Code\n        , b.meterType AS SPAM_Meter_Type_Code\n        , b.MSN\n  FROM cte_ug a \n  LEFT JOIN cte_latest_mappings b\n  ON a.Meter_Point_No   = CAST(CAST(b.MPXN AS INT64) AS STRING)\n  --ON a.Meter_Point_No    = b.MPXN\n)\n--SELECT * FROM cte_union LIMIT 10\n\n--Create new columns to identify smart meters by using the msn and the code\nSELECT *\n      , NOT REGEXP_CONTAINS(Utiliserve_Meter_Serial_No, r\"^((L|M)[0-9][0-9][0-9][^6]\\d{6}(M|S)|[A-Z][0-9][A-Z]\\d{7}(([6-9][0-9])|(0[0-9])|(1[0-2]))0[1-2]|\\d{7}S?|\\d{6}S?|\\d{8})$\") AS Smart_Meter_Type_by_MSN\n      , CASE WHEN Utiliserve_Meter_Type_Code IN ('S1', 'S2') THEN True \n             WHEN Utiliserve_Meter_Type_Code IN ('NS','CR', 'MT', 'ET', 'CM', 'PP', 'TH') THEN False \n             ELSE null END AS Smart_Meter_Type_by_Code_UG\n      , CASE WHEN Utiliserve_Meter_Type_Code IN ('S1', 'S2') THEN True \n             WHEN Utiliserve_Meter_Type_Code IN ('NS','CR', 'MT', 'ET', 'CM', 'PP', 'TH') THEN False \n             ELSE null END AS Smart_Meter_Type_by_Code_SPAM\nFROM cte_union\n--WHERE Meter_Point_No != MPXN\n--WHERE Utiliserve_Meter_Type_Code != SPAM_Meter_Type_Code"},"data-engineering-prod:product_andromeda_secure.charge_mandates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.charge_mandates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/charge_mandates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/charge_mandates","table_id":"charge_mandates","time_partitioning":null,"view_query":"with cte_contract_dedupe as\n(\n  SELECT contract_contractId as contractId,\n         contract_mpxn as mpxn,\n         contract_serviceAccountId as serviceAccountId,\n         contract_fuel as fuel,\n         contract_startDate as startDate,\n         contract_endDate as endDate,\n         contract_unitRate as unitRate,\n         contract_standingRate as standingRate,\n         contract_tariffId as tariffId,\n         insertTime as latestCreatedEventTime,\n         kafkaOffset as latestCreatedKafkaOffset,\n         row_number() over (partition by contract_contractId order by topic desc, insertTime desc, kafkaOffset desc, contract_createdAt desc) as dedupe_rownum\n  FROM `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract__no_dedupe`\n  where contract_eventId is not null\n),\ncte_first_contract as\n(\n  with cte_union as\n  (\n    select contract_contractId as contractId,\n           contract_createdAt as createdAt\n    from `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract`\n    where contract_eventId is not null\n    union all\n    select contractId,\n           createdAt\n    from `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract_created__no_dedupe`\n  )\n  select contractId,\n         min(createdAt) as createdDate\n  from cte_union\n  group by contractId\n),\ncte_cancelled as\n(\n  select cancelled_contractId as contractId,\n         max(insertTime) as latestCancellationEventTime,\n         max(kafkaOffset) as latestCancellationKafkaOffset\n  FROM `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract__no_dedupe`\n  where cancelled_eventId is not null\n  group by cancelled_contractId\n)\nselect ctr.*,\n      'Fixed Rate' as contractType,\n       c1.createdDate\nfrom cte_contract_dedupe ctr\nLEFT JOIN cte_first_contract c1 on ctr.contractId = c1.contractId\nleft join cte_cancelled can on ctr.contractId = can.contractId\n                           and (can.latestCancellationEventTime > ctr.latestCreatedEventTime\n                            or (can.latestCancellationEventTime = ctr.latestCreatedEventTime\n                            and can.latestCancellationKafkaOffset > ctr.latestCreatedKafkaOffset)) -- Need the offset tiebreaker to deal with data we backfilled\nwhere ctr.dedupe_rownum = 1\n  and can.contractId is NULL -- Filter cancelled from the view so we only show current state"},"data-engineering-prod:product_andromeda_secure.cheapest_tariff_messaging":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.cheapest_tariff_messaging","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/cheapest_tariff_messaging","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/cheapest_tariff_messaging","table_id":"cheapest_tariff_messaging","time_partitioning":null,"view_query":"# Cheapest Tariff Messaging\n# Written By: Alex Ashford\n# Edited By: Pete Diwell 2020-08-25\n# Reviewed By: Alex Ashford 2020-08-25\n# Latest Edit Info: Use latest SPTC version\n\nWITH latest_tariff_costs AS ( # Get latest SPTC data\n  SELECT *,\n         ROW_NUMBER() OVER (PARTITION BY currentContract.mpxn ORDER BY kafkaData.insertTime DESC) AS rn\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v7`\n),\n\nstaging AS ( # Unnest fields and retrieve tariff information for current plan and cheapest plans\n  SELECT sptc.currentContract.serviceAccountId as Account_No\n        ,sptc.currentContract.mpxn as Meter_Point_No\n        ,sptc.currentContract.contractId as Contract_ID\n        ,sptc.currentContract.fuel as Fuel\n        ,sptc.aboutYourTariffLabel.tariff.planDisplayName as Current_Plan\n        ,tc.tariff.type as tariff_type\n        ,sptc.aboutYourTariffLabel.vatRate as VAT_Rate\n        ,ROUND(tc.tariff.standingRate * (1.00 + sptc.aboutYourTariffLabel.vatRate),4) as Current_Standing_Rate # Add on VAT\n        ,tc.tariff.unitRates as Current_Unit_Rate # Array\n        ,tc.annualCostVatIncl as Current_Tariff_Estimated_Cost\n        ,tc.tariff.exitFee as Current_Tariff_Exit_Fee\n        ,tc.tariff.versionId as Current_Tariff_Version\n        ,sptc.aboutYourTariffLabel.contract.startDate as Current_Contract_Start_Date\n        ,sptc.aboutYourTariffLabel.contract.endDate as Current_Contract_End_Date\n        ,tc.tariff.activeFrom as Tariff_Active_From\n        ,tc.tariff.length as Tariff_Length\n        ,sptc.aboutYourTariffLabel.tariff.paymentMethod as Payment_Method\n        ,sptc.aboutYourTariffLabel.usage as Usage # Array\n        ,sptc.personalProjection.effectiveFrom as Personal_Projection_Effective_From\n        ,IFNULL(LEAD(sptc.personalProjection.effectiveFrom) OVER(PARTITION BY sptc.currentContract.mpxn, sptc.metadata.eventId ORDER BY sptc.personalProjection.effectiveFrom) ,CAST('2999-12-31' AS DATE)) as Personal_Projection_Effective_To # If not latest personal projection, get next projection start date, else put default future date\n        ,sptc.personalProjection.projectedRegisterConsumption as Personal_Projection # Array\n        ,stc.tariff.planName as Cheapest_Similar_Plan\n        ,ROUND(stc.tariff.standingRate * (1.00 + sptc.aboutYourTariffLabel.vatRate),4) as Cheapest_Similar_Standing_Rate # Add on VAT\n        ,stc.tariff.unitRates as Cheapest_Similar_Unit_Rate # Array\n        ,stc.annualCostVatIncl as Cheapest_Similar_Cost\n        ,stc.savingAmountVatIncl as Cheapest_Similar_Saving\n        ,stc.tariff.exitFee as Cheapest_Similar_Exit_Fee\n        ,stc.tariff.versionId as Cheapest_Similar_Version\n        ,sptc.aboutYourTariffLabel.contract.endDate as Cheapest_Similar_Price_Guarantee --Advised by Alex V\n        ,ctc.tariff.planName as Cheapest_Overall_Plan\n        ,ROUND(ctc.tariff.standingRate * (1.00 + sptc.aboutYourTariffLabel.vatRate),4) as Cheapest_Overall_Standing_Rate # Add on VAT\n        ,ctc.tariff.unitRates as Cheapest_Overall_Unit_Rate # Array\n        ,ctc.annualCostVatIncl as Cheapest_Overall_Cost\n        ,ctc.savingAmountVatIncl as Cheapest_Overall_Saving\n        ,ctc.tariff.exitFee as Cheapest_Overall_Exit_Fee\n        ,ctc.tariff.versionId as Cheapest_Overall_Version\n        ,sptc.aboutYourTariffLabel.contract.endDate as Cheapest_Overall_Price_Guarantee --Advised by Alex V\n  FROM latest_tariff_costs sptc\n  LEFT JOIN UNNEST(sptc.annualTariffCosts) ctc ON ctc.tariff.tariffId = cheapestOverallTariff.tariffId AND ctc.tariff.versionId = cheapestOverallTariff.versionId\n  LEFT JOIN UNNEST(sptc.annualTariffCosts) stc ON stc.tariff.tariffId = cheapestSimilarTariff.tariffId AND stc.tariff.versionId = cheapestSimilarTariff.versionId\n  LEFT JOIN UNNEST(sptc.annualTariffCosts) tc ON tc.tariff.tariffId = currentTariff.tariffId AND tc.tariff.versionId = currentTariff.versionId\n  WHERE sptc.rn=1\n),\n\ncontract_dates AS ( # Get dates on contract, customerContractStartDate is important as startDate is not accurate for true contract start date\n  SELECT contract_serviceAccountId,\n         contract_contractId as contractId,\n         contract_customerContractStartDate as customerContractStartDate,\n         contract_customerContractExpiryDate as customerContractExpiryDate,\n         contract_startDate as startDate,\n         contract_endDate as endDate,\n         t.value as contract_tag,\n         cancelled,\n         ROW_NUMBER() OVER (PARTITION BY contract_contractId ORDER BY kafkaOffset DESC) as RN\n  FROM `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract` c\n  LEFT JOIN UNNEST(tags) t ON t.key = 'source'\n  ORDER BY c.contract_serviceAccountId\n)\n\n# Bring through all fields from the dedupe, but unnest arrays and remove array references and replace with single line fields\nSELECT DISTINCT s.*  EXCEPT(Current_Contract_Start_Date,Current_Contract_End_Date,Current_Unit_Rate,Personal_Projection,Cheapest_Similar_Unit_Rate,Cheapest_Overall_Unit_Rate,Usage)\n      ,c.contract_tag\n      # Obtain current contract start date via these rules:\n      #  - If tariff type is fixed and tag = 'migrated', use customerContractStartDate and customerContractExpiryDate\n      #  - If tariff type is fixed and tag <> 'migrated', take the contract end date and subtract tariff length (in months, make sure it is calculating correct day)\n      #  - If tariff type is variable and tag = 'migrated', take customerContractStartDate - if null, tariff active from\n      #  - If tariff type is variable and tag <> 'migrated', take customerContractStartDate - if null, startDate - if null, tariff active from\n      ,CASE WHEN s.tariff_type = 'fixed' AND c.contract_tag = 'migrated' THEN c.customerContractStartDate\n            WHEN s.tariff_type = 'fixed' THEN DATE_ADD(DATE_SUB(coalesce(s.Current_Contract_End_Date,c.customerContractExpiryDate,c.endDate), INTERVAL s.tariff_length MONTH), INTERVAL 1 DAY)\n            WHEN s.tariff_type = 'variable' AND c.contract_tag = 'migrated' THEN COALESCE(c.customerContractStartDate,s.Tariff_Active_From)\n            WHEN s.tariff_type = 'variable' THEN COALESCE(c.customerContractStartDate,c.startDate,s.Tariff_Active_From)\n       END as Contract_Start_Date\n      ,COALESCE(s.Current_Contract_End_Date,c.customerContractExpiryDate) as Contract_End_Date\n      ,cur.timeOfUseLabel as Current_Clocking_Time\n      ,ROUND(cur.unitRate * (1.00 + VAT_Rate),4) as Current_Unit_Rate # Add on VAT\n      ,u.value as Usage\n      ,pp.projectedRegisterConsumption.projectedConsumption as projectedConsumption\n      ,csr.timeOfUseLabel as Cheapest_Similar_Clocking_Time\n      ,ROUND(csr.unitRate * (1.00 + VAT_Rate),4) as Cheapest_Similar_Unit_Rate # Add on VAT\n      ,cor.timeOfUseLabel as Cheapest_Overall_Clocking_Time\n      ,ROUND(cor.unitRate * (1.00 + VAT_Rate),4) as Cheapest_Overall_Unit_Rate # Add on VAT\nFROM staging s\nINNER JOIN contract_dates c ON s.Contract_ID = c.contractId AND c.rn = 1 AND NOT c.cancelled # Remove cancelled contracts\nLEFT JOIN UNNEST(Current_Unit_Rate) cur\nLEFT JOIN UNNEST(Usage) u ON u.label = cur.timeOfUseLabel\nLEFT JOIN UNNEST(Cheapest_Similar_Unit_Rate) csr ON csr.timeOfUseLabel = cur.timeOfUseLabel\nLEFT JOIN UNNEST(Cheapest_Overall_Unit_Rate) cor ON cor.timeOfUseLabel = cur.timeOfUseLabel\nLEFT JOIN UNNEST(Personal_Projection) pp ON pp.projectedRegisterConsumption.timeOfUseLabel = cur.timeOfUseLabel\nORDER BY Account_No"},"data-engineering-prod:product_andromeda_secure.confirmed_smart_meter_types":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.confirmed_smart_meter_types","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/confirmed_smart_meter_types","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/confirmed_smart_meter_types","table_id":"confirmed_smart_meter_types","time_partitioning":null,"view_query":"\n\/**************************************************************************\/\n\/***                                                                    ***\/\n\/*** Determine whether a meter is SMETS1 or SMETS2 from received reads  ***\/\n\/***                                                                    ***\/\n\/**************************************************************************\/\n\n\nWITH\n-- check gas msd reads. If we have at least one, it's smets1\ngas_msd AS (\n  SELECT DISTINCT \n    value.GasMidnightSnapshotReadingEventByMsn.msn\n    ,'Gas' AS fuel\n  FROM \n    `data-engineering-prod.landing_andromeda.rac_msd_stripped_v1` \n  WHERE\n    PARTITIONTIME >= '2020-04-17'\n    AND value.GasMidnightSnapshotReadingEventByMsn.metadata.traceToken\tLIKE 'MSD%'\n),\n-- check elec msd reads. If we have at least one, it's smets1\nelec_msd AS (\n  SELECT DISTINCT \n    value.ElectricityMidnightSnapshotReadingEventByMsn.msn\t\n    ,'Electricity' AS fuel\n  FROM \n    `data-engineering-prod.landing_andromeda.rac_msd_stripped_v1` \n  WHERE\n    PARTITIONTIME >= '2020-04-17'\n    AND value.ElectricityMidnightSnapshotReadingEventByMsn.metadata.traceToken\tLIKE 'MSD%'\n),\nboth AS (\n  SELECT * FROM gas_msd\n  UNION ALL \n  SELECT * FROM elec_msd\n\n), \n-- check secure schedules. If we have one, it's smets1. This should account for missing comms meters\nschedules AS (\n  SELECT\n     supplyType AS fuel\n    ,deviceNo AS msn\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated`\n), \n-- join both. If either condition is met, mark as SMETS1\nsmets1 AS (\n  SELECT DISTINCT\n      COALESCE(s.msn, b.msn) AS msn\n     ,COALESCE(s.fuel, b.fuel) AS fuel\n     ,'Secure SMETS1' AS meterType\n  FROM\n    both b\n  FULL OUTER JOIN\n    schedules s\n      ON b.msn = s.msn\n), \n-- use the XREADs to determine if a meter is SMETS2. If we have one, consider it to be SMETS2\nsmets2 AS (\n  SELECT DISTINCT\n    body.xreadOut01.meter.msn\n    ,CASE WHEN body.xreadOut01.meter.importMpan IS NOT NULL THEN 'Electricity'\n          WHEN body.xreadOut01.meter.importMprn IS NOT NULL THEN 'Gas'\n          END AS fuel\n    ,'SMETS2' AS meterType\n  FROM \n    `data-engineering-prod.raw_andromeda_secure.flow_BOL_XREADOUT01_validated`\n)\n-- bring it together. we outer join and union because if a meter appears to be both S1 and S2, it's S1 (S2 MSN enterred wrong)\n-- there can of course be traditional meters given SMETS2 MSNs, but the numbers will be few. Broadly, we can consider this to be safe\nSELECT DISTINCT\n   COALESCE(s1.msn, s2.msn) AS msn    -- there were 6 overlaps. Coelesce with S1 first as these overlaps are 'stolen' MSNs from S1\n  ,COALESCE(s1.fuel, s2.fuel) AS fuel\n  ,COALESCE(s1.meterType, s2.meterType) AS meterType\nFROM\n  smets1 s1\nFULL OUTER JOIN\n  smets2 s2\n    ON s1.msn = s2.msn\n\n "},"data-engineering-prod:product_andromeda_secure.consumption_blocks":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_blocks","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_blocks","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_blocks","table_id":"consumption_blocks","time_partitioning":null,"view_query":"--Electricity\nSELECT e.metadata\n      ,e.mpan as mpxn\n      ,e.msn\n      ,e.fromDateTime \n      ,e.toDateTime\n      ,cast(e.fromDateTime as date) as fromDate\n      ,cast(e.toDateTime as date) as toDate\n      ,CAST(NULL AS STRING)as chargingZone --Fake column to align with gas\n      ,e.tiers\n      ,IF(ARRAY_LENGTH(e.tiers) = 1, e.tiers[OFFSET(0)].fromMeterReading,NULL) as fromMeterReading --Adding in for backwards compatibility\n      ,IF(ARRAY_LENGTH(e.tiers) = 1, e.tiers[OFFSET(0)].toMeterReading,NULL) as toMeterReading --Adding in for backwards compatibility\n      ,IF(ARRAY_LENGTH(e.tiers) = 1, e.tiers[OFFSET(0)].toReadingType,NULL) as toReadingType --Adding in for backwards compatibility\n      ,CAST(NULL AS FLOAT64) as volume --Fake column to align with gas\n      ,NULL as calorificValues --Fake column to align with gas\n      ,CAST(NULL AS FLOAT64) as effectiveCalorificValue --Fake column to align with gas\n      ,IF(ARRAY_LENGTH(e.tiers) = 1, e.tiers[OFFSET(0)].consumption,NULL) as consumption --Adding in for backwards compatibility\n      ,e.insertTime \nFROM `data-engineering-prod.landing_andromeda_secure.rac_electricity_consumption_consolidated` e\n\nUNION ALL\n\n--Gas\nSELECT g.metadata\n      ,g.mprn  as mpxn\n      ,g.msn\n      ,g.fromDateTime \n      ,g.toDateTime\n      ,cast(g.fromDateTime as date) as fromDate\n      ,cast(g.toDateTime as date) as toDate \n      ,g.chargingZone \n      ,NULL as tiers --Fake column to align with Elec\n      ,g.fromMeterReading \n      ,g.toMeterReading \n      ,g.toReadingType\n      ,g.volume \n      ,g.calorificValues\n      ,g.effectiveCalorificValue \n      ,g.consumption\n      ,g.insertTime \nFROM `data-engineering-prod.landing_andromeda_secure.rac_gas_energy_consumption_consolidated` g"},"data-engineering-prod:product_andromeda_secure.consumption_blocks_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_blocks_extract","location":"EU","num_bytes":180973258608,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_blocks_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_blocks_extract","table_id":"consumption_blocks_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.consumption_blocks_old":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_blocks_old","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_blocks_old","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_blocks_old","table_id":"consumption_blocks_old","time_partitioning":null,"view_query":"-- Elec Consumption\nwith cte_elec_consumption as\n(\n  with cte_elec_consumption_union as\n  (\n    SELECT consumptionId,\n           createdAt,\n           mpan as mpxn,\n           fromDateTime,\n           fromMeterReading,\n           toDateTime, \n           toMeterReading, \n           consumption\n    FROM `data-engineering-prod.raw_andromeda_secure.rac_consumption_generated__no_dedupe`\n    where consumptionId is not null\n    union all\n    SELECT firstRefined_consumptionId     as consumptionId,\n           createdAt,\n           firstRefined_mpan              as mpxn,\n           firstRefined_fromDateTime      as fromDateTime,\n           firstRefined_fromMeterReading  as fromMeterReading,\n           firstRefined_toDateTime        as toDateTime, \n           firstRefined_toMeterReading    as toMeterReading, \n           firstRefined_consumption       as consumption     \n    FROM `data-engineering-prod.raw_andromeda_secure.rac_consumption_generated__no_dedupe`\n    where firstRefined_consumptionId is not null\n    union all\n    SELECT secondRefined_consumptionId    as consumptionId,\n           createdAt,\n           secondRefined_mpan             as mpxn,\n           secondRefined_fromDateTime     as fromDateTime,\n           secondRefined_fromMeterReading as fromMeterReading,\n           secondRefined_toDateTime       as toDateTime, \n           secondRefined_toMeterReading   as toMeterReading, \n           secondRefined_consumption      as consumption\n    FROM `data-engineering-prod.raw_andromeda_secure.rac_consumption_generated__no_dedupe`\n    where secondRefined_consumptionId is not null\n  ),  \n  cte_elec_consumption_dedupe as\n  (\n    SELECT *,\n           row_number() over (partition by consumptionId order by createdAt desc) as dedupe_rownum\n    FROM cte_elec_consumption_union\n  ),\n  cte_elec_deleted as\n  (\n    -- If a previous consumptionId has been refined then we need to delete what we had before\n    select previousConsumptionId as consumptionId,\n           max(createdAt) as latestDeletedTime\n    FROM `data-engineering-prod.raw_andromeda_secure.rac_consumption_generated__no_dedupe`\n    where previousConsumptionId is not null\n    group by previousConsumptionId\n  )\n  select c.*\n  from cte_elec_consumption_dedupe c\n  left join cte_elec_deleted del on c.consumptionId = del.consumptionId\n                                and del.latestDeletedTime > c.createdAt\n  where c.dedupe_rownum = 1\n    and del.consumptionId is null\n),\n-- Gas Consumption\ncte_gas_consumption as\n(\n  with cte_gas_consumption_generated as\n  (\n    with cte_gas_consumption_generated_union as\n    (\n      SELECT gen.generated_consumptionId as consumptionId,\n             gen.generated_mprn          as mprn, \n             gen.generated_fromDateTime  as fromDateTime,\n             gen.generated_fromMeterReading  as fromMeterReading,\n             gen.generated_toDateTime    as toDateTime,\n             gen.generated_toMeterReading  as toMeterReading,\n             gen.generated_volume        as volume,\n             gen.generated_consumption   as consumption,\n             gen.createdAt               as createdAt,\n             'generated'                 as operation\n      FROM `data-engineering-prod.raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe` gen\n      where gen.generated_consumptionId IS NOT NULL\n      union all\n      SELECT gen.firstRefined_consumptionId as consumptionId,\n             gen.firstRefined_mprn          as mprn, \n             gen.firstRefined_fromDateTime  as fromDateTime,\n             gen.firstRefined_fromMeterReading  as fromMeterReading,\n             gen.firstRefined_toDateTime    as toDateTime,\n             gen.firstRefined_toMeterReading  as toMeterReading,\n             gen.firstRefined_volume        as volume,\n             gen.firstRefined_consumption   as consumption,\n             gen.createdAt               as createdAt,\n             'generated'                 as operation\n      FROM `data-engineering-prod.raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe` gen\n      where gen.firstRefined_consumptionId IS NOT NULL\n      union all\n      SELECT gen.secondRefined_consumptionId as consumptionId,\n             gen.secondRefined_mprn          as mprn, \n             gen.secondRefined_fromDateTime  as fromDateTime,\n             gen.secondRefined_fromMeterReading  as fromMeterReading,\n             gen.secondRefined_toDateTime    as toDateTime,\n             gen.secondRefined_toMeterReading  as toMeterReading,\n             gen.secondRefined_volume        as volume,\n             gen.secondRefined_consumption   as consumption,\n             gen.createdAt               as createdAt,\n             'generated'                 as operation\n      FROM `data-engineering-prod.raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe` gen\n      where gen.secondRefined_consumptionId IS NOT NULL\n    ),    \n    cte_gas_consumption_generated_dedupe as\n    (\n      SELECT gen.consumptionId,\n             gen.mprn, \n             gen.fromDateTime,\n             gen.fromMeterReading,\n             gen.toDateTime,\n             gen.toMeterReading,\n             gen.volume,\n             gen.consumption,\n             gen.createdAt,\n             gen.operation,\n             row_number() over (partition by gen.consumptionId order by gen.createdAt desc) as dedupe_rownum\n      FROM cte_gas_consumption_generated_union gen\n      where gen.consumptionId IS NOT NULL\n    )\n    select *\n    from cte_gas_consumption_generated_dedupe\n    where dedupe_rownum = 1\n  ),\n  cte_gas_consumption_updated as\n  (\n    with cte_gas_consumption_updated_dedupe as\n    (\n      SELECT upd.updated_consumptionId  as consumptionId,\n             upd.updated_consumption    as consumption,\n             upd.createdAt              as createdAt,\n             'updated'                  as operation,\n             row_number() over (partition by upd.updated_consumptionId order by upd.createdAt desc) as dedupe_rownum\n      FROM `data-engineering-prod.raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe` upd\n      where upd.updated_consumptionId IS NOT NULL\n    )\n    select *\n    from cte_gas_consumption_updated_dedupe\n    where dedupe_rownum = 1\n  ),\n  cte_gas_deleted as\n  (\n    -- If a previous consumptionId has been refined then we need to delete what we had before\n    select previousConsumptionId as consumptionId,\n           max(createdAt) as latestDeletedTime\n    FROM `data-engineering-prod.raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe`\n    where previousConsumptionId is not null\n    group by previousConsumptionId\n  )\n  select c.consumptionId,\n         c.mprn as mpxn,\n         c.fromDateTime,\n         c.fromMeterReading,\n         c.toDateTime,\n         c.toMeterReading,\n         c.volume,\n         coalesce(upd.consumption, c.consumption) as consumption\n  from cte_gas_consumption_generated c\n  left join cte_gas_consumption_updated upd on c.consumptionId = upd.consumptionId\n                                          and upd.createdAt > c.createdAt\n  left join cte_gas_deleted del on c.consumptionId = del.consumptionId\n                               and del.latestDeletedTime > c.createdAt\n  where c.dedupe_rownum = 1\n    and del.consumptionId is null\n),\ncte_combined_consumption as\n(\n  select mpxn,\n         fromDateTime,\n         cast(fromDateTime as date) as fromDate,\n         fromMeterReading,\n         toDateTime,\n         toMeterReading,\n         cast(toDateTime as date) as toDate,\n         consumptionId,\n         null as volume,\n         consumption\n  from cte_elec_consumption\n  union all\n  select mpxn,\n         fromDateTime,\n         cast(fromDateTime as date) as fromDate,\n         fromMeterReading,\n         toDateTime,\n         toMeterReading,\n         cast(toDateTime as date) as toDate,\n         consumptionId,\n         volume,\n         consumption\n  from cte_gas_consumption\n)\nselect *\nfrom cte_combined_consumption"},"data-engineering-prod:product_andromeda_secure.consumption_charges":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_charges","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_charges","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_charges","table_id":"consumption_charges","time_partitioning":null,"view_query":"with cte_consumption_charge_generated as (\n  with cte_consumption_charge_created as (\n    with cte_charge_dedupe as (\n      select created_eventId            as event_id,\n             created_createdAt          as created_at,\n             created_chargeId           as charge_id,\n             created_from               as charge_from,\n             created_to                 as charge_to,\n             created_contractId         as contract_id,\n             created_supplyPoint        as supply_point,\n             created_charges            as charges,\n             created_amount             as charge_amount,\n             created_unitRate           as unit_rate,\n             created_consumption        as consumption,\n             created_consumptionId      as consumption_id,\n             insertTime                 as latestCreateInsertTime,\n             kafkaOffset                as latestCreateKafkaOffset,\n             0                          as is_consumption_adjustment,\n             row_number() Over (partition by created_chargeId order by topic desc, insertTime desc, created_createdAt desc) as charge_dedupe_rownum\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe`\n      WHERE created_eventId is not null\n      \n      union all\n      \n      select final_eventId            as event_id,\n             final_createdAt          as created_at,\n             final_chargeId           as charge_id,\n             final_from               as charge_from,\n             final_to                 as charge_to,\n             final_contractId         as contract_id,\n             final_supplyPoint        as supply_point,\n             ARRAY(SELECT STRUCT(clockingTimeId,\n                                 clockingTimeLabel,\n                                 consumptionAdjustment as consumption,\n                                 unitRate,\n                                 amount,\n                                 cast(null as float64) as fromMeterReading,\n                                 cast(null as string) as fromReadingType,\n                                 cast(null as float64) as toMeterReading,\n                                 cast(null as string) as toReadingType)  \n                   FROM c.final_charges)           as charges,            \n             final_amount             as charge_amount,\n             final_unitRate           as unit_rate,\n             final_consumptionAdjustment as consumption,\n             cast(null as string)       as consumption_id,\n             insertTime                 as latestCreateInsertTime,\n             kafkaOffset                as latestCreateKafkaOffset,\n             1                          as is_consumption_adjustment,\n             row_number() Over (partition by final_chargeId order by topic desc, insertTime desc, final_createdAt desc) as charge_dedupe_rownum\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe` c\n      WHERE final_eventId is not null\n    ),\n    \n    cte_created_times as (\n      select created_chargeId       as charge_id,\n             min(created_createdAt) as charge_first_created_time\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe`\n      group by created_chargeId\n      \n      union all\n      \n      select final_chargeId       as charge_id,\n             min(final_createdAt) as charge_first_created_time\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe`\n      group by final_chargeId\n    )\n    \n    select d.*,\n           ct.charge_first_created_time\n    from cte_charge_dedupe d\n    left join cte_created_times ct on d.charge_id = ct.charge_id\n    where charge_dedupe_rownum = 1\n  ),\n  \n  cte_consumption_charge_updated as (\n    with cte_charge_dedupe as (\n      select updated_eventId   as event_id,\n             updated_chargeId           as charge_id,\n             updated_consumptionId      as consumption_id,\n             updated_charges            as charges,\n             updated_amount             as charge_amount,\n             updated_unitRate           as unit_rate,\n             updated_consumption        as consumption,\n             updated_createdAt          as created_at,\n             insertTime                 as latestUpdateInsertTime,\n             kafkaOffset                as latestUpdateKafkaOffset,\n             row_number() Over (partition by updated_chargeId order by insertTime desc, updated_createdAt desc) as charge_dedupe_rownum\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated`\n      WHERE updated_eventId is not null\n    )\n    \n    select *\n    from cte_charge_dedupe\n    where charge_dedupe_rownum = 1\n  )\n  \n  select \n        COALESCE(cc_updated.event_id, cc_created.event_id) event_id,\n        cc_created.charge_id,\n        cc_created.charge_first_created_time,\n        cc_created.charge_from,\n        cc_created.charge_to,\n        cc_created.contract_id,\n        cc_created.supply_point,\n        coalesce(cc_updated.consumption_id, cc_created.consumption_id) as consumption_id,\n        COALESCE(cc_updated.charges, cc_created.charges) as charges,\n        COALESCE(cc_updated.charge_amount, cc_created.charge_amount) charge_amount, -- Favour an update over a created to pick up new CV values\n        COALESCE(cc_updated.consumption, cc_created.consumption) consumption,\n        COALESCE(cc_updated.unit_rate, cc_created.unit_rate) unit_rate,\n        cc_created.is_consumption_adjustment,\n        COALESCE(cc_updated.created_at, cc_created.created_at) as charge_last_updated_time,\n        COALESCE(cc_updated.latestUpdateInsertTime, cc_created.latestCreateInsertTime) as latestGeneratedInsertTime,\n        COALESCE(cc_updated.latestUpdateKafkaOffset, cc_created.latestCreateKafkaOffset) as latestGeneratedKafkaOffset\n  from cte_consumption_charge_created cc_created\n  left join cte_consumption_charge_updated cc_updated  on cc_created.charge_id = cc_updated.charge_id\n                                                      and (cc_updated.latestUpdateInsertTime > cc_created.latestCreateInsertTime\n                                                       OR (cc_updated.latestUpdateInsertTime = cc_created.latestCreateInsertTime\n                                                       AND cc_updated.latestUpdateKafkaOffset > cc_created.latestCreateKafkaOffset)) -- Need the offset tiebreaker to deal with data we backfilled\n),\n\ncte_consumption_charge_cancelled as (\n  select cancelled_chargeId        as charge_id,\n         max(cancelled_createdAt)  as latestCancelledCreatedAt, # updated from insertTime PJD 2020-01-31\n         MAX(kafkaOffset)          as latestCancelledKafkaOffset\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated`\n  where cancelled_eventId is NOT null\n  group by cancelled_chargeId\n),\n\ncte_consumption_charge as (\n  select \n      cc_generated.supply_point,\n      cc_generated.contract_id,\n      cc_generated.charge_id,\n      cc_generated.consumption_id,\n      cc_generated.charges,\n      cc_generated.charge_first_created_time,\n      cc_generated.charge_last_updated_time,\n      CAST(cc_generated.charge_from AS datetime) AS Charge_From_Date,\n      CAST(cc_generated.charge_to AS datetime)   AS Charge_To_Date,\n      TIMESTAMP_DIFF(cc_generated.charge_to, cc_generated.charge_from, HOUR) charge_span_hours, -- a sensible person would use SECONDS and divide by 60, but I'm lazy sue me... - Pete Grace 23-10-19\n      cc_generated.charge_amount,\n      cc_generated.unit_rate,\n      cc_generated.consumption,\n      case when cc_cancelled.charge_id is null then 0 else 1 end is_cancelled,\n      'consumption_charge' as charge_type,\n      cc_generated.is_consumption_adjustment\n  from cte_consumption_charge_generated cc_generated\n  left join cte_consumption_charge_cancelled cc_cancelled on cc_cancelled.charge_id = cc_generated.charge_id\n                                                            and (cc_cancelled.latestCancelledCreatedAt > cc_generated.charge_last_updated_time\n                                                             OR (cc_cancelled.latestCancelledCreatedAt = cc_generated.charge_last_updated_time\n                                                             AND cc_cancelled.latestCancelledKafkaOffset > cc_generated.latestGeneratedKafkaOffset))\n)\n\nselect cc.*,\n       cc.supply_point as mpxn\nfrom cte_consumption_charge cc\nwhere is_cancelled = 0"},"data-engineering-prod:product_andromeda_secure.consumption_charges_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_charges_extract","location":"EU","num_bytes":88578371106,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_charges_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_charges_extract","table_id":"consumption_charges_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.consumption_charges_including_cancelled":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_charges_including_cancelled","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_charges_including_cancelled","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_charges_including_cancelled","table_id":"consumption_charges_including_cancelled","time_partitioning":null,"view_query":"with cte_consumption_charge_generated as (\n  with cte_consumption_charge_created as (\n    with cte_charge_dedupe as (\n      select created_eventId            as event_id,\n             created_createdAt          as created_at,\n             created_chargeId           as charge_id,\n             created_from               as charge_from,\n             created_to                 as charge_to,\n             created_contractId         as contract_id,\n             created_supplyPoint        as supply_point,\n             created_charges            as charges,\n             created_amount             as charge_amount,\n             created_unitRate           as unit_rate,\n             created_consumption        as consumption,\n             created_consumptionId      as consumption_id,\n             insertTime                 as latestCreateInsertTime,\n             kafkaOffset                as latestCreateKafkaOffset,\n             0                          as is_consumption_adjustment,\n             row_number() Over (partition by created_chargeId order by topic desc, insertTime desc, created_createdAt desc) as charge_dedupe_rownum\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe`\n      WHERE created_eventId is not null\n      \n      union all\n      \n      select final_eventId            as event_id,\n             final_createdAt          as created_at,\n             final_chargeId           as charge_id,\n             final_from               as charge_from,\n             final_to                 as charge_to,\n             final_contractId         as contract_id,\n             final_supplyPoint        as supply_point,\n             ARRAY(SELECT STRUCT(clockingTimeId,\n                                 clockingTimeLabel,\n                                 consumptionAdjustment as consumption,\n                                 unitRate,\n                                 amount,\n                                 cast(null as float64) as fromMeterReading,\n                                 cast(null as string) as fromReadingType,\n                                 cast(lossRead as float64) as toMeterReading,\n                                 cast('Loss Read' as string) as toReadingType)  \n                   FROM c.final_charges)           as charges,            \n             final_amount             as charge_amount,\n             final_unitRate           as unit_rate,\n             final_consumptionAdjustment as consumption,\n             cast(null as string)       as consumption_id,\n             insertTime                 as latestCreateInsertTime,\n             kafkaOffset                as latestCreateKafkaOffset,\n             1                          as is_consumption_adjustment,\n             row_number() Over (partition by final_chargeId order by topic desc, insertTime desc, final_createdAt desc) as charge_dedupe_rownum\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe` c\n      WHERE final_eventId is not null\n    ),\n    \n    cte_created_times as (\n      select created_chargeId       as charge_id,\n             min(created_createdAt) as charge_first_created_time\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe`\n      group by created_chargeId\n      \n      union all\n      \n      select final_chargeId       as charge_id,\n             min(final_createdAt) as charge_first_created_time\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe`\n      group by final_chargeId\n    )\n    \n    select d.*,\n           ct.charge_first_created_time\n    from cte_charge_dedupe d\n    left join cte_created_times ct on d.charge_id = ct.charge_id\n    where charge_dedupe_rownum = 1\n  ),\n  \n  cte_consumption_charge_updated as (\n    with cte_charge_dedupe as (\n      select updated_eventId   as event_id,\n             updated_chargeId           as charge_id,\n             updated_consumptionId      as consumption_id,\n             updated_charges            as charges,\n             updated_amount             as charge_amount,\n             updated_unitRate           as unit_rate,\n             updated_consumption        as consumption,\n             updated_createdAt          as created_at,\n             insertTime                 as latestUpdateInsertTime,\n             kafkaOffset                as latestUpdateKafkaOffset,\n             row_number() Over (partition by updated_chargeId order by insertTime desc, updated_createdAt desc) as charge_dedupe_rownum\n      from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated`\n      WHERE updated_eventId is not null\n    )\n    \n    select *\n    from cte_charge_dedupe\n    where charge_dedupe_rownum = 1\n  )\n  \n  select \n        COALESCE(cc_updated.event_id, cc_created.event_id) event_id,\n        cc_created.charge_id,\n        cc_created.charge_first_created_time,\n        cc_created.charge_from,\n        cc_created.charge_to,\n        cc_created.contract_id,\n        cc_created.supply_point,\n        coalesce(cc_updated.consumption_id, cc_created.consumption_id) as consumption_id,\n        COALESCE(cc_updated.charges, cc_created.charges) as charges,\n        COALESCE(cc_updated.charge_amount, cc_created.charge_amount) charge_amount, -- Favour an update over a created to pick up new CV values\n        COALESCE(cc_updated.consumption, cc_created.consumption) consumption,\n        COALESCE(cc_updated.unit_rate, cc_created.unit_rate) unit_rate,\n        cc_created.is_consumption_adjustment,\n        COALESCE(cc_updated.created_at, cc_created.created_at) as charge_last_updated_time,\n        COALESCE(cc_updated.latestUpdateInsertTime, cc_created.latestCreateInsertTime) as latestGeneratedInsertTime,\n        COALESCE(cc_updated.latestUpdateKafkaOffset, cc_created.latestCreateKafkaOffset) as latestGeneratedKafkaOffset\n  from cte_consumption_charge_created cc_created\n  left join cte_consumption_charge_updated cc_updated  on cc_created.charge_id = cc_updated.charge_id\n                                                      and (cc_updated.latestUpdateInsertTime > cc_created.latestCreateInsertTime\n                                                       OR (cc_updated.latestUpdateInsertTime = cc_created.latestCreateInsertTime\n                                                       AND cc_updated.latestUpdateKafkaOffset > cc_created.latestCreateKafkaOffset)) -- Need the offset tiebreaker to deal with data we backfilled\n),\n\ncte_consumption_charge_cancelled as (\n  select cancelled_chargeId        as charge_id,\n         max(cancelled_createdAt)  as latestCancelledCreatedAt, # updated from insertTime PJD 2020-01-31\n         MAX(kafkaOffset)          as latestCancelledKafkaOffset\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_consumption_charge_generated`\n  where cancelled_eventId is NOT null\n  group by cancelled_chargeId\n),\n\ncte_consumption_charge as (\n  select \n      cc_generated.supply_point,\n      cc_generated.contract_id,\n      cc_generated.charge_id,\n      cc_generated.consumption_id,\n      cc_generated.charges,\n      cc_generated.charge_first_created_time,\n      coalesce(latestCancelledCreatedAt, cc_generated.charge_last_updated_time) as charge_last_updated_time,\n      CAST(cc_generated.charge_from AS datetime) AS Charge_From_Date,\n      CAST(cc_generated.charge_to AS datetime)   AS Charge_To_Date,\n      TIMESTAMP_DIFF(cc_generated.charge_to, cc_generated.charge_from, HOUR) charge_span_hours, -- a sensible person would use SECONDS and divide by 60, but I'm lazy sue me... - Pete Grace 23-10-19\n      cc_generated.charge_amount,\n      cc_generated.unit_rate,\n      cc_generated.consumption,\n      case when cc_cancelled.charge_id is null then 0 else 1 end is_cancelled,\n      'consumption_charge' as charge_type,\n      cc_generated.is_consumption_adjustment\n  from cte_consumption_charge_generated cc_generated\n  left join cte_consumption_charge_cancelled cc_cancelled on cc_cancelled.charge_id = cc_generated.charge_id\n                                                            and (cc_cancelled.latestCancelledCreatedAt > cc_generated.charge_last_updated_time\n                                                             OR (cc_cancelled.latestCancelledCreatedAt = cc_generated.charge_last_updated_time\n                                                             AND cc_cancelled.latestCancelledKafkaOffset > cc_generated.latestGeneratedKafkaOffset))\n)\n\nselect cc.*,\n       cc.supply_point as mpxn\nfrom cte_consumption_charge cc"},"data-engineering-prod:product_andromeda_secure.consumption_loss_adjustments":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.consumption_loss_adjustments","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_loss_adjustments","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/consumption_loss_adjustments","table_id":"consumption_loss_adjustments","time_partitioning":null,"view_query":"select mpan as mpxn,\n       metadata.createdAt,\n       'electricity' as fuel,\n       ARRAY(SELECT STRUCT(1 as clockingTimeId\n                          ,meterRead\n                          ,lossRead\n                          ,consumptionAdjustment\n                          ,'anytime' as timeOfUseLabel)) as meterRegisters,\n       meterRead as lastSmartReading,\n       meterReadDateTime as lastSmartReadDatetime,\n       lossRead as finalReading,\n       lossReadDateTime as finalReadDatetime,\n       null as volumeAdjustment,\n       consumptionAdjustment\nfrom `data-engineering-prod.raw_andromeda_secure.rac_consumption_loss_adjustment_generated`\n\nunion all\n\nselect mpan as mpxn,\n       metadata.createdAt,\n       'electricity' as fuel,\n       meterRegisters,\n       case when array_length(meterRegisters) = 1 then meterRegisters[offset(0)].meterRead end as lastSmartReading,\n       meterReadDateTime as lastSmartReadDatetime,\n       case when array_length(meterRegisters) = 1 then meterRegisters[offset(0)].lossRead end as finalReading,\n       lossReadDateTime as finalReadDatetime,\n       null as volumeAdjustment,\n       case when array_length(meterRegisters) = 1 then meterRegisters[offset(0)].consumptionAdjustment end as consumptionAdjustment\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_consumption_loss_adjustment_generated_v2`\n\nunion all\n\nselect mprn as mpxn,\n       metadata.createdAt,\n       'gas' as fuel,\n        ARRAY(SELECT STRUCT(1 as clockingTimeId\n                          ,meterRead\n                          ,lossRead\n                          ,consumptionAdjustment\n                          ,'anytime' as timeOfUseLabel)) as meterRegisters,\n       meterRead as lastSmartReading,\n       meterReadDateTime as lastSmartReadDatetime,\n       lossRead as finalReading,\n       lossReadDateTime as finalReadDatetime,\n       volumeAdjustment,\n       consumptionAdjustment\nfrom `data-engineering-prod.raw_andromeda_secure.rac_gas_consumption_loss_adjustment_generated`"},"data-engineering-prod:product_andromeda_secure.contract_work_items":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.contract_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contract_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contract_work_items","table_id":"contract_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         coalesce(u.name, wi.statusChangeAuthor) as statusChangeAuthor,\n         split(e, '\/') as key_array\n  from `data-engineering-prod.landing_oot_secure.oot_work_item_v3` wi\n  inner join unnest(wi.entityUris) e\n  left join `data-engineering-prod.landing_oot_secure.oot_users_export` u on wi.statusChangeAuthor = u.userId\n  where e like 'contracts%'\n)\nselect ctr.serviceAccountId, ctr.mpxn, ctr.contractId, ctr.planName, ctr.startDate, ctr.endDate,\n       wi.* except(key_array)\nfrom `data-engineering-prod.product_andromeda_secure.contracts_including_cancelled` ctr\ninner join cte_work_items wi on ctr.contractId = wi.key_array[offset(2)]"},"data-engineering-prod:product_andromeda_secure.contracted_supply_points":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.contracted_supply_points","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracted_supply_points","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracted_supply_points","table_id":"contracted_supply_points","time_partitioning":null,"view_query":"with cte_losses as\n(\n  with cte_loss_dedupe as\n  (\n    select mpxn,\n           lossDate,\n           lossNotificationReceivedDate,\n           row_number() over (partition by mpxn order by lossNotificationReceivedDate desc) as loss_dedupe_rownum\n    from `data-engineering-prod.product_andromeda_secure.loss_journeys`\n    where lossJourneyStatus in ('Loss notification received', 'Loss confirmed', 'Loss completed')\n  )\n  select *\n  from cte_loss_dedupe\n  where loss_dedupe_rownum = 1\n),\ncte_tariffs as (\n  select distinct tariffId,\n         region,\n         profileClass\n  from `data-engineering-prod.product_andromeda_secure.tariffs`\n),\ncte_contracts as (\n  select DISTINCT c.serviceAccountId,\n         c.mpxn,\n         c.fuel,\n         t.region,\n         t.profileClass,\n         c.PlanName,\n         c.tariffType,\n         c.startDate,\n         c.endDate,\n         c.customerContractStartDate,\n         c.customerContractExpiryDate\n  from `data-engineering-prod.product_andromeda_secure.contracts` c\n  inner join cte_tariffs t using (tariffId)\n  order by mpxn\n)\nselect cm.mpxn,\n       cm.fuel,\n       coalesce(sp.regionCode, cm.region) as regionCode,\n       coalesce(sp.profileClassId, cm.profileClass) as profileClassId,\n       cm.planName,\n         cm.tariffType,\n       coalesce(cm.customerContractStartDate, cm.startDate) as contractStartDate,    \n       coalesce(cm.customerContractExpiryDate, cm.endDate) as contractExpiryDate, \n       next_ctr.planName as futureContractPlanName,\n         next_ctr.tariffType as futureContractTariffType,\n       next_ctr.customerContractStartDate as futureContractStartDate, \n       next_ctr.customerContractExpiryDate as futureContractExpiryDate,\n       l.lossDate,\n       coalesce(eac.estimatedAnnualConsumption, sp.forecastedAnnualConsumption) as forecastedAnnualConsumption,\n       sp.ssc,\n       r.timePatternRegime as tpr,\n       sp.meterTimeswitchCode,\n       sp.lineLossFactorClassId,\n       sp.distributorId,\n       cm.contractOrder\nfrom (select *, \n             row_number() over (partition by serviceAccountId, mpxn order by startDate asc) as contractOrder\n      from cte_contracts) cm\nleft join cte_contracts next_ctr on next_ctr.mpxn = cm.mpxn\n                                and next_ctr.startDate = date_add(cm.endDate, interval 1 day)\nleft join `data-engineering-prod.product_andromeda_secure.supply_points` sp on cm.mpxn = sp.mpxn\nleft join unnest(sp.currentMeterRegisters.meterRegisters) r\nleft join `data-engineering-prod.product_andromeda_secure.multi_rate_projections_4_eacs` eac on sp.mpxn = eac.mpan\n                                                                      and r.timePatternRegime = eac.timePatternRegime\nleft join cte_losses l on cm.mpxn = l.mpxn\n                      and l.lossDate >= cm.startDate\nwhere CURRENT_DATE() between cm.startDate and coalesce(cm.endDate, '2999-01-01') # Current contracts\n   or (cm.contractOrder=1 and cm.startDate > current_date())                     # Onboarded contracts"},"data-engineering-prod:product_andromeda_secure.contracted_supply_points_old":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.contracted_supply_points_old","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracted_supply_points_old","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracted_supply_points_old","table_id":"contracted_supply_points_old","time_partitioning":null,"view_query":"with cte_losses as\n(\n  with cte_loss_dedupe as\n  (\n    select mpxn,\n           lossDate,\n           lossNotificationReceivedDate,\n           row_number() over (partition by mpxn order by lossNotificationReceivedDate desc) as loss_dedupe_rownum\n    from `data-engineering-prod.product_andromeda_secure.loss_journeys`\n    where lossJourneyStatus in ('Loss notification received', 'Loss confirmed', 'Loss completed')\n  )\n  select *\n  from cte_loss_dedupe\n  where loss_dedupe_rownum = 1\n)\nselect cm.mpxn,\n       cm.fuel,\n       sp.regionCode,\n       sp.profileClassId,\n       cm.planName,\n\t     cm.tariffType,\n       coalesce(cm.customerContractStartDate, cm.startDate) as contractStartDate,    \n       coalesce(cm.customerContractExpiryDate, cm.endDate) as contractExpiryDate, \n       next_ctr.planName as futureContractPlanName,\n\t     next_ctr.tariffType as futureContractTariffType,\n       next_ctr.customerContractStartDate as futureContractStartDate, \n       next_ctr.customerContractExpiryDate as futureContractExpiryDate,\n       l.lossDate,\n       coalesce(eac.estimatedAnnualConsumption, sp.forecastedAnnualConsumption) as forecastedAnnualConsumption,\n       sp.ssc,\n       r.timePatternRegime as tpr,\n       sp.meterTimeswitchCode,\n       sp.lineLossFactorClassId,\n       sp.distributorId\nfrom `data-engineering-prod.product_andromeda_secure.contracts` cm\nleft join `data-engineering-prod.product_andromeda_secure.contracts` next_ctr on next_ctr.mpxn = cm.mpxn\n                                               and next_ctr.startDate = date_add(cm.endDate, interval 1 day)\nleft join `data-engineering-prod.product_andromeda_secure.supply_points` sp on cm.mpxn = sp.mpxn\nleft join unnest(sp.currentMeterRegisters.meterRegisters) r\nleft join `data-engineering-prod.product_andromeda_secure.multi_rate_projections_4_eacs` eac on sp.mpxn = eac.mpan\n                                                                      and r.timePatternRegime = eac.timePatternRegime\nleft join cte_losses l on cm.mpxn = l.mpxn\n                      and l.lossDate >= cm.startDate\nwhere CURRENT_DATE() between cm.startDate and coalesce(cm.endDate, '2999-01-01')"},"data-engineering-prod:product_andromeda_secure.contracts":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.contracts","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracts","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracts","table_id":"contracts","time_partitioning":null,"view_query":"select * except(isCancelled)\nfrom `data-engineering-prod.product_andromeda_secure.contracts_including_cancelled` \nwhere isCancelled = 0"},"data-engineering-prod:product_andromeda_secure.contracts_including_cancelled":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.contracts_including_cancelled","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracts_including_cancelled","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/contracts_including_cancelled","table_id":"contracts_including_cancelled","time_partitioning":null,"view_query":"with cte_contract_dedupe as (\n  SELECT contract_contractId as contractId,\n         contract_mpxn as mpxn,\n         contract_serviceAccountId as serviceAccountId,\n         contract_fuel as fuel,\n         contract_startDate as startDate,\n         contract_endDate as endDate,\n         ctr.contract_customerContractStartDate as customerContractStartDate,\n         contract_customerContractExpiryDate as customerContractExpiryDate,\n         contract_unitRate as unitRate,\n         contract_standingRate as standingRate,\n         contract_tariffId as tariffId,\n         ctr.insertTime as latestCreatedEventTime,\n         ctr.kafkaOffset as latestCreatedKafkaOffset,\n         ctr.cancelled,\n         row_number() over (partition by ctr.contract_contractId order by ctr.topic desc,  ctr.contract_createdAt desc) as dedupe_rownum\n  FROM `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract__no_dedupe` ctr\n  where contract_eventId is not null\n),\n\ncte_first_contract as (\n  with cte_union as (\n    select contract_contractId as contractId,\n           contract_createdAt as createdAt\n    from `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract__no_dedupe`\n    where contract_eventId is not null\n    \n    union all\n    \n    select contractId,\n           createdAt\n    from `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract_created__no_dedupe`\n  )\n  \n  select contractId,\n         min(createdAt) as createdDate\n  from cte_union\n  group by contractId\n),\n\ncte_cancelled as (\n  select COALESCE(cancelled_contractId, contract_contractId) as contractId,\n         max(insertTime) as latestCancellationEventTime,\n         max(kafkaOffset) as latestCancellationKafkaOffset\n  FROM `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract__no_dedupe`\n  where (cancelled_eventId is not null\n  or cancelled = True)\n  group by COALESCE(cancelled_contractId, contract_contractId)\n)\n\nselect ctr.contractId,\n       ctr.mpxn,\n       ctr.serviceAccountId,\n       ctr.fuel,\n       ctr.startDate,\n       ctr.endDate,\n       coalesce(ctr.customerContractStartDate, ctr.startDate) as customerContractStartDate,\n       ctr.customerContractExpiryDate,\n       coalesce(ft.unitRate, vt.unitRate, ctr.unitRate) as currentUnitRate,\n       coalesce(ft.unitRates, vt.unitRates) as currentUnitRates,\n       coalesce(ft.standingRate, vt.standingRate, ctr.standingRate) as currentStandingRate,\n       ctr.tariffId,\n       coalesce(ft.type, vt.type, 'fixed') as tariffType,\n       coalesce(ft.planName, vt.planName) as planName,\n       coalesce(ft.activeFrom, vt.activeFrom) as tariffActiveFrom,\n       coalesce(ft.activeTo, vt.activeTo) as tariffActiveTo,\n       ctr.latestCreatedEventTime,\n       c1.createdDate,\n       case when can.contractId is not null then 'cancelled'\n            when ctr.startDate > CURRENT_DATE() then 'pending'\n            when ctr.endDate < current_date() then 'historic'\n            else 'active'\n       end as contractStatus,\n       case when can.contractId is not null then 1 else 0 end as isCancelled\nfrom cte_contract_dedupe ctr\nLEFT JOIN cte_first_contract c1 on ctr.contractId = c1.contractId\nleft join cte_cancelled can on ctr.contractId = can.contractId and (can.latestCancellationEventTime > ctr.latestCreatedEventTime or (can.latestCancellationEventTime = ctr.latestCreatedEventTime and can.latestCancellationKafkaOffset >= ctr.latestCreatedKafkaOffset)) --Need the offset tiebreaker to deal with data we backfilled\nleft join `data-engineering-prod.product_andromeda_secure.tariffs` ft on ctr.tariffId = ft.tariffId and ft.type = 'fixed'\nleft join `data-engineering-prod.product_andromeda_secure.tariffs` vt on ctr.tariffId = vt.tariffId and vt.type = 'variable' and CURRENT_DATE() between vt.activeFrom and coalesce(vt.activeTo, '2999-01-01') \nwhere ctr.dedupe_rownum = 1"},"data-engineering-prod:product_andromeda_secure.cos_loss_read_delay_reason_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.cos_loss_read_delay_reason_snapshots","location":"EU","num_bytes":143620955,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/cos_loss_read_delay_reason_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/cos_loss_read_delay_reason_snapshots","table_id":"cos_loss_read_delay_reason_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.cos_loss_read_delay_reasons":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.cos_loss_read_delay_reasons","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/cos_loss_read_delay_reasons","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/cos_loss_read_delay_reasons","table_id":"cos_loss_read_delay_reasons","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.product_andromeda_secure.cos_loss_read_delay_reason_snapshots`\nwhere snapshotDate = current_date()"},"data-engineering-prod:product_andromeda_secure.current_gas_settlement_gap_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.current_gas_settlement_gap_extract","location":"EU","num_bytes":200958515,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/current_gas_settlement_gap_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/current_gas_settlement_gap_extract","table_id":"current_gas_settlement_gap_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.dpa_breach_final_bill_exceptions":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.dpa_breach_final_bill_exceptions","location":"EU","num_bytes":9,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/dpa_breach_final_bill_exceptions","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/dpa_breach_final_bill_exceptions","table_id":"dpa_breach_final_bill_exceptions","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.economy_energy_read_history_elec":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.economy_energy_read_history_elec","location":"EU","num_bytes":909310618,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/economy_energy_read_history_elec","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/economy_energy_read_history_elec","table_id":"economy_energy_read_history_elec","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.economy_energy_read_history_gas":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.economy_energy_read_history_gas","location":"EU","num_bytes":909525415,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/economy_energy_read_history_gas","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/economy_energy_read_history_gas","table_id":"economy_energy_read_history_gas","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.economy_energy_xoserve_portfolio":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.economy_energy_xoserve_portfolio","location":"EU","num_bytes":76394169,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/economy_energy_xoserve_portfolio","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/economy_energy_xoserve_portfolio","table_id":"economy_energy_xoserve_portfolio","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.elec_read_dispute_raised":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.elec_read_dispute_raised","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/elec_read_dispute_raised","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/elec_read_dispute_raised","table_id":"elec_read_dispute_raised","time_partitioning":null,"view_query":"WITH cte_all_d300s as\n(\n  select \n         d300.metadata.eventId,\n         lj.mpxn,\n         lj.lossDate,\n         parse_date('%Y%m%d', SUBSTR(d300.header.fileCreationTimestamp,1,8)) as createdDate,\n         d300.header.fromMarketParticipantId,\n         d300.header.toMarketParticipantId,\n         d300.record.MpanDetails.mpanCoreProcess,\n         d300.record.MpanDetails.additionalInformation,\n         d300.record.MpanDetails.recordRejectionReasonIndicator,\n         meter.meterIdSerialNumber,\n         meter.initiatingFlowIndicator,\n         reg.meterRegisterID,\n         reg.registerReading,\n         reg.readingType,\n         reg.changeOfSupplierReadingRejectionCode,\n         reg.proposedRegisterReading,\n         reg.statusOfProposedReadingS\n  from `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed` lj\n  inner join `data-engineering-prod.raw_andromeda_secure.flow_D0300001_split` d300 on lj.mpxn = d300.record.MpanDetails.mpanCore\n                                                      and safe.parse_date('%Y%m%d', record.MpanDetails.effectiveFromSettlementDateRegiForNewSupplier) = date_add(lj.lossDate, interval 1 day)\n  inner join Unnest (record.MpanDetails.meterId) as meter\n  inner join Unnest (meter.meterRegisterDetails) as reg\n  where lj.serviceAccountId is not null\n    and lj.lossJourneyStatus in ('Loss confirmed', 'Loss completed')\n    and d300.record.MpanDetails.mpanCoreProcess = 'D'\n\n)\n\nselect Distinct d300s_out.mpxn,\n       d300s_out.lossDate,\n       d300s_out.createdDate as originalD300CreatedDate,\n       d300s_out.toMarketParticipantID,\n       d300s_out.registerReading,\n       d300s_out.proposedRegisterReading,\n       d300s_out.additionalInformation as OriginalInfo,\n       d300s_in.createdDate as responseSarCreatedDate,\n       d300s_in.changeOfSupplierReadingRejectionCode as responseRejectionAcceptanceCode,\n       d300s_in.proposedRegisterReading as responseProposedRead,\n       d300s_in.additionalInformation as responseComments\nfrom cte_all_d300s d300s_out\nleft join `data-engineering-prod.raw_bc_ovo_applications.Dispute` drs on drs.MPAN_MPRN = d300s_out.mpxn\n                                               and cast(drs.DisputedReadDate as date) = date_add(d300s_out.lossDate, interval 1 day)\n                                               and drs.InitiatingSupplier = 'OVOE'\nleft join cte_all_d300s d300s_in on d300s_out.mpxn = d300s_in.mpxn\n                           and d300s_out.lossDate = d300s_in.lossDate\n                           and d300s_in.toMarketParticipantId = 'OVOE'\nwhere d300s_out.initiatingFlowIndicator = '1'\n  and d300s_out.fromMarketParticipantID = 'OVOE'\n  and drs.ID is null"},"data-engineering-prod:product_andromeda_secure.elec_read_disputes_raised":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.elec_read_disputes_raised","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/elec_read_disputes_raised","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/elec_read_disputes_raised","table_id":"elec_read_disputes_raised","time_partitioning":null,"view_query":"with cte_latest_state as\n(\n  select *,\n         row_number() over (partition by mpxn, disputedReadDate order by metadata.createdAt desc) as row_num\n  from `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v2`\n  where status not like 'Invalid%'\n)\n\nselect init.mpxn,\n       init.disputedReadDate,\n       init.accountNumber,\n       date_add(init.disputedReadDate, interval -1 day) as lossDate,\n       init.initiatedAt,\n       init.initiatedBy,\n       alt.alternatedAt,\n       rej.rejectedAt,\n       agr.agreedAt,\n       init.gainingSupplier,\n       init.losingSupplier,\n       s.status,\n       --s.workRequired,\n       -- We'll keep it simple in this view for PC1 at this stage\n       init.registers[offset(0)].registerId as registerId,\n       init.registers[offset(0)].disputedRead as disputedRead,\n       init.registers[offset(0)].proposedRead as proposedRead,\n       init.eventComment as disputeComment,\n       row_number() over (partition by init.mpxn, init.disputedReadDate\n                          order by init.initiatedAt asc, alt.alternatedAt desc, rej.rejectedAt desc, agr.agreedAt desc) as disputeSequence\nfrom `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_initiated` init\nleft join `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_alternated` alt on init.mpxn = alt.mpxn\n                                                                                                and init.disputedReadDate = alt.disputedReadDate\nleft join `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_rejected` rej on init.mpxn = rej.mpxn\n                                                                                              and init.disputedReadDate = rej.disputedReadDate\nleft join `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_agreed` agr on init.mpxn = agr.mpxn\n                                                                                              and init.disputedReadDate = agr.disputedReadDate\nleft join cte_latest_state s on init.mpxn = s.mpxn\n                            and init.disputedReadDate = s.disputedReadDate\n                            and s.row_num = 1"},"data-engineering-prod:product_andromeda_secure.electricity_coefficients_unrestricted_domestic":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.electricity_coefficients_unrestricted_domestic","location":"EU","num_bytes":24816,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/electricity_coefficients_unrestricted_domestic","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/electricity_coefficients_unrestricted_domestic","table_id":"electricity_coefficients_unrestricted_domestic","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.electricity_msn_non_comm_status":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.electricity_msn_non_comm_status","location":"EU","num_bytes":36196794,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/electricity_msn_non_comm_status","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/electricity_msn_non_comm_status","table_id":"electricity_msn_non_comm_status","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.end_of_contract_charging_gaps":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.end_of_contract_charging_gaps","location":"EU","num_bytes":55479,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/end_of_contract_charging_gaps","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/end_of_contract_charging_gaps","table_id":"end_of_contract_charging_gaps","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.external_reconciliation_loss_notifications":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.external_reconciliation_loss_notifications","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/external_reconciliation_loss_notifications","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/external_reconciliation_loss_notifications","table_id":"external_reconciliation_loss_notifications","time_partitioning":null,"view_query":"select case\n        when i.Utility_Type_Code = 'G' then SUBSTR(CONCAT('0000000', i.Meter_Point_No), -10)\n        else i.Meter_Point_No\n       end as mpxn,\n       so.Logged_Datetime as detectedDatetime,\n       'Gentrack' as source\nfrom `data-engineering-prod.reporting_orders.v_Service_Order` so\ninner join `data-engineering-prod.reporting_meters.v_Installation` i on cast(so.Installation_No as string) = i.Installation_No\nwhere so.Service_Order_Description in ('Loss notification received', 'Switching Loss')"},"data-engineering-prod:product_andromeda_secure.final_statement_gsop_exempt_accounts":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.final_statement_gsop_exempt_accounts","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/final_statement_gsop_exempt_accounts","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/final_statement_gsop_exempt_accounts","table_id":"final_statement_gsop_exempt_accounts","time_partitioning":null,"view_query":"WITH cte_ETs\nAS\n(\nSelect Distinct\ncast(accountNumber as string) as Account_No\nFrom `data-engineering-prod.landing_apollo_opex.he_etman_erroneousTransfer_updated_v3`\n)\n\n,cte_Read_disputes\n\nAS (\n SELECT Distinct\n Account_No\n FROM `data-engineering-prod.custom_ops_reporting.Read_Dispute_History`\n WHERE Payment_Method_Category = 'PAYM'\n \n UNION ALL\n Select Distinct\n accountNumber as Account_No\n From `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_initiated`\n \n  UNION ALL\n Select Distinct\n accountNumber as Account_No\n From `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_initiated`\n \n)\n\n,cte_occupier_account\nAS\n(\nSelect Distinct\naccountId as Account_No\nFrom `data-engineering-prod.raw_orex_secure.orex_account_state`\nwhere\nvacant = true\n)\n\nSelect\n*\nFrom\ncte_ETs\nUnion All\nSelect\n*\nFrom\ncte_Read_disputes\nUnion All\nSelect\n*\nFrom\ncte_occupier_account\n\n"},"data-engineering-prod:product_andromeda_secure.final_statement_prep":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.final_statement_prep","location":"EU","num_bytes":457455,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/final_statement_prep","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/final_statement_prep","table_id":"final_statement_prep","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.flows_denylisted":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_denylisted","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_denylisted","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_denylisted","table_id":"flows_denylisted","time_partitioning":null,"view_query":"SELECT\n  denylist.flow_md5_hash,\n  raw.flowNameNoVersion,\n  raw.rawSourceBlobPath,\n  raw.seenAt,\n  denylist.status,\n  denylist.notes\nFROM\n  `data-engineering-prod.landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1` denylist\n  LEFT JOIN\n  `data-engineering-prod.raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake` raw\n  ON\n  denylist.flow_md5_hash = raw.rawSourceBlobMd5Hash\n"},"data-engineering-prod:product_andromeda_secure.flows_denylisted_but_parsed":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_denylisted_but_parsed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_denylisted_but_parsed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_denylisted_but_parsed","table_id":"flows_denylisted_but_parsed","time_partitioning":null,"view_query":"SELECT\n  dl.flow_md5_hash,\n  dl.flowNameNoVersion,\n  dl.rawSourceBlobPath,\n  dl.status,\n  dl.notes\nFROM\n  `data-engineering-prod.product_andromeda_secure.flows_denylisted` dl\nINNER JOIN\n  `data-engineering-prod.raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed` pf\nON\n  dl.flow_md5_hash = pf.rawSourceBlobMd5Hash\n"},"data-engineering-prod:product_andromeda_secure.flows_enabled":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_enabled","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_enabled","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_enabled","table_id":"flows_enabled","time_partitioning":null,"view_query":"SELECT\n  flowNameNoVersion,\n  topic,\n  (CASE\n   WHEN topic LIKE 'flow%\\\\_%\\\\_split\\\\_v%' THEN 'split'\n   WHEN topic LIKE 'flow%.%.v%' THEN 'parsed'\n   ELSE 'UNKNOWN'\n   END) AS flowSpecies\n  FROM\n      `data-engineering-prod.landing_andromeda_secure.flows_enabled_v1`\n WHERE\n  -- NOTE disregard the counterexamples\n   flowNameNoVersion NOT IN ('gcs.raw[y]gcs.parsed[y]kfk.split[n]',\n                             'gcs.raw[y]gcs.parsed[n]kfk.parsed[n]kfk.split[n]',\n                             'gcs.raw[y]gcs.parsed[y]kfk.split[some]')\n ORDER BY\n  flowNameNoVersion\n"},"data-engineering-prod:product_andromeda_secure.flows_enabled_split":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_enabled_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_enabled_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_enabled_split","table_id":"flows_enabled_split","time_partitioning":null,"view_query":"SELECT\n  flowNameNoVersion,\n  topic\n  FROM\n      `data-engineering-prod.product_andromeda_secure.flows_enabled`\n WHERE\n   flowSpecies = 'split'\n"},"data-engineering-prod:product_andromeda_secure.flows_last_seen":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_last_seen","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_last_seen","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_last_seen","table_id":"flows_last_seen","time_partitioning":null,"view_query":"SELECT\n  flowNameNoVersion,\n  DATE_DIFF(CURRENT_DATE(), DATE(MAX(seenOnKafka)), DAY) AS daysSinceLastSeenOnKafka,\n  MAX(seenOnKafka) AS lastSeenOnKafka,\n  DATE_DIFF(DATE(MAX(seenOnDataLake)), DATE(MAX(seenOnKafka)), DAY) AS dataLakeToKafkaLatency,\n  MAX(seenOnDataLake) AS lastSeenOnDataLake\nFROM `data-engineering-prod.product_andromeda_secure.flows_reconciliation_status`\nGROUP BY flowNameNoVersion\nORDER BY flowNameNoVersion\n"},"data-engineering-prod:product_andromeda_secure.flows_parsed_not_seen_on_gcs":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_parsed_not_seen_on_gcs","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_parsed_not_seen_on_gcs","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_parsed_not_seen_on_gcs","table_id":"flows_parsed_not_seen_on_gcs","time_partitioning":null,"view_query":"WITH\n  recon_status AS (\n    SELECT\n      raw.flowNameNoVersion,\n      raw.rawSourceBlobMd5Hash,\n      raw.rawSourceBlobPath,\n      PARSE_DATE(\"%Y\/%m\/%d\",REGEXP_EXTRACT(raw.rawSourceBlobPath, r\"[0-9]{4}\\\/[0-9]{2}\\\/[0-9]{2}\")) AS flow_receipt_date,\n      LOGICAL_AND(CASE\n          WHEN pf.rawSourceBlobMd5Hash IS NOT NULL THEN TRUE\n          ELSE FALSE END) AS parsedFlow_seen_on_gcs,\n      MAX(raw.seenAt) AS seenAt,\n      MAX(fbd.backfillDate) AS backfillDate,\n    FROM\n      `data-engineering-prod.raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake` raw\n    LEFT JOIN\n      `data-engineering-prod.raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed` pf\n    ON\n      raw.rawSourceBlobMd5Hash = pf.rawSourceBlobMd5Hash\n    LEFT JOIN\n      `data-engineering-prod.landing_andromeda_secure.flow_backfill_dates_v1` fbd\n    ON\n      raw.flowNameNoVersion = fbd.flowNameNoVersion\n    GROUP BY\n      raw.flowNameNoVersion,\n      raw.rawSourceBlobMd5Hash,\n      raw.rawSourceBlobPath )\n\nSELECT\n  flowNameNoVersion,\n  rawSourceBlobMd5Hash,\n  rawSourceBlobPath,\n  seenAt,\n  flow_receipt_date,\n  backfillDate\nFROM recon_status\nWHERE parsedFlow_seen_on_gcs = FALSE\nAND rawSourceBlobMd5Hash NOT IN (SELECT flow_md5_hash FROM `data-engineering-prod.landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1`)\nAND flowNameNoVersion IN (SELECT flowNameNoVersion FROM `data-engineering-prod.landing_andromeda_secure.flows_enabled_v1`)\nAND (date_diff(flow_receipt_date, backfillDate, day) >= 0 OR backfillDate IS NULL)\n"},"data-engineering-prod:product_andromeda_secure.flows_parsed_not_seen_on_kafka":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_parsed_not_seen_on_kafka","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_parsed_not_seen_on_kafka","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_parsed_not_seen_on_kafka","table_id":"flows_parsed_not_seen_on_kafka","time_partitioning":null,"view_query":"WITH\n  enabled_parsed_flows AS (\n    SELECT flowNameNoVersion, topic\n    FROM `data-engineering-prod.landing_andromeda_secure.flows_enabled_v1`\n    WHERE topic LIKE 'flow%.%.v%' OR\n          topic = 'gcs.raw[y]gcs.parsed[y]kfk.split[n]'),\n  parsed_flows AS (\n    SELECT\n      *\n    FROM\n      `data-engineering-prod.raw_andromeda_secure.flows_parsed_flow_seen_on_kafka`\n    WHERE\n      kafka.topic IN (SELECT topic FROM enabled_parsed_flows)),\n  raw_flows AS (\n    SELECT\n      raw.*,\n      PARSE_DATE(\"%Y\/%m\/%d\",REGEXP_EXTRACT(raw.rawSourceBlobPath, r\"[0-9]{4}\\\/[0-9]{2}\\\/[0-9]{2}\")) AS flow_receipt_date,\n      fbd.backfillDate AS backfillDate,\n    FROM\n      `data-engineering-prod.raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake` raw\n    LEFT JOIN\n      `data-engineering-prod.landing_andromeda_secure.flow_backfill_dates_v1` fbd\n    ON\n      raw.flowNameNoVersion = fbd.flowNameNoVersion\n    WHERE\n      raw.flowNameNoVersion IN (SELECT flowNameNoVersion FROM enabled_parsed_flows)\n    AND\n      raw.rawSourceBlobMd5Hash NOT IN (SELECT flow_md5_hash FROM `data-engineering-prod.landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1`))\nSELECT\n  r.flowNameNoVersion,\n  r.rawSourceBlobPath,\n  r.rawSourceBlobMd5Hash,\n  r.seenAt\nFROM raw_flows r\nLEFT JOIN parsed_flows p\nON r.rawSourceBlobMd5Hash = p.rawSourceBlobMd5Hash\nWHERE p.rawSourceBlobMd5Hash IS NULL\nAND (date_diff(flow_receipt_date, backfillDate, day) >= 0 OR backfillDate IS NULL)\n"},"data-engineering-prod:product_andromeda_secure.flows_raw_not_seen_on_gcs":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_raw_not_seen_on_gcs","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_raw_not_seen_on_gcs","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_raw_not_seen_on_gcs","table_id":"flows_raw_not_seen_on_gcs","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rawFlow_seen_on_gcs)\nFROM (\n  SELECT\n    pf.flowNameNoVersion,\n    pf.rawSourceBlobMd5Hash,\n    pf.rawSourceBlobPath,\n    LOGICAL_AND(CASE\n        WHEN raw.rawSourceBlobMd5Hash IS NOT NULL THEN TRUE\n        ELSE FALSE END) AS rawFlow_seen_on_gcs,\n    MAX(pf.seenAt) as seenAt\n  FROM\n      `data-engineering-prod.raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed` pf\n  LEFT JOIN\n      `data-engineering-prod.raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake` raw\n  ON\n    raw.rawSourceBlobMd5Hash = pf.rawSourceBlobMd5Hash\n  GROUP BY\n    pf.flowNameNoVersion,\n    pf.rawSourceBlobMd5Hash,\n    pf.rawSourceBlobPath\n  )\nWHERE\n  rawFlow_seen_on_gcs = FALSE\n"},"data-engineering-prod:product_andromeda_secure.flows_reconciliation_status":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_reconciliation_status","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_reconciliation_status","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_reconciliation_status","table_id":"flows_reconciliation_status","time_partitioning":null,"view_query":"SELECT\n  r.flowNameNoVersion,\n  r.rawSourceBlobPath,\n  r.rawSourceBlobMd5Hash,\n  MAX(p.rootGroupsCount) AS splitFlowRecord_expected_count,\n  SUM(CASE WHEN s.flowRecordId IS NOT NULL THEN 1 ELSE 0 END) AS splitFlowRecord_seen_on_kafka_count,\n  MAX(r.seenAt) AS seenOnDataLake,\n  MAX(s.kafkaData.insertTime) AS seenOnKafka,\n  ANY_VALUE(p.parsedBlobPath) AS parsedBlobPath\nFROM `data-engineering-prod.raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake` r\nLEFT JOIN `data-engineering-prod.raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed` p\n       ON r.rawSourceBlobMd5Hash = p.rawSourceBlobMd5Hash\nLEFT JOIN `data-engineering-prod.raw_andromeda_secure.flows_split_flow_record_seen_on_kafka` s\n       ON r.rawSourceBlobMd5Hash = s.rawSourceBlobMd5Hash\nWHERE   r.flowNameNoVersion IN (SELECT flowNameNoVersion FROM `data-engineering-prod.product_andromeda_secure.flows_enabled` WHERE flowSpecies = 'split')\n  AND r.rawSourceBlobMd5Hash NOT IN (SELECT flow_md5_hash FROM `data-engineering-prod.landing_andromeda_secure.flows_blacklisted_flow_md5_hash_v1`)\n  AND r.seenAt < TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\n  AND r.seenAt > TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 28 DAY)\nGROUP BY r.flowNameNoVersion, r.rawSourceBlobMd5Hash, r.rawSourceBlobPath\n"},"data-engineering-prod:product_andromeda_secure.flows_reconciliation_status_aggregate":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_reconciliation_status_aggregate","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_reconciliation_status_aggregate","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_reconciliation_status_aggregate","table_id":"flows_reconciliation_status_aggregate","time_partitioning":null,"view_query":"SELECT\n  SUM(IF(splitFlowRecord_expected_count IS NULL, splitFlowRecord_seen_on_kafka_count, splitFlowRecord_expected_count)) AS expected,\n  SUM(splitFlowRecord_seen_on_kafka_count) AS seenOnKafka,\n  flowNameNoVersion\nFROM `data-engineering-prod.product_andromeda_secure.flows_reconciliation_status`\nGROUP BY flowNameNoVersion\n"},"data-engineering-prod:product_andromeda_secure.flows_split_consolidated_records_not_seen_on_kafka":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_split_consolidated_records_not_seen_on_kafka","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_split_consolidated_records_not_seen_on_kafka","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_split_consolidated_records_not_seen_on_kafka","table_id":"flows_split_consolidated_records_not_seen_on_kafka","time_partitioning":null,"view_query":"WITH\n  enabled_split_flows AS (\n  SELECT\n    flowNameNoVersion,\n    topic\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_enabled_v1`\n  WHERE\n    topic LIKE 'flow%\\\\_%\\\\_split\\\\_consolidated\\\\_v%'\n    OR topic = 'gcs.raw[y]kfk.parsed[n]kfk.split[n]'\n    OR topic = 'gcs.raw[y]kfk.split[some]'\n    OR topic = 'gcs.raw[y]kfk.split[n]'),\n  split_flows AS (\n  SELECT\n    *\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flows_split_consolidated_flow_record_seen_on_kafka`\n  WHERE\n    kafka.topic IN (\n    SELECT\n      topic\n    FROM\n      enabled_split_flows)\n  AND\n    sourceBucket = 'SPARK'),\n  uncategorised_flows AS (\n  SELECT\n    *\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake`\n  WHERE\n    rawSourceBlobMd5Hash NOT IN (SELECT flow_md5_hash FROM `data-engineering-prod.landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1`)\n  AND\n    sourceBucket = 'SPARK'),\n  raw_flows AS (\n  SELECT\n    *\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake`\n  WHERE\n    flowNameNoVersion IN (SELECT flowNameNoVersion FROM enabled_split_flows)\n  AND\n    rawSourceBlobMd5Hash NOT IN (SELECT flow_md5_hash FROM `data-engineering-prod.landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1`)\n  AND\n    sourceBucket = 'SPARK'),\n  recon_status AS (\n  SELECT\n    r.flowNameNoVersion,\n    u.rawSourceBlobPath AS uncategorisedBlobPath,\n    r.rawSourceBlobPath,\n    r.rawSourceBlobMd5Hash,\n    PARSE_DATE(\"%Y\/%m\/%d\",REGEXP_EXTRACT(r.rawSourceBlobPath, r\"[0-9]{4}\\\/[0-9]{2}\\\/[0-9]{2}\")) AS flow_receipt_date,\n    MAX(s.rawSourceRecordsCount) AS splitFlowRecord_expected_count,\n    SUM(CASE\n        WHEN s.flowRecordId IS NOT NULL THEN 1\n        ELSE 0 END) AS splitFlowRecord_seen_on_kafka_count,\n    MAX(fbd.backfillDate) AS backfillDate,\n    MAX(r.seenAt) AS seenAt\n  FROM\n    uncategorised_flows u\n  JOIN\n    raw_flows r\n  ON\n    u.rawSourceBlobMd5Hash = r.rawSourceBlobMd5Hash\n  LEFT JOIN\n    split_flows s\n  ON\n    u.rawSourceBlobMd5Hash = s.rawSourceBlobMd5Hash\n  LEFT JOIN\n    `data-engineering-prod.landing_andromeda_secure.flow_backfill_dates_v1` fbd\n  ON\n    r.flowNameNoVersion = fbd.flowNameNoVersion\n  GROUP BY\n    u.rawSourceBlobPath,\n    r.flowNameNoVersion,\n    r.rawSourceBlobMd5Hash,\n    r.rawSourceBlobPath)\nSELECT\n  ABS(splitFlowRecord_expected_count - splitFlowRecord_seen_on_kafka_count) AS count_diff,\n  *\nFROM recon_status\nWHERE (splitFlowRecord_expected_count != splitFlowRecord_seen_on_kafka_count OR splitFlowRecord_expected_count IS NULL)\nAND seenAt < TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\nAND (date_diff(flow_receipt_date, backfillDate, day) >= 0 OR backfillDate IS NULL)\n"},"data-engineering-prod:product_andromeda_secure.flows_split_records_not_seen_on_kafka":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.flows_split_records_not_seen_on_kafka","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_split_records_not_seen_on_kafka","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/flows_split_records_not_seen_on_kafka","table_id":"flows_split_records_not_seen_on_kafka","time_partitioning":null,"view_query":"WITH\n  enabled_split_flows AS (\n    SELECT\n      flowNameNoVersion, topic\n    FROM\n      `data-engineering-prod.landing_andromeda_secure.flows_enabled_v1`\n    WHERE\n      topic LIKE 'flow%\\\\_%\\\\_split\\\\_v%' OR\n      topic = 'gcs.raw[y]gcs.parsed[y]kfk.split[n]' OR\n      topic = 'gcs.raw[y]gcs.parsed[y]kfk.split[some]'),\n  split_flows AS (\n    SELECT\n      *\n    FROM\n      `data-engineering-prod.raw_andromeda_secure.flows_split_flow_record_seen_on_kafka`\n    WHERE\n      kafka.topic IN (\n      SELECT\n        topic\n      FROM\n        enabled_split_flows)),\n  raw_flows AS (\n    SELECT\n      *\n    FROM\n      `data-engineering-prod.raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake`\n    WHERE\n      flowNameNoVersion IN (SELECT flowNameNoVersion FROM enabled_split_flows)\n    AND\n      rawSourceBlobMd5Hash NOT IN (SELECT flow_md5_hash FROM `data-engineering-prod.landing_andromeda_secure.flows_denylisted_flow_md5_hash_v1`)),\n  recon_status AS (\n    SELECT\n      r.flowNameNoVersion,\n      r.rawSourceBlobPath,\n      r.rawSourceBlobMd5Hash,\n      PARSE_DATE(\"%Y\/%m\/%d\",REGEXP_EXTRACT(r.rawSourceBlobPath, r\"[0-9]{4}\\\/[0-9]{2}\\\/[0-9]{2}\")) AS flow_receipt_date,\n      MAX(p.rootGroupsCount) AS splitFlowRecord_expected_count,\n      SUM(CASE\n          WHEN s.flowRecordId IS NOT NULL THEN 1\n          ELSE 0 END) AS splitFlowRecord_seen_on_kafka_count,\n      MAX(r.seenAt) AS seenAt,\n      MAX(fbd.backfillDate) AS backfillDate,\n      ANY_VALUE(p.parsedBlobPath) AS parsedBlobPath\n    FROM\n      raw_flows r\n    LEFT JOIN\n      `data-engineering-prod.raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed` p\n    ON\n      r.rawSourceBlobMd5Hash = p.rawSourceBlobMd5Hash\n    LEFT JOIN\n      split_flows s\n    ON\n      r.rawSourceBlobMd5Hash = s.rawSourceBlobMd5Hash\n    LEFT JOIN\n      `data-engineering-prod.landing_andromeda_secure.flow_backfill_dates_v1` fbd\n    ON\n      r.flowNameNoVersion = fbd.flowNameNoVersion\n    GROUP BY\n      r.flowNameNoVersion,\n      r.rawSourceBlobMd5Hash,\n      r.rawSourceBlobPath)\nSELECT\n  ABS(splitFlowRecord_expected_count - splitFlowRecord_seen_on_kafka_count) AS count_diff,\n  *\nFROM recon_status\nWHERE (splitFlowRecord_expected_count != splitFlowRecord_seen_on_kafka_count OR splitFlowRecord_expected_count is NULL)\nAND seenAt < TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)\nAND (date_diff(flow_receipt_date, backfillDate, day) >= 0 OR backfillDate IS NULL)\n"},"data-engineering-prod:product_andromeda_secure.gas_msn_non_comm_status":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.gas_msn_non_comm_status","location":"EU","num_bytes":31471275,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/gas_msn_non_comm_status","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/gas_msn_non_comm_status","table_id":"gas_msn_non_comm_status","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.gas_read_disputes_raised":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.gas_read_disputes_raised","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/gas_read_disputes_raised","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/gas_read_disputes_raised","table_id":"gas_read_disputes_raised","time_partitioning":null,"view_query":"with cte_all_sars as\n(\n  select lj.mpxn,\n         lj.lossDate,\n         parse_date('%Y%m%d', sar.header.createdDate) as createdDate,\n         sar.record.SarGroup.initiatingOrganisationId,\n         sar.header.originatorId,\n         sar.header.recipientId,\n         sar.record.SarGroup.referenceNumber,\n         record.SarGroup.transporterRead,\n         sar.record.SarGroup.statusResponseSar,\n         sar.record.SarGroup.recordRejectionAcceptanceCode,\n         sar.record.SarGroup.proposedRead,\n         sar.record.SarGroup.comments\n  from `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed` lj\n  inner join `data-engineering-prod.raw_andromeda_secure.flow_SAR_split` sar on lj.mpxn = sar.record.SarGroup.meterPointReference\n                                                      and safe.parse_date('%Y%m%d', record.SarGroup.dateOfTransfer) = date_add(lj.lossDate, interval 1 day)\n  where lj.serviceAccountId is not null\n    and lj.lossJourneyStatus in ('Loss confirmed', 'Loss completed')\n),\ncte_original_sars as\n(\n  select mpxn,\n         lossDate,\n         min(createdDate) as originalSarCreatedDate\n  from cte_all_sars\n  group by mpxn,\n           lossDate\n),\ncte_latest_state as\n(\n  select *,\n         row_number() over (partition by mpxn, disputedReadDate order by metadata.createdAt desc) as row_num\n  from `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_state_v2`\n  where status not like 'Invalid%'\n)\nselect init.mpxn,\n       date_add(init.disputedReadDate, interval -1 day) as lossDate, -- backwards compatibility\n       init.disputedReadDate,\n       init.accountNumber,\n       init.initiatedAt,\n       init.initiatedBy,\n       coalesce(sar.originalSarCreatedDate,cast(init.initiatedAt as date)) as originalSarCreatedDate, -- backwards compatibility\n       init.gainingSupplier,\n       init.losingSupplier,\n       init.gainingSupplier as recipientId, -- backwards compatibility\n       init.sarReferenceNumber,\n       init.sarReferenceNumber as referenceNumber, -- backwards compatibility\n       init.disputedRead,\n       init.disputedRead as transporterRead, -- backwards compatibility\n       init.proposedRead,\n       init.eventComment as disputeComment,\n       init.eventComment as originalComments, -- backwards compatibility\n       s.status,\n       agr.agreedRead,\n       agr.agreedAt as agreedAt,\n       rej.rejectionCode,\n       rej.responseComment as rejectedComment,\n       rej.rejectedAt as rejectedAt,\n       alt.alternateProposedRead,\n       alt.alternatedAt,\n       alt.eventComment as alternatedComment,\n       coalesce(cast(alt.alternatedAt as date), cast(agr.agreedAt as date), cast(rej.rejectedAt as date)) as responseSarCreatedDate,\n       coalesce(case when alt.mpxn is not null then 'A' end, case when agr.mpxn is not null then 'Y' end, case when rej.mpxn is not null then 'P' end) as responseStatus,\n       rej.rejectionCode as responseRejectionAcceptanceCode,\n       coalesce(alt.alternateProposedRead, agr.agreedRead, rej.proposedRead) as responseProposedRead,\n       coalesce(alt.eventComment, rej.responseComment) as responseComments,\n       case when agr.agreedAt > alt.alternatedAt then cast(agr.agreedAt as date) end as alternationAcceptanceCreatedDate,\n       row_number() over (partition by init.mpxn, init.disputedReadDate order by init.initiatedAt asc) as disputeSequence\nfrom `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_initiated` init\nleft join cte_original_sars sar on init.mpxn = sar.mpxn\n                               and date_add(init.disputedReadDate, interval -1 day) = sar.lossDate\nleft join `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_agreed` agr on init.mpxn = agr.mpxn\n                                                              and init.disputedReadDate = agr.disputedReadDate\nleft join `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_rejected` rej on init.mpxn = rej.mpxn\n                                                              and init.disputedReadDate = rej.disputedReadDate\nleft join `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_alternated` alt on init.mpxn = alt.mpxn\n                                                              and init.disputedReadDate = alt.disputedReadDate\nleft join cte_latest_state s on init.mpxn = s.mpxn\n                            and init.disputedReadDate = s.disputedReadDate\n                            and s.row_num = 1"},"data-engineering-prod:product_andromeda_secure.gas_settlement_gap_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.gas_settlement_gap_snapshots","location":"EU","num_bytes":13666921598,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/gas_settlement_gap_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/gas_settlement_gap_snapshots","table_id":"gas_settlement_gap_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.health_check_charge_mandates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_charge_mandates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_charge_mandates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_charge_mandates","table_id":"health_check_charge_mandates","time_partitioning":null,"view_query":"with cte_health_check_flags as\n(\n  select mpxn,\n         fuel,\n         andromedaMigrationDate,\n         min(startDate) as chargeMandateStartDate,\n         min(has_valid_unit_rate) as has_valid_unit_rates,\n         min(has_valid_standing_charge_rate) as has_valid_standing_charge_rates,\n         min(has_no_overlapping_charge_mandates) as has_no_overlapping_charge_mandates\n  from `data-engineering-prod.product_andromeda_secure.health_check_charge_mandates_detail`\n  group by mpxn,\n           fuel,\n           andromedaMigrationDate\n)\nselect *,       \n       CASE\n        WHEN (has_valid_unit_rates = 0\n           OR has_valid_standing_charge_rates = 0\n           OR has_no_overlapping_charge_mandates = 0)\n        THEN 'Unhealthy'\n        ELSE 'Healthy'\n       END as overallChargeMandateHealth\nfrom cte_health_check_flags"},"data-engineering-prod:product_andromeda_secure.health_check_charge_mandates_detail":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_charge_mandates_detail","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_charge_mandates_detail","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_charge_mandates_detail","table_id":"health_check_charge_mandates_detail","time_partitioning":null,"view_query":"with cte_charge_mandate_checks as\n(\n  select ec.contractId,\n         ec.mpxn,\n         ec.fuel,\n         ec.startDate,\n         sp.andromedaMigrationDate,\n         case when ec.currentUnitRate > 0 then 1 else 0 end as has_valid_unit_rate, -- Simple check on it being greater than zero for now, in due course we might want to check vs. tariff rates if we store them in Andromeda\n         case when ec.currentStandingRate > 0 then 1 else 0 end as has_valid_standing_charge_rate,\n         case when sum(case when overlap.contractId is not null then 1 else 0 end) = 0 then 1 else 0 end as has_no_overlapping_charge_mandates,\n         sum(case when overlap.contractId is not null then 1 else 0 end) as overlappingChargeMandatesCount,\n         min(overlap.contractId) as overlappingContractId\n  from `data-engineering-prod.product_andromeda_secure.supply_points` sp\n  inner join `data-engineering-prod.product_andromeda_secure.contracts` ec on sp.mpxn = ec.mpxn\n  left join `data-engineering-prod.product_andromeda_secure.contracts` overlap on ec.mpxn = overlap.mpxn\n                                                                                                    and ec.contractId <> overlap.contractId\n                                                                                                    and (overlap.startDate between ec.startDate and ec.endDate\n                                                                                                      OR overlap.endDate between ec.startDate and ec.endDate)\n  group by ec.contractId,\n           ec.mpxn,\n           ec.fuel,\n           ec.startDate,\n           sp.andromedaMigrationDate,\n           ec.currentUnitRate,\n           ec.currentStandingRate\n)\nselect *\nfrom cte_charge_mandate_checks"},"data-engineering-prod:product_andromeda_secure.health_check_charge_mandates_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_charge_mandates_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_charge_mandates_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_charge_mandates_snapshots","table_id":"health_check_charge_mandates_snapshots","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.u_peter_grace.health_check_charge_mandates_snapshots`"},"data-engineering-prod:product_andromeda_secure.health_check_erroneous_charging":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_erroneous_charging","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_erroneous_charging","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_erroneous_charging","table_id":"health_check_erroneous_charging","time_partitioning":null,"view_query":"with cte_health_check_flags as\n(\n  select sp.mpxn,\n         sp.fuel,\n         sp.andromedaMigrationDate,\n         sp.chargeMandateStatus,\n         MIN(is_linked_to_active_charge_mandate) as has_all_charges_linked_to_active_charge_mandate,\n         MIN(is_within_charge_mandate_dates) as has_all_charges_within_charge_mandate_dates,\n         min(has_consumption_for_consumption_charge) as has_consumption_for_all_consumption_charges\n  from `data-engineering-prod.product_andromeda_secure.supply_points` sp -- Use all supply points as base even if they have no charges\n  left join `data-engineering-prod.product_andromeda_secure.health_check_erroneous_charging_detail` ec on sp.mpxn = ec.mpxn\n  where sp.chargeMandateStatus is not null -- Include everything including historic and cancelled\n  group by sp.mpxn,\n           sp.fuel,\n           sp.andromedaMigrationDate,\n           sp.chargeMandateStatus\n)\nselect *,\n       CASE\n        WHEN (has_all_charges_linked_to_active_charge_mandate = 0\n           OR has_all_charges_within_charge_mandate_dates = 0\n           OR has_consumption_for_all_consumption_charges = 0)\n        THEN 'Error'\n        ELSE 'Healthy'\n       END as overallErroneousChargingHealth\nfrom cte_health_check_flags"},"data-engineering-prod:product_andromeda_secure.health_check_erroneous_charging_detail":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_erroneous_charging_detail","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_erroneous_charging_detail","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_erroneous_charging_detail","table_id":"health_check_erroneous_charging_detail","time_partitioning":null,"view_query":"with cte_combined_charges as\n(\n  select cc.mpxn,\n         cc.contract_id,\n         cc.charge_id,\n         cc.Charge_From_Date,\n         cc.Charge_To_Date,\n         cc.charge_type\n  from `data-engineering-prod.product_andromeda_secure.consumption_charges` cc\n  union all\n  select sc.mpxn,\n         sc.contract_id,\n         sc.charge_id,\n         sc.Charge_From_Date,\n         sc.Charge_To_Date,\n         sc.charge_type\n  from `data-engineering-prod.product_andromeda_secure.standing_charges` sc\n)\nselect cc.*,\n       sp.fuel,\n       sp.andromedaMigrationDate,\n       sp.chargeMandateStatus,\n       ec.startDate as chargeMandateStartDate,\n       ec.endDate as chargeMandateEndDate,\n       case when ec.contractId is NOT NULL then 1 else 0 END as is_linked_to_active_charge_mandate,\n       case\n        when cast(charge_from_date as date) between ec.startDate and ec.endDate\n         AND cast(charge_to_date as date) between ec.startDate and date_add(ec.endDate, interval 1 DAY) then 1 -- Add a day on to endDate as the charge_to would be midnight \n        WHEN ec.contractId is null then 1 -- Don't fail this if the active charge mandate has already failed\n        ELSE 0\n       END as is_within_charge_mandate_dates,\n       CASE\n        WHEN cc.charge_type = 'standing_charge' then 1\n        when c.consumptionId is not null then 1\n        else 0\n       end as has_consumption_for_consumption_charge\nfrom `data-engineering-prod.product_andromeda_secure.supply_points` sp\ninner join cte_combined_charges cc on sp.mpxn = cc.mpxn\nleft join `data-engineering-prod.product_andromeda_secure.contracts` ec on cc.contract_id = ec.contractId\nleft join `data-engineering-prod.product_andromeda_secure.consumption_blocks` c on cc.mpxn = c.mpxn\n                                                                               AND cast(cc.Charge_From_Date as date) = c.fromDate\nwhere sp.chargeMandateStatus is not null -- Include everything including historic and cancelled"},"data-engineering-prod:product_andromeda_secure.health_check_erroneous_charging_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_erroneous_charging_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_erroneous_charging_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_erroneous_charging_snapshots","table_id":"health_check_erroneous_charging_snapshots","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.u_peter_grace.health_check_erroneous_charging_snapshots`"},"data-engineering-prod:product_andromeda_secure.health_check_expected_consumption_and_charges":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_expected_consumption_and_charges","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_consumption_and_charges","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_consumption_and_charges","table_id":"health_check_expected_consumption_and_charges","time_partitioning":null,"view_query":"with cte_health_check_flags as\n(\n  select mpxn,\n         andromedaMigrationDate,\n         fuel,\n         min(case when consumptionPeriodContext = 'Pre-Migration' then consumptionCount END) as has_no_pre_migration_consumption_gaps,\n         min(case when consumptionPeriodContext = 'Since Migration' then consumptionCount END) as has_no_consumption_gaps_since_migration_up_to_latest_consumption_date,\n         case when max(consumptionCount) > 1 then 0 else 1 end as has_no_more_than_1_consumption_per_day,\n         case\n          when sum(case when consumptionPeriodContext = 'Pre-Migration' then consumptionCount END) <> sum(case when consumptionPeriodContext = 'Pre-Migration' then chargeCount END) then 0\n          else 1\n         end as has_exactly_1_charge_per_day_of_pre_migration_consumption_block,\n         case\n          when sum(case when consumptionPeriodContext = 'Since Migration' then consumptionCount END) <> sum(case when consumptionPeriodContext = 'Since Migration' then chargeCount END) then 0\n          else 1\n         end as has_exactly_1_charge_per_day_of_consumption_block_since_migration,\n         MIN(has_charge_consumption_kwh_matching_rac_consumption_kwh) AS has_charge_consumption_kwh_matching_rac_consumption_kwh,\n         MIN(has_charge_unit_rate_matching_contract_unit_rate) as has_all_charge_unit_rates_matching_charge_mandate_unit_rate,\n         case\n          when sum(case when consumptionPeriodContext = 'Missing Consumption Period' then 1 else 0 end) <= 3 then 1\n          else 0\n         end has_consumption_up_to_at_least_3_days_ago,\n         case\n          when sum(case when consumptionPeriodContext = 'Missing Consumption Period' then 1 else 0 end) = 0 then 1\n          else 0\n         end as has_consumption_for_yesterday\n  from `data-engineering-prod.product_andromeda_secure.health_check_expected_consumption_and_charges_detail` \n  group by mpxn,\n           andromedaMigrationDate,\n           fuel\n)\nselect *,\n       CASE\n        WHEN (has_no_pre_migration_consumption_gaps = 0\n           OR has_no_consumption_gaps_since_migration_up_to_latest_consumption_date = 0\n           OR has_no_more_than_1_consumption_per_day = 0\n           OR has_exactly_1_charge_per_day_of_pre_migration_consumption_block = 0\n           OR has_exactly_1_charge_per_day_of_consumption_block_since_migration = 0\n           OR has_charge_consumption_kwh_matching_rac_consumption_kwh = 0\n           OR has_all_charge_unit_rates_matching_charge_mandate_unit_rate = 0)\n         THEN 'Errors Found'\n         WHEN (has_consumption_up_to_at_least_3_days_ago = 0)\n         THEN 'Unhealthy'\n         WHEN (has_consumption_for_yesterday = 0)\n         THEN 'Warning'\n         ELSE 'Healthy'\n        END as overallConsumptionAndChargeHealth\nfrom cte_health_check_flags\norder by andromedaMigrationDate desc"},"data-engineering-prod:product_andromeda_secure.health_check_expected_consumption_and_charges_detail":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_expected_consumption_and_charges_detail","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_consumption_and_charges_detail","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_consumption_and_charges_detail","table_id":"health_check_expected_consumption_and_charges_detail","time_partitioning":null,"view_query":"-- Expected Consumption by Day Business Logic\nwith cte_contract_and_consumption_context_dates as (\n  SELECT ec.contractId,\n         ec.mpxn,\n         ec.fuel,\n         ec.currentUnitRate as unitRate, -- This will stop working once we do variable price changes.  Will need to change the grain\n         ec.startDate as chargeMandateStartDate,\n         ec.latestCreatedEventTime as chargeMandateCreatedTime,\n         sp.andromedaMigrationDate,\n         max(cast(c.toDateTime as date)) as latestConsumptionToDate,\n         case when ec.endDate < CURRENT_DATE() then ec.endDate else date_add(current_Date(), interval -1 DAY) end as expectingConsumptionToDate -- Last day of consumption would be yesterday or the day before end date\n  FROM `data-engineering-prod.product_andromeda_secure.contracts` ec\n  left join `data-engineering-prod.product_andromeda_secure.supply_points` sp on ec.mpxn = sp.mpxn\n  LEFT join `data-engineering-prod.product_andromeda_secure.consumption_blocks` c on ec.mpxn = c.mpxn\n  group by ec.contractId,\n           ec.mpxn,\n           ec.fuel,\n           ec.currentUnitRate,\n           ec.startDate,\n           ec.latestCreatedEventTime,\n           sp.andromedaMigrationDate,\n           case when ec.endDate < CURRENT_DATE() then ec.endDate else date_add(current_Date(), interval -1 DAY) end\n),\n\ncte_expected_consumption_dates as (\n  select ccc.contractId,\n         ccc.mpxn,\n         ccc.fuel,\n         ccc.unitRate,\n         ccc.andromedaMigrationDate,\n         ccc.chargeMandateCreatedTime,\n         d.Calendar_Date as expectedConsumptionDate,\n         case when d.Calendar_Date between ccc.chargeMandateStartDate and date_add(ccc.andromedaMigrationDate, interval -1 DAY) then 'Pre-Migration'\n              WHEN d.Calendar_Date between ccc.andromedaMigrationDate and date_add(latestConsumptionToDate, interval -1 DAY) then 'Since Migration'\n              when d.Calendar_Date >= latestConsumptionToDate then 'Missing Consumption Period'\n         END as consumptionPeriodContext\n  from cte_contract_and_consumption_context_dates ccc\n  inner join `data-engineering-prod.raw_mis.Reference_dim_Date` d on d.Calendar_Date between chargeMandateStartDate and expectingConsumptionToDate\n                                                                 and d.Calendar_Date < current_date()\n                                                                 and d.Calendar_Date >= '2018-03-01'\n),\n\ncte_expected_consumption_check_data as (\n  select ecd.contractId,\n         ecd.mpxn,\n         ecd.fuel,\n         ecd.unitRate,\n         ecd.andromedaMigrationDate,\n         ecd.chargeMandateCreatedTime,\n         ecd.expectedConsumptionDate,\n         ecd.consumptionPeriodContext,\n         sum(IF(IF(LENGTH(cc.mpxn) = 13, cc.tiers, NULL) is not null, 1, 0)) as consumptionCount_E, \n         sum(IF(IF(LENGTH(cc.mpxn) = 10, cc.consumption, NULL) is not null, 1, 0)) as consumptionCount_G, \n         --min(consumptionId) as consumptionId, -- Field no longer exists\n         sum(cc.consumption) as consumptionKwh\n  from cte_expected_consumption_dates ecd\n  left join `data-engineering-prod.product_andromeda_secure.consumption_blocks` cc on ecd.mpxn = cc.mpxn\n                                                                         AND ecd.expectedConsumptionDate between cc.fromDate and date_add(cc.toDate, interval -1 DAY)\n  group by ecd.contractId,\n           ecd.mpxn,\n           ecd.fuel,\n           ecd.unitRate,\n           ecd.andromedaMigrationDate,\n           ecd.chargeMandateCreatedTime,\n           ecd.expectedConsumptionDate,\n           ecd.consumptionPeriodContext\n)\n\nselect ecc.contractId,\n       ecc.mpxn,\n       ecc.fuel,\n       ecc.unitRate as chargeMandateUnitRate,\n       ecc.andromedaMigrationDate,\n       ecc.expectedConsumptionDate,\n       ecc.consumptionPeriodContext,\n       ecc.consumptionCount_E + ecc.consumptionCount_G as consumptionCount, \n       --ecc.consumptionId, -- Field no longer exists\n       ecc.consumptionKwh,\n       min(cc.charge_id) as chargeId,\n       sum(case when cc.charge_id is not null then 1 else 0 end) as chargeCount,\n       sum(cc.consumption) as chargeConsumptionKwh,\n       CASE WHEN min(charge_id) IS NOT NULL and ecc.consumptionKwh <> sum(cc.consumption) THEN 0 ELSE 1 end as has_charge_consumption_kwh_matching_rac_consumption_kwh, -- only fail this one if there are charges\n       case when min(cc.unit_rate) <> ecc.unitRate then 0 else 1 end as has_charge_unit_rate_matching_contract_unit_rate,\n       case\n        when ecc.expectedConsumptionDate >= ecc.AndromedaMigrationDate and min(cc.charge_first_created_time) is null\n        then 9999\n        when ecc.expectedConsumptionDate > cast(ecc.chargeMandateCreatedTime as date)\n        THEN datetime_diff(CAST(min(cc.charge_first_created_time) as DATETIME), cast(date_add(ecc.expectedConsumptionDate, interval 1 DAY) as DATETIME), MINUTE)\n       END as totalMinutesToProduceCharge\nfrom cte_expected_consumption_check_data ecc\nLEFT JOIN `data-engineering-prod.product_andromeda_secure.consumption_charges` cc on ecc.mpxn = cc.mpxn\n                                                                               AND ecc.expectedConsumptionDate BETWEEN cast(Charge_From_Date as date) and DATE_ADD(cast(Charge_To_Date as date), INTERVAL -1 DAY)\ngroup by ecc.contractId,\n         ecc.mpxn,\n         ecc.fuel,\n         ecc.unitRate,\n         ecc.andromedaMigrationDate,\n         ecc.chargeMandateCreatedTime,\n         ecc.expectedConsumptionDate,\n         ecc.consumptionPeriodContext,\n         ecc.consumptionCount_E + ecc.consumptionCount_G, \n         --ecc.consumptionId, -- Field no longer exists\n         ecc.consumptionKwh"},"data-engineering-prod:product_andromeda_secure.health_check_expected_consumption_and_charges_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_expected_consumption_and_charges_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_consumption_and_charges_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_consumption_and_charges_snapshots","table_id":"health_check_expected_consumption_and_charges_snapshots","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.u_peter_grace.health_check_expected_consumption_and_charges_snapshots`"},"data-engineering-prod:product_andromeda_secure.health_check_expected_standing_charges":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_expected_standing_charges","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_standing_charges","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_standing_charges","table_id":"health_check_expected_standing_charges","time_partitioning":null,"view_query":"with cte_health_check_flags as\n(\n  select mpxn,\n         andromedaMigrationDate,\n         fuel,\n         min(case when chargePeriodContext = 'Pre-Migration' then chargeCount END) as has_no_pre_migration_charge_gaps,\n         min(case when chargePeriodContext = 'Since Migration' then chargeCount END) as has_no_charge_gaps_since_migration_up_to_latest_standing_charge_date,\n         case when max(chargeCount) > 1 then 0 else 1 end as has_no_more_than_1_charge_per_day,\n         MIN(has_standing_charge_amount_matching_contract_standing_charge_rates) as has_all_standing_charge_amounts_matching_contract_standing_charge_rates,\n         case\n          when sum(case when chargePeriodContext = 'Missing Consumption Period' then 1 else 0 end) = 0 then 1\n          else 0\n         end as has_standing_charge_for_yesterday\n  from `data-engineering-prod.product_andromeda_secure.health_check_expected_standing_charges_detail` \n  group by mpxn,\n           andromedaMigrationDate,\n           fuel\n)\nselect *,\n       CASE\n        WHEN (has_no_pre_migration_charge_gaps = 0\n           OR has_no_charge_gaps_since_migration_up_to_latest_standing_charge_date = 0\n           OR has_no_more_than_1_charge_per_day = 0\n           OR has_all_standing_charge_amounts_matching_contract_standing_charge_rates = 0)\n         THEN 'Errors Found'\n         WHEN (has_standing_charge_for_yesterday = 0)\n         THEN 'Unhealthy'\n         ELSE 'Healthy'\n        END as overallStandingChargeHealth\nfrom cte_health_check_flags"},"data-engineering-prod:product_andromeda_secure.health_check_expected_standing_charges_detail":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_expected_standing_charges_detail","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_standing_charges_detail","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_standing_charges_detail","table_id":"health_check_expected_standing_charges_detail","time_partitioning":null,"view_query":"with cte_contract_and_charge_context_dates as\n(\n  SELECT ec.contractId,\n         ec.mpxn,\n         ec.fuel,\n         ec.currentStandingRate as standingRate,  -- Will need a different approach once we get a VPC\n         ec.startDate as chargeMandateStartDate,\n         ec.latestCreatedEventTime as chargeMandateCreatedTime,\n         sp.andromedaMigrationDate,\n         max(cast(sc.charge_date as date)) as latestStandingChargeDate,\n         case when ec.endDate < CURRENT_DATE() then ec.endDate else DATE_ADD(current_Date(), INTERVAL -1 DAY) end as expectingChargesToDate\n  FROM `data-engineering-prod.product_andromeda_secure.contracts` ec\n  left join `data-engineering-prod.product_andromeda_secure.supply_points` sp on ec.mpxn = sp.mpxn\n  LEFT join `data-engineering-prod.product_andromeda_secure.standing_charges` sc on ec.contractId = sc.contract_id\n  group by ec.contractId,\n           ec.mpxn,\n           ec.fuel,\n           ec.currentStandingRate,\n           ec.startDate,\n           ec.latestCreatedEventTime,\n           sp.andromedaMigrationDate,\n           case when ec.endDate < CURRENT_DATE() then ec.endDate else DATE_ADD(current_Date(), INTERVAL -1 DAY) end\n),\ncte_expected_charge_dates as\n(\n  select ccc.contractId,\n         ccc.mpxn,\n         ccc.fuel,\n         ccc.standingRate,\n         ccc.chargeMandateStartDate,\n         ccc.chargeMandateCreatedTime,\n         ccc.andromedaMigrationDate,\n         d.Calendar_Date as expectedChargeDate,\n         case\n          when d.Calendar_Date between ccc.chargeMandateStartDate and date_add(ccc.andromedaMigrationDate, INTERVAL -1 DAY) then 'Pre-Migration'\n          WHEN d.Calendar_Date between ccc.andromedaMigrationDate and latestStandingChargeDate then 'Since Migration'\n          when d.Calendar_Date > latestStandingChargeDate then 'Missing Charge Period'\n         END as chargePeriodContext\n  from cte_contract_and_charge_context_dates ccc\n  inner join `data-engineering-prod.raw_mis.Reference_dim_Date` d on d.Calendar_Date between chargeMandateStartDate and expectingChargesToDate\n                                                                 and d.Calendar_Date <= DATE_ADD(current_Date(), INTERVAL -1 DAY)\n)\nselect ecd.contractId,\n       ecd.mpxn,\n       ecd.fuel,\n       ecd.standingRate,\n       ecd.andromedaMigrationDate,\n       ecd.expectedChargeDate,\n       ecd.chargePeriodContext,\n       min(sc.charge_id) as chargeId,\n       sum(case when sc.charge_id is not null then 1 else 0 end) as chargeCount,\n       MIN(sc.charge_amount),\n       case when min(sc.charge_amount) <> ecd.standingRate then 0 else 1 end as has_standing_charge_amount_matching_contract_standing_charge_rates,\n       case\n        when ecd.expectedChargeDate > cast(ecd.chargeMandateCreatedTime as date)\n        THEN datetime_diff(coalesce(CAST(min(sc.charge_first_created_time) as DATETIME), current_Datetime()), cast(date_add(ecd.expectedChargeDate, interval 1 DAY) as DATETIME), MINUTE)\n       END as totalMinutesToProduceCharge\nfrom cte_expected_charge_dates ecd\nleft join `data-engineering-prod.product_andromeda_secure.standing_charges` sc on ecd.contractId = sc.contract_id\n                                                                            AND ecd.expectedChargeDate = sc.charge_date\ngroup by ecd.contractId,\n         ecd.mpxn,\n         ecd.fuel,\n         ecd.standingRate,\n         ecd.chargeMandateCreatedTime,\n         ecd.andromedaMigrationDate,\n         ecd.expectedChargeDate,\n         ecd.chargePeriodContext"},"data-engineering-prod:product_andromeda_secure.health_check_expected_standing_charges_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_expected_standing_charges_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_standing_charges_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_expected_standing_charges_snapshots","table_id":"health_check_expected_standing_charges_snapshots","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.u_peter_grace.health_check_expected_standing_charges_snapshots`"},"data-engineering-prod:product_andromeda_secure.health_check_loss_journeys":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_loss_journeys","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_loss_journeys","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_loss_journeys","table_id":"health_check_loss_journeys","time_partitioning":null,"view_query":"with cte_health_check_flags as\n(\n  select mpxn,\n         fuel,\n         andromedaMigrationDate,\n         min(has_loss_notification_in_andromeda) as has_loss_notification_in_andromeda,\n         min(has_happy_path_loss_status) as has_happy_path_loss_status,\n         min(has_no_charge_mandate_after_confirmed_loss_date) as has_no_charge_mandate_after_confirmed_loss_date,\n         min(has_had_loss_confirmed_for_completed_loss) as has_had_loss_confirmed_for_completed_loss,\n         min(has_consumption_up_to_loss_date) as has_consumption_up_to_loss_date\n  from `data-engineering-prod.product_andromeda_secure.health_check_loss_journeys_detail`\n  group by mpxn,\n           fuel,\n           andromedaMigrationDate\n)\nselect *,\n       case\n        WHEN (has_loss_notification_in_andromeda = 0\n           OR has_no_charge_mandate_after_confirmed_loss_date = 0)\n        THEN 'Errors Found'          \n        when (has_happy_path_loss_status = 0\n           OR has_had_loss_confirmed_for_completed_loss = 0\n           OR has_consumption_up_to_loss_date = 0)\n        THEN 'Unhealthy'\n        ELSE 'Healthy'\n       END as overallLossJourneyHealth\nfrom cte_health_check_flags"},"data-engineering-prod:product_andromeda_secure.health_check_loss_journeys_detail":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_loss_journeys_detail","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_loss_journeys_detail","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_loss_journeys_detail","table_id":"health_check_loss_journeys_detail","time_partitioning":null,"view_query":"select l.mpxn,\n       l.lossNotificationReceivedDate as lossNotificationReceivedOrDetectedDate,\n       sp.fuel,\n       sp.andromedaMigrationDate,\n       l.lossJourneyStatus,\n       l.lossDate,\n       l.lossConfirmationReceivedDate,\n       l.lossCompletionReceivedDate,\n       1 as has_loss_notification_in_andromeda,\n       case\n        when lossJourneyStatus = 'Loss notification received - Past Expected Loss Date' then 0\n        else 1\n       end as has_happy_path_loss_status,\n       case\n        when cm.contractId is not null and l.lossJourneyStatus in ('Loss confirmed', 'Loss completed') then 0\n        else 1\n       end as has_no_charge_mandate_after_confirmed_loss_date,\n       case\n        when l.lossJourneyStatus = 'Loss completed' and l.lossConfirmationReceivedDate is null then 0\n        else 1\n       end as has_had_loss_confirmed_for_completed_loss,\n       case\n        when current_date() > l.lossDate and cb.mpxn is null then 0\n        ELSE 1\n       END as has_consumption_up_to_loss_date\nfrom `data-engineering-prod.product_andromeda_secure.loss_journeys` l\ninner join `data-engineering-prod.product_andromeda_secure.supply_points` sp on l.mpxn = sp.mpxn\n-- Join to any charge mandates that would be active after the loss date\nleft join `data-engineering-prod.product_andromeda_secure.contracts` cm on l.mpxn = cm.mpxn\n                                                       and date_add(l.lossDate, interval 1 DAY) between cm.startDate and cm.endDate\n-- Join to consumption finishing at midnight on day before they start with new supplier, to check we've got consumption up to the last date we'd expect it for\n-- (see https:\/\/trello.com\/c\/E6MzXjZS\/238-loss-journey-analysis for more detail on this scenario)\nleft join `data-engineering-prod.product_andromeda_secure.consumption_blocks` cb on l.mpxn = cb.mpxn\n                                                          and l.lossDate = cb.toDate\nwhere sp.chargeMandateStatus in ('Has Current Charge Mandate', 'Has Historic Charge Mandate')\n  and l.lossNotificationReceivedDate >= sp.andromedaMigrationDate\n-- Bolt on any loss notifications we can find externally but not in Andromeda\nunion all\nselect el.mpxn,\n       cast(detectedDatetime as date) as lossNotificationReceivedOrDetectedDate,\n       sp.fuel,\n       sp.andromedaMigrationDate,\n       'Missing from Andromeda' as lossJourneyStatus,\n       null as lossDate,\n       null as lossConfirmationReceivedDate,\n       null as lossCompletionReceivedDate,\n       0 as has_loss_notification_in_andromeda,\n       1 as has_happy_path_loss_status,\n       1 as has_no_charge_mandate_after_confirmed_loss_date,\n       1 as has_had_loss_confirmed_for_completed_loss,\n       1 as has_consumption_up_to_loss_date\nfrom `data-engineering-prod.product_andromeda_secure.external_reconciliation_loss_notifications` el\ninner join `data-engineering-prod.product_andromeda_secure.supply_points` sp on el.mpxn = sp.mpxn\nleft join `data-engineering-prod.product_andromeda_secure.loss_journeys` l on el.mpxn = l.mpxn\n                                                    and l.lossNotificationReceivedDate >= sp.andromedaMigrationDate\nwhere sp.chargeMandateStatus in ('Has Current Charge Mandate', 'Has Historic Charge Mandate')\n  and cast(detectedDatetime as date) >= sp.andromedaMigrationDate\n  and l.mpxn is null"},"data-engineering-prod:product_andromeda_secure.health_check_loss_journeys_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.health_check_loss_journeys_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_loss_journeys_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/health_check_loss_journeys_snapshots","table_id":"health_check_loss_journeys_snapshots","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.u_peter_grace.health_check_loss_journeys_snapshots` "},"data-engineering-prod:product_andromeda_secure.industry_final_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.industry_final_reads","location":"EU","num_bytes":211526155,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/industry_final_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/industry_final_reads","table_id":"industry_final_reads","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.loss_journeys":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.loss_journeys","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys","table_id":"loss_journeys","time_partitioning":null,"view_query":"with cte_supply_point_dedupe as\n(\n  select mpxn,\n         'electricity' as fuel,\n         sh.supplyStatusDate,\n         sh.supplyStatus,\n         sh.expectedLossDate,\n         sh.confirmedLossDate,\n         RANK() over (partition by mpxn order by kafkaData.topic desc, metadata.createdAt desc, kafkaData.insertTime desc) as supply_point_rank\n  from `data-engineering-prod.raw_andromeda_secure.spam_electricitySupplyPoint__no_dedupe` e,\n  unnest(e.supplyHistory) sh\n  union all\n  select mpxn,\n         'gas' as fuel,\n         sh.supplyStatusDate,\n         sh.supplyStatus,\n         sh.expectedLossDate,\n         sh.confirmedLossDate,\n         RANK() over (partition by mpxn order by kafkaData.topic desc, metadata.createdAt desc, kafkaData.insertTime desc) as supply_point_rank\n  from `data-engineering-prod.raw_andromeda_secure.spam_gasSupplyPoint__no_dedupe` g,\n  unnest(g.supplyHistory) sh\n),\ncte_supply_history_dedupe as\n(\n  select sp.mpxn,\n         sp.fuel,\n         sp.supplyStatusDate,\n         sp.supplyStatus,\n         sp.expectedLossDate,\n         sp.confirmedLossDate,\n         row_number() over (partition by sp.mpxn, sp.supplyStatusDate, sp.supplyStatus order by sp.confirmedLossDate asc, sp.expectedLossDate asc) as supply_history_rownum      \n  from cte_supply_point_dedupe sp\n  where supply_point_rank = 1\n),\ncte_loss_notifications as\n(\n  select sh.mpxn,\n         sh.fuel,\n         sh.supplyStatusDate as lossNotificationReceivedDate,\n         sh.supplyStatus,\n         sh.expectedLossDate,\n         coalesce(lead(sh.supplyStatusDate) over (partition by sh.mpxn, sh.supplyStatus order by sh.supplyStatusDate), DATE('2999-01-01')) as nextLossNotificationReceivedDate\n  from cte_supply_history_dedupe sh\n  where supplyStatus = 'Loss notification received'\n    and supply_history_rownum = 1\n),\ncte_contracts as\n(\n  select ctr.*\n  from `data-engineering-prod.product_andromeda_secure.contracts` ctr\n  left join `data-engineering-prod.landing_orion_migration_secure.orion_migration_reverse_success_v1` rev on ctr.serviceAccountId = rev.accountId\n  where rev.accountId is null\n)\nselect loss_not.mpxn,\n       ctr.serviceAccountId,\n       ctr.contractId,\n       loss_not.fuel,\n       ms.Migrated_Date as orionMigrationDate,\n       loss_not.lossNotificationReceivedDate,\n       coalesce(case\n                 when MAX(loss_conf_comp_canc.supplyStatus) in ('Loss withdrawal confirmed', 'Loss objection upheld')\n                 THEN MAX(loss_conf_comp_canc.supplyStatus) -- Use this to favour the cancellation statuses\n                 ELSE min(loss_conf_comp_canc.supplyStatus) -- Use this to favour completed over confirmed\n                END,\n                case when current_date() > loss_not.expectedLossDate then concat(loss_not.supplyStatus, ' - Past Expected Loss Date') ELSE loss_not.supplyStatus end) as lossJourneyStatus,\n       coalesce(min(loss_conf_comp_canc.confirmedLossDate), loss_not.expectedLossDate) as lossDate,\n       min(case when loss_conf_comp_canc.supplyStatus = 'Loss confirmed' then supplyStatusDate end) as lossConfirmationReceivedDate,\n       min(case when loss_conf_comp_canc.supplyStatus = 'Loss completed' then supplyStatusDate end) as lossCompletionReceivedDate,\n       min(case when loss_conf_comp_canc.supplyStatus in ('Loss withdrawal confirmed', 'Loss objection upheld') then supplyStatusDate end) as lossCancellationReceivedDate\nfrom cte_loss_notifications loss_not\nleft join cte_supply_history_dedupe loss_conf_comp_canc on loss_not.mpxn = loss_conf_comp_canc.mpxn\n                                                  and loss_conf_comp_canc.supplyStatus in ('Loss confirmed', 'Loss completed', 'Loss withdrawal confirmed', 'Loss objection upheld')\n                                                  and loss_conf_comp_canc.supply_history_rownum = 1\n                                                  and loss_conf_comp_canc.supplyStatusDate between loss_not.lossNotificationReceivedDate\n                                                                                          and loss_not.nextLossNotificationReceivedDate\nLEFT join cte_contracts ctr on loss_not.mpxn = ctr.mpxn\n                            and case\n                                 when coalesce(loss_conf_comp_canc.confirmedLossDate, loss_not.expectedLossDate) < loss_not.lossNotificationReceivedDate\n                                 then coalesce(loss_conf_comp_canc.confirmedLossDate, loss_not.expectedLossDate) \n                                 else loss_not.lossNotificationReceivedDate\n                                end between ctr.startDate and coalesce(ctr.endDate, '2999-01-01')\nleft join `data-engineering-prod.raw_orion_migration.orion_migration_success` ms on ctr.serviceAccountId = ms.Account_No\ngroup by loss_not.mpxn,\n         ctr.serviceAccountId,\n         ctr.contractId,\n         loss_not.fuel,\n         ms.Migrated_Date,\n         loss_not.lossNotificationReceivedDate,\n         loss_not.supplyStatus,\n         loss_not.expectedLossDate"},"data-engineering-prod:product_andromeda_secure.loss_journeys_detailed":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.loss_journeys_detailed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys_detailed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys_detailed","table_id":"loss_journeys_detailed","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed_extract` "},"data-engineering-prod:product_andromeda_secure.loss_journeys_detailed_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.loss_journeys_detailed_extract","location":"EU","num_bytes":364987569,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys_detailed_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys_detailed_extract","table_id":"loss_journeys_detailed_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.loss_journeys_reads_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.loss_journeys_reads_extract","location":"EU","num_bytes":112220909,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys_reads_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_journeys_reads_extract","table_id":"loss_journeys_reads_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.loss_reads_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.loss_reads_extract","location":"EU","num_bytes":17042228,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_reads_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_reads_extract","table_id":"loss_reads_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.loss_smart_reads_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.loss_smart_reads_extract","location":"EU","num_bytes":25570351,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_smart_reads_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/loss_smart_reads_extract","table_id":"loss_smart_reads_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.manual_read_work_items":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.manual_read_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/manual_read_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/manual_read_work_items","table_id":"manual_read_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array,\n         row_number() over (partition by wi.entityUri order by wi.metadata.createdAt desc) as row_num -- Use descending order as the correction read more likely to be through O4O\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where wi.entityUri like 'manual-reads%'\n),\ncte_reads_union as\n(\n  select event.ElectricityManualReadingEvent.msn,\n         event.ElectricityManualReadingEvent.readingDateTime,\n         event.ElectricityManualReadingEvent.readingType,\n         event.ElectricityManualReadingEvent.tiers,\n         null as gasReadingValue,\n         row_number() over (partition by event.ElectricityManualReadingEvent.msn, event.ElectricityManualReadingEvent.readingDateTime order by event.ElectricityManualReadingEvent.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.landing_andromeda_secure.rac_manual_read_submitted_v2`\n  where event.ElectricityManualReadingEvent is not null\n  union all\n  select event.GasVolumeManualReadingEvent.msn,\n         event.GasVolumeManualReadingEvent.readingDateTime,\n         event.GasVolumeManualReadingEvent.readingType,\n         event.ElectricityManualReadingEvent.tiers, -- Using this to get the right shape even though we know its null\n         event.GasVolumeManualReadingEvent.readingValue as gasReadingValue,\n         row_number() over (partition by event.GasVolumeManualReadingEvent.msn, event.GasVolumeManualReadingEvent.readingDateTime order by event.GasVolumeManualReadingEvent.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.landing_andromeda_secure.rac_manual_read_submitted_v2`\n  where event.GasVolumeManualReadingEvent is not null\n)\nselect wi.key_array[offset(2)] as mpxn, replace(wi.key_array[offset(3)], '%20', ' ') as msn, cast(replace( wi.key_array[offset(4)], '%3A', ':') as timestamp) as readingDateTime,\n       mr.readingType, mr.tiers, mr.gasReadingValue, wi.* except(key_array)\nfrom cte_work_items wi\nleft join cte_reads_union mr on mr.msn = replace(wi.key_array[offset(3)], '%20', ' ')\n                            and mr.readingDateTime = cast(replace(wi.key_array[offset(4)], '%3A', ':') as timestamp)\n                            and mr.row_num = wi.row_num"},"data-engineering-prod:product_andromeda_secure.meter_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.meter_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/meter_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/meter_reads","table_id":"meter_reads","time_partitioning":null,"view_query":"-- non-deduped S1 reads to improve performance\nwith cte_rac_msd_received__no_dedupe as\n(\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         * except(metadata), -- Different order of fields in metadata struct so we have to specify explicitly\n         kafkaData.topic as topic_cleansed -- Need to deal with nulls in v3\n  from `data-engineering-prod.landing_andromeda.rac_msd_received_v6` v6\n  union all\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         * except(metadata) ,\n         kafkaData.topic as topic_cleansed\n  from `data-engineering-prod.landing_andromeda.rac_msd_received_v5` v5\n  union all\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         * except(metadata),\n         coalesce(kafkaData.topic, 'rac_msd_received_v3') as topic_cleansed\n  from `data-engineering-prod.landing_andromeda.rac_msd_received_v3` v3\n),\n\ncte_union AS(\n-- S1\nSELECT msd.snapshotData.device.serialNumber as msn,\n       lower(msd.snapshotData.device.supplyType) as fuel,\n       --msd.snapshotData.device.servicePointNumber as mpxn,\n       msd.snapshotData.device.snapshotTime as readingDatetime,\n       DATE(msd.snapshotData.device.snapshotTime, \"Europe\/London\") as readingDate,\n       'S1 (SFE MSD)' as readingSource,\n       cast(msd.snapshotData.device.snapshotCause as string) as readingType,\n       snapshotData.device.cumulativeRegisters.volume as totalVolume,\n       MIN(CASE WHEN r.tier = 0 AND lower(msd.snapshotData.device.supplyType) = 'electricity' THEN r.cumulative END) AS reg0Kwh,\n       MIN(CASE WHEN r.tier = 1 AND lower(msd.snapshotData.device.supplyType) = 'electricity' THEN r.cumulative END) AS reg1Kwh,\n       MIN(CASE WHEN r.tier = 2 AND lower(msd.snapshotData.device.supplyType) = 'electricity' THEN r.cumulative END) AS reg2Kwh,\n       case when lower(msd.snapshotData.device.supplyType) = 'electricity' then msd.snapshotData.device.cumulativeRegisters.activeImport end as totalKwh,\n       msd.createdAt\nfrom cte_rac_msd_received__no_dedupe msd\ninner join unnest (snapshotData.device.importRateRegisters.value) as r\ngroup by msd.snapshotData.device.serialNumber,\n         msd.snapshotData.device.supplyType,\n         msd.snapshotData.device.servicePointNumber,\n         msd.snapshotData.device.snapshotTime,\n         cast(msd.snapshotData.device.snapshotCause as string),\n         snapshotData.device.cumulativeRegisters.volume,\n         msd.snapshotData.device.cumulativeRegisters.activeImport,\n         msd.createdAt\nunion all\n-- S2\nselect xr.body.xreadOut01.meter.msn,\n       case\n        when body.xreadOut01.meter.importMpan is not null then 'electricity'\n        when xr.body.xreadOut01.meter.importMprn is not null then 'gas'\n       end as fuel,\n       --coalesce(xr.body.xreadOut01.meter.importMpan, xr.body.xreadOut01.meter.importMprn) as mpxn,\n       r.timestamp as readingDatetime,\n       DATE(r.timestamp, \"Europe\/London\") as readingDate,\n       'S2 (BOL XREAD)' as readingSource,\n       xr.body.xreadOut01.meter.readingType,\n       MIN(case when xr.body.xreadOut01.meter.importMprn is not null then tou.readingDecimal end) as totalVolume,\n       MIN(CASE WHEN tou.registerId = 0 AND xr.body.xreadOut01.meter.importMpan is not null THEN (cast(tou.reading as float64)\/1000) END) AS reg0Kwh,\n       MIN(CASE WHEN tou.registerId = 1 AND xr.body.xreadOut01.meter.importMpan is not null THEN (cast(tou.reading as float64)\/1000) END) AS reg1Kwh,\n       MIN(CASE WHEN tou.registerId = 2 AND xr.body.xreadOut01.meter.importMpan is not null THEN (cast(tou.reading as float64)\/1000) END) AS reg2Kwh,\n       case when xr.body.xreadOut01.meter.importMpan is not null then (cast(r.activeImportRegisterConsumption as float64)\/1000) end as totalKwh,\n       xr.metadata.createdAt\nfrom `data-engineering-prod.raw_andromeda_secure.flow_BOL_XREADOUT01_validated` xr\ninner join unnest(xr.body.xreadOut01.register) r\nleft join unnest(r.touRegister) tou\ngroup by xr.body.xreadOut01.meter.msn,\n         xr.body.xreadOut01.meter.importMpan,\n         xr.body.xreadOut01.meter.importMprn,\n         r.timestamp,\n         xr.body.xreadOut01.meter.readingType,\n         r.activeImportRegisterConsumptionDecimal,\n         r.activeImportRegisterConsumption,\n         xr.metadata.createdAt\nunion all\n-- SELECT a.msn,\n--        a.fuel,\n--        a.mpxn,\n--        a.readingDatetime,\n--        a.readingDate,\n--        a.readingSource,\n--        a.readingType,\n--        a.totalVolume,\n--        a.reg0Kwh,\n--        a.reg1Kwh,\n--        a.reg2Kwh,\n--        a.totalKwh,\n--        a.createdAt\n-- FROM (\n      select coalesce(event.ElectricityManualReadingEvent.msn, event.GasVolumeManualReadingEvent.msn) as msn ,\n             case\n              when event.ElectricityManualReadingEvent.msn is not null then 'electricity'\n              when event.GasVolumeManualReadingEvent.msn is not null then 'gas'\n             end as fuel,\n             --null as mpxn,\n             coalesce(event.ElectricityManualReadingEvent.readingDateTime, event.GasVolumeManualReadingEvent.readingDateTime) as readingDatetime,\n             DATE(coalesce(event.ElectricityManualReadingEvent.readingDateTime, event.GasVolumeManualReadingEvent.readingDateTime), \"Europe\/London\") AS readingDate,\n             'Manual Read' as readingSource,\n             coalesce(event.ElectricityManualReadingEvent.readingType, event.GasVolumeManualReadingEvent.readingType) as readingType,\n             event.GasVolumeManualReadingEvent.readingValue as totalVolume,\n             MIN(CASE WHEN t.tier = 0 THEN t.readingValue END) AS reg0Kwh,\n             MIN(CASE WHEN t.tier = 1 THEN t.readingValue END) AS reg1Kwh,\n             MIN(CASE WHEN t.tier = 2 THEN t.readingValue END) AS reg2Kwh,\n             null as totalKwh,\n             coalesce(event.ElectricityManualReadingEvent.metadata.createdAt, event.GasVolumeManualReadingEvent.metadata.createdAt) createdAt\n      from `data-engineering-prod.raw_andromeda_secure.rac_manual_read_submitted` mr\n      left join unnest(mr.event.ElectricityManualReadingEvent.tiers) t\n      group by event.ElectricityManualReadingEvent.msn, event.GasVolumeManualReadingEvent.msn,\n               event.ElectricityManualReadingEvent.readingDateTime, event.GasVolumeManualReadingEvent.readingDateTime,\n               event.ElectricityManualReadingEvent.readingType, event.GasVolumeManualReadingEvent.readingType,\n               event.GasVolumeManualReadingEvent.readingValue,\n               event.ElectricityManualReadingEvent.metadata.createdAt, event.GasVolumeManualReadingEvent.metadata.createdAt\n--                ) a\n  )\n               \nSELECT a.msn,\n       a.fuel,\n       b.MPXN AS mpxn,\n       a.readingDatetime,\n       a.readingDate,\n       a.readingSource,\n       a.readingType,\n       a.totalVolume,\n       a.reg0Kwh,\n       a.reg1Kwh,\n       a.reg2Kwh,\n       a.totalKwh,\n       a.createdAt             \nFROM cte_union a\nLEFT JOIN (\n            SELECT DISTINCT mpxn\n                          ,\tfuel\n                          ,\tmsn\n                          , meterStartDate\n                          ,\tmeterEndDate\n                          ,\tmeterType\n            FROM `data-engineering-prod.product_andromeda_secure.READ_SUBMISSION_supply_meter_register_mappings`) b\nON a.msn=b.msn\nAND a.readingDate>=b.meterStartDate \nAND a.readingDate<COALESCE(b.meterEndDate, '2099-12-31') "},"data-engineering-prod:product_andromeda_secure.migration_metric":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.migration_metric","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/migration_metric","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/migration_metric","table_id":"migration_metric","time_partitioning":null,"view_query":"with cte_core_accounts as\n        (\n          SELECT\n              A.Account_No\n            FROM\n            `data-engineering-prod.reporting_crm.v_Account` A\n              INNER JOIN `data-engineering-prod.reporting_crm.v_Consumer` C\n                ON    A.Account_No = C.Account_No\n                AND C.Lifecycle_Category = 'Live (Excluding Loss)'\n              LEFT JOIN `data-engineering-prod.raw_ops_workstreams.Polarstern_tbl_Historic_Status` PS \n                ON C.Consumer_No = PS.Consumer_No\n                AND PS.Is_Latest_Polarstern_Status = TRUE\n            WHERE\n              A.Billing_System = 'GENTRACK'\n              AND    A.Payment_Method_Category = 'PAYM'                                                                    -- PAYM\n              AND A.Retailer_Code = 'OVO'                                                                                -- OVO Customer\n              AND A.Is_ET_Gain = FALSE                                                                                    -- Not an ET\n            GROUP BY A.Account_No\n            HAVING \n              SUM(CASE WHEN SUBSTR(c.Meter_Type_Code,1,2) = 'S2'  THEN 1 WHEN C.Meter_Type_Category = 'Smart' THEN 1 ELSE 0 END) = COUNT(*)        -- All live consumers are SMART     HOB 31\/5\/19 - now including SMETS2    AND SUM(CASE WHEN ISNULL(C.Billing_Class_Code, 'Nix zu sehen hier') = 'COM' THEN 0 ELSE 1 END) = COUNT(*)                           -- No live consumers are COMMERCIAL\n            AND SUM(CASE WHEN coalesce(C.Tax_Class_Code, 'Nix zu sehen hier') IN ('COMMERCIAL', 'COMEXEMPT') THEN 0 ELSE 1 END) = COUNT(*)        -- No live consumers are COMMERCIAL\n            AND SUM(CASE WHEN C.Profile_Class IN ('01', '02', 'G') THEN 1 ELSE 0 END) = COUNT(*)                                                -- No live consumers are COMMERCIAL\n            AND SUM(CASE WHEN C.Payment_Method_Category = 'PAYM' THEN 1 ELSE 0 END) = COUNT(*)                                                     -- All live consumers are PAYM, too\n            AND SUM(CASE WHEN PS.Has_Meter_and_Tariff_Mismatch = TRUE THEN 0 ELSE 1 END) = COUNT(*)                                                -- No live consumers are Polarstern\/nretsraloP\n        ),\n        cte_core_accounts_agg as\n        (\n          select count(1) as core_accounts\n          from cte_core_accounts\n        ),\n        cte_latest_live_accounts as\n        (\n          select *,\n                row_number() over (order by Snapshot_Date desc) as row_num\n          from `data-engineering-prod.product_orion_secure.migrated_accounts_counts_extract`\n        )\n        select\n        l.Still_Live_Count as Migrated,\n        ca.core_accounts as ToGo,\n        round(l.Still_Live_Count \/ (l.Still_Live_Count + ca.core_accounts) * 100, 1) as pct_accounts_migrated,\n              current_date() as last_updated_date\n        from cte_latest_live_accounts l\n        cross join cte_core_accounts_agg ca\n        where l.row_num = 1"},"data-engineering-prod:product_andromeda_secure.msd_export_advances":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.msd_export_advances","location":"EU","num_bytes":848645025,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/msd_export_advances","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/msd_export_advances","table_id":"msd_export_advances","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.msd_export_raw":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.msd_export_raw","location":"EU","num_bytes":14917139226,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/msd_export_raw","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/msd_export_raw","table_id":"msd_export_raw","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.multi_rate_personal_projections_1_latest_mappings":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_personal_projections_1_latest_mappings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_personal_projections_1_latest_mappings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_personal_projections_1_latest_mappings","table_id":"multi_rate_personal_projections_1_latest_mappings","time_partitioning":null,"view_query":"WITH mappings AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n    ,createdAt\n  FROM (\n    SELECT\n       MPXN \n      ,inst.MSN\n      ,inst.startDate AS meterMappingEffectiveFrom\n      ,his.startDate AS registerConfigEffectiveFrom\n      ,reg.clockingTimeId\n      ,reg.timePatternRegime\n      ,reg.tier\n      ,metadata.createdAt\n      -- use rank to find the latest configuration and meter instalation dates\n      ,RANK() OVER(PARTITION BY MPXN  ORDER BY inst.startDate DESC) AS latestMeterMapping\n      ,RANK() OVER(PARTITION BY MPXN  ORDER BY his.startDate DESC) AS latestConfigMapping\n    FROM \n      `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v1`\n    INNER JOIN\n      UNNEST(installationHistory) AS inst\n    INNER JOIN\n      UNNEST(inst.meterRegisterHistory) his\n    INNER JOIN\n      UNNEST(his.meterRegisters) reg\n    ) lt\n  WHERE \n    latestMeterMapping = 1 \n    AND latestConfigMapping = 1\n    AND tier IS NOT NULL\n), ranked_mappings AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n    -- single entry per MPXN, tier\n    ,ROW_NUMBER() OVER(PARTITION BY MPXN, tier ORDER BY createdAt DESC) rowNumMpxn\n    -- single entry per MSN, tier\n    ,ROW_NUMBER() OVER(PARTITION BY MSN, tier ORDER BY createdAt DESC) rowNumMsn\n  FROM\n    mappings\n), deduped_ranked AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n  FROM\n    ranked_mappings\n  WHERE \n    rowNumMpxn = 1\n    AND rowNumMsn = 1\n), two_rate_list AS (\n  -- get multi rate MPANs only. Choose exactly 2 tiers as we will not support more than 2 on OEP\n  SELECT\n    m.MPXN AS mpan\n  FROM\n    deduped_ranked AS m\n  GROUP BY\n    m.MPXN\n  HAVING\n    COUNT(clockingTimeId) = 2\n), two_rate_only AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier  \n  FROM\n    deduped_ranked dr\n  INNER JOIN\n    two_rate_list AS t\n      ON dr.MPXN = t.mpan\n)\nSELECT\n   MPXN\n  ,MSN\n  ,meterMappingEffectiveFrom\n  ,registerConfigEffectiveFrom\n  ,clockingTimeId\n  ,timePatternRegime\n  ,tier  \nFROM\n  two_rate_only\n-- tests:\n--  correct if all tests return no results\n--  SELECT mpxn, tier, count(*) from two_rate_only group by mpxn, tier HAVING COUNT(*) <> 1\n--  SELECT msn, tier, count(*) from two_rate_only group by msn, tier HAVING COUNT(*) <> 1\n--  SELECT mpxn, count(*) from two_rate_only group by mpxn HAVING COUNT(*) <> 2\n--  SELECT msn, count(*) from two_rate_only group by msn HAVING COUNT(*) <> 2\n-- ...and total count plausible for multi-rate smart supplies\n-- SELECT COUNT(DISTINCT MPXN) FROM two_rate_only"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_1_latest_mappings":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_1_latest_mappings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_1_latest_mappings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_1_latest_mappings","table_id":"multi_rate_projections_1_latest_mappings","time_partitioning":null,"view_query":"\/* =================================================================== *\/\n\/* 1) Latest Register-Meter-Supply Mappings for Multi-Rate Projections *\/\n\/* =================================================================== *\/\n\n-- uses SPAM supply point history topic to find the latest valid supply point to \n-- meter to register mappings. It is this set of mappings which is used in \n-- consumption projections. This is true for the single rate projection process.\n-- This view also ensures that a meter can only be mapped to one supply, going \n-- further than the single rate process.\n\nWITH mappings AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n    ,createdAt\n  FROM (\n    SELECT\n       MPXN \n      ,inst.MSN\n      ,inst.startDate AS meterMappingEffectiveFrom\n      ,his.startDate AS registerConfigEffectiveFrom\n      ,reg.clockingTimeId\n      ,reg.timePatternRegime\n      ,reg.tier\n      ,metadata.createdAt\n      -- use rank to find the latest configuration and meter instalation dates\n      ,RANK() OVER(PARTITION BY MPXN  ORDER BY inst.startDate DESC) AS latestMeterMapping\n      ,RANK() OVER(PARTITION BY MPXN  ORDER BY his.startDate DESC) AS latestConfigMapping\n    FROM \n      `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v1`\n    INNER JOIN\n      UNNEST(installationHistory) AS inst\n    INNER JOIN\n      UNNEST(inst.meterRegisterHistory) his\n    INNER JOIN\n      UNNEST(his.meterRegisters) reg\n    ) lt\n  WHERE \n    latestMeterMapping = 1 \n    AND latestConfigMapping = 1\n    AND tier IS NOT NULL\n), ranked_mappings AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n    -- single entry per MPXN, tier\n    ,ROW_NUMBER() OVER(PARTITION BY MPXN, tier ORDER BY createdAt DESC) rowNumMpxn\n    -- single entry per MSN, tier\n    ,ROW_NUMBER() OVER(PARTITION BY MSN, tier ORDER BY createdAt DESC) rowNumMsn\n  FROM\n    mappings\n), deduped_ranked AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n  FROM\n    ranked_mappings\n  WHERE \n    rowNumMpxn = 1\n    AND rowNumMsn = 1\n), two_rate_list AS (\n  -- get multi rate MPANs only. Choose exactly 2 tiers as we will not support more than 2 on OEP\n  SELECT\n    m.MPXN AS mpan\n  FROM\n    deduped_ranked AS m\n  GROUP BY\n    m.MPXN\n  HAVING\n    COUNT(clockingTimeId) = 2\n), two_rate_only AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier  \n  FROM\n    deduped_ranked dr\n  INNER JOIN\n    two_rate_list AS t\n      ON dr.MPXN = t.mpan\n)\nSELECT\n   MPXN\n  ,MSN\n  ,meterMappingEffectiveFrom\n  ,registerConfigEffectiveFrom\n  ,clockingTimeId\n  ,timePatternRegime\n  ,tier  \nFROM\n  two_rate_only\n-- tests:\n--  correct if all tests return no results\n--  SELECT mpxn, tier, count(*) from two_rate_only group by mpxn, tier HAVING COUNT(*) <> 1\n--  SELECT msn, tier, count(*) from two_rate_only group by msn, tier HAVING COUNT(*) <> 1\n--  SELECT mpxn, count(*) from two_rate_only group by mpxn HAVING COUNT(*) <> 2\n--  SELECT msn, count(*) from two_rate_only group by msn HAVING COUNT(*) <> 2\n-- ...and total count plausible for multi-rate smart supplies\n-- SELECT COUNT(DISTINCT MPXN) FROM two_rate_only"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_1_latest_mappings_v2":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_1_latest_mappings_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_1_latest_mappings_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_1_latest_mappings_v2","table_id":"multi_rate_projections_1_latest_mappings_v2","time_partitioning":null,"view_query":"  \/* =================================================================== *\/ \n  \/* 1) Latest Register-Meter-Supply Mappings for Multi-Rate Projections *\/ \n  \/* =================================================================== *\/\n  -- uses SPAM supply point (NOT history). This topic has a view of the latest valid supply point to\n  -- meter to register mappings. It does not have the history. It is this set of mappings which is used in\n  -- consumption projections. This is true for the single rate projection process.\n  -- This view also ensures that a meter can only be mapped to one supply, going\n  -- further than the single rate process.\n  --take the lastest view\n  \n  --Note: As this topic has the latest view of every supply point that has been at OVO,\n  --we also find supply points that are not on supply and therefore those are removed \n  --to avoid potential duplicated msn across different mpans (msn refurbished)\n  --Note 2: There are 6 ambiguos MSN that are mapped to 2 different MPANs on supply \n  \nWITH\n--latest view\n  cte_latest_mappings AS(\n  SELECT \n    MPXN,\n    MSN,\n    profileClassId,\n    supplyStatus.status,\n    meterRegisterHistory\n  FROM (\n    SELECT\n      *,\n      ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY kafkaData.insertTime DESC) AS mpxn_rn\n    FROM\n      `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPoint_v2`)\n   WHERE\n     mpxn_rn=1\n   AND NOT (supplyStatus.status = 'Loss completed' OR supplyStatus.status = 'Loss confirmed')\n      )      \n--SELECT * FROM cte_latest_mappings WHERE MSN = '15P0151250' --msn is mapped to two mpan, one is loss so the meter got refurbished   \n--SELECT * FROM cte_latest_mappings WHERE MSN = '16P0142287' --msn is mapped to two mpan for the same customer, adress, dates, etc. Only 6 cases\n      ,\n      \n  --latest register mapping\n  cte_latest_mappings_reg AS(\n  SELECT\n    MPXN,\n    MSN,\n    profileClassId,\n    status,\n    ssc,\n    effectiveFromSettlementDateScon AS registerConfigEffectiveFrom,\n    meterRegisters\n  FROM (\n    SELECT\n      MPXN,\n      MSN,\n      profileClassId,\n      status,\n      regHist.effectiveFromSettlementDateScon,\n      regHist.ssc,\n      regHist.meterRegisters,\n      ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY regHist.effectiveFromSettlementDateScon DESC) AS rn2\n    FROM\n      cte_latest_mappings\n    INNER JOIN\n      UNNEST (meterRegisterHistory) AS regHist)\n  WHERE\n    rn2=1 \n    ),\n    \n  --remove cases where the entire row is duplicated\n  cte_latest_mappings_reg_dedup AS(\n  SELECT\n    MPXN,\n    MSN,\n    profileClassId,\n    status,\n    ssc,\n    registerConfigEffectiveFrom,\n    reg.tier,\n    reg.clockingTimeId,\n    reg.switchedLoadIndicator\n  FROM\n    cte_latest_mappings_reg\n  INNER JOIN\n    UNNEST (meterRegisters) AS reg\n  GROUP BY\n    MPXN,\n    MSN,\n    profileClassId,\n    status,\n    ssc,\n    registerConfigEffectiveFrom,\n    reg.tier,\n    reg.clockingTimeId,\n    reg.switchedLoadIndicator \n    ),\n    \n  --remove when switchedLoadIndicator is null\n  cte_cte_latest_mappings_reg_dedup_clean AS(\n  SELECT\n    MPXN,\n    MSN,\n    profileClassId,\n    status,\n    ssc,\n    registerConfigEffectiveFrom,\n    tier,\n    clockingTimeId\n  FROM\n    cte_latest_mappings_reg_dedup\n  WHERE\n    switchedLoadIndicator IS NOT NULL \n    ),\n\n--Select multi-rate mpans. The filters used where discussed with SPAM team as the most robust way to get multi-rate supplypoints only     \n  cte_mpan_two_rate_only AS(\n  SELECT\n    MPXN\n  FROM\n    cte_cte_latest_mappings_reg_dedup_clean\n  GROUP BY\n    MPXN,\n    MSN,\n    profileClassId,\n    ssc\n  HAVING \n  --profileClassId = '02'\n  --AND\n  ssc != '0393'\n  AND COUNT(tier) = 2\n  AND COUNT(DISTINCT tier) = 2\n  AND COUNT(clockingTimeId) = 2 \n  AND COUNT(DISTINCT clockingTimeId) = 2 \n),\n\ncte_multi_rate AS(\n  SELECT\n    a.MPXN,\n    a.MSN,\n    a.profileClassId,\n    a.status,\n    a.ssc,\n    a.registerConfigEffectiveFrom,\n    a.tier,\n    a.clockingTimeId\n  FROM cte_cte_latest_mappings_reg_dedup_clean a\n  INNER JOIN cte_mpan_two_rate_only b\n  ON a.MPXN = b.MPXN\n )\n\n  \n  \nSELECT\n  MPXN,\n  MSN,\n  --registerConfigEffectiveFrom,\n  clockingTimeId,\n  tier\nFROM\n  cte_multi_rate\nORDER BY MPXN\n\n\n  -- tests:\n  --  correct if all tests return no results\n  --  SELECT mpxn, tier, count(*) from cte_multi_rate group by mpxn, tier HAVING COUNT(*) <> 1\n-- SELECT msn, tier, count(*) from cte_multi_rate group by msn, tier HAVING COUNT(*) <> 1 --****************failed because there are msn mapped to different mpans, it should not affect\n-- SELECT * FROM cte_latest_mappings WHERE MSN IN (SELECT DISTINCT msn from cte_multi_rate group by msn, tier HAVING COUNT(*) <> 1) ORDER BY MSN\n  --  SELECT mpxn, count(*) from cte_multi_rate group by mpxn HAVING COUNT(*) <> 2\n  --  SELECT msn, count(*) from cte_multi_rate group by msn HAVING COUNT(*) <> 2 --****************failed because there are msn mapped to different mpans, it should not affect\n  -- ...and total count plausible for multi-rate smart supplies\n  -- SELECT COUNT(DISTINCT MPXN) FROM cte_multi_rate"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_1_latest_mappings_v3":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_1_latest_mappings_v3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_1_latest_mappings_v3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_1_latest_mappings_v3","table_id":"multi_rate_projections_1_latest_mappings_v3","time_partitioning":null,"view_query":"  \/* =================================================================== *\/ \n  \/* 1) Latest Register-Meter-Supply Mappings for Multi-Rate Projections *\/ \n  \/* =================================================================== *\/\n  \n--Select the list of latest MPXN-MSN mapping for electricity and multi rate only.\n\n\nWITH cte_latest_mappings AS(\nSELECT MPXN, installationHistory\nFROM(SELECT metadata.createdAt, MPXN, installationHistory\n            , ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY metadata.createdAt DESC) AS rn \n    FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`)\nWHERE rn=1\n)\n,\n\n--latest msn mapping\ncte_latest_mappings_msn AS(\n    SELECT MPXN, MSN, StartDate AS meterMappingEffectiveFrom, meterRegisterHistory\n    FROM (\n          SELECT MPXN, inst.MSN, inst.startDate, inst.meterRegisterHistory\n                , ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY inst.startDate DESC) AS rn2 \n          FROM cte_latest_mappings\n          INNER JOIN UNNEST (installationHistory) AS inst)\n    WHERE rn2=1\n),\n\n--latest register mapping\ncte_latest_mappings_msn_reg AS(\n    SELECT MPXN, MSN, meterMappingEffectiveFrom, startDate AS registerConfigEffectiveFrom, meterRegisters\n    FROM (\n          SELECT MPXN, MSN, meterMappingEffectiveFrom, regHist.startDate, regHist.meterRegisters\n                , ROW_NUMBER() OVER(PARTITION BY MPXN ORDER BY regHist.startDate DESC) AS rn3 \n          FROM cte_latest_mappings_msn\n          INNER JOIN UNNEST (meterRegisterHistory) AS regHist)\n    WHERE rn3=1\n),\n\n--remove cases where the entire row is duplicated\ncte_latest_mappings_msn_reg_dedup AS(\n    SELECT MPXN, MSN, meterMappingEffectiveFrom, registerConfigEffectiveFrom, reg.tier, reg.clockingTimeId, reg.timePatternRegime, reg.switchedLoadIndicator, reg.timeOfUseLabel\n    FROM cte_latest_mappings_msn_reg\n    INNER JOIN UNNEST (meterRegisters) AS reg\n    GROUP BY MPXN, MSN, meterMappingEffectiveFrom, registerConfigEffectiveFrom, reg.tier, reg.clockingTimeId, reg.timePatternRegime, reg.switchedLoadIndicator, reg.timeOfUseLabel\n),\n\n--remove when switchedLoadIndicator is null (This step might be not neccesary for multi-rate, I used in the past to clean some edge cases in single rate where both tier and clockingtimeid are null)\ncte_latest_mappings_msn_reg_dedup_clean AS(\n    SELECT MPXN, MSN, meterMappingEffectiveFrom, registerConfigEffectiveFrom, tier, clockingTimeId, timePatternRegime, timeOfUseLabel, switchedLoadIndicator\n    FROM cte_latest_mappings_msn_reg_dedup\n    --WHERE switchedLoadIndicator IS NOT NULL\n)\n--SELECT * FROM cte_latest_mappings_msn_reg_dedup_clean\n,\n\n--select multi rate meters \ncte_multi_rate AS(\n    SELECT a.MPXN, a.MSN, a.meterMappingEffectiveFrom, a.registerConfigEffectiveFrom, a.tier, a.clockingTimeId, a.timePatternRegime, a.timeOfUseLabel, a.switchedLoadIndicator\n    FROM cte_latest_mappings_msn_reg_dedup_clean a\n    INNER JOIN (SELECT MPXN FROM cte_latest_mappings_msn_reg_dedup_clean GROUP BY MPXN, MSN HAVING COUNT(clockingTimeId)=2) b\n    ON a.MPXN = b.MPXN\n    --WHERE clockingTimeId != 1\n)\n\n-- --Select multi-rate mpans\n-- cte_multi_rate_distinct AS(\n-- SELECT DISTINCT MPXN, MSN \n-- FROM cte_multi_rate\n-- )\n\nSELECT   MPXN,\n         MSN,\n         clockingTimeId,\n         timeOfUseLabel,\n        CASE \n          WHEN tier IS NOT NULL THEN tier\n          WHEN tier IS NULL AND timeOfUseLabel = 'anytime' THEN 0\n          WHEN tier IS NULL AND timeOfUseLabel = 'offpeak' THEN 0\n          WHEN tier IS NULL AND timeOfUseLabel = 'peak' THEN 1\n        END AS tier\n        --,switchedLoadIndicator\nFROM cte_multi_rate\nWHERE timeOfUseLabel IS NOT NULL\n--ORDER BY MPXN, clockingTimeId"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_2_read_intervals":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_2_read_intervals","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_2_read_intervals","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_2_read_intervals","table_id":"multi_rate_projections_2_read_intervals","time_partitioning":null,"view_query":"\/* ============================================================================ *\/\n\/* 2) Longest Actual Sub-Year Read Interval for Annualised Advance Calculation  *\/\n\/* ============================================================================ *\/\n\n-- Takes the last 15 months of  available smart readings. Fifteen months is used as it allows for a maximum interval\n-- between two readings of a year, with the latter read dated no more than three months earlier than the current\n-- date. The interval will always use the latest reading available, paired with the earliest reading no more than\n-- a year earlier than this date.\n\nWITH msd AS(\n  -- 15 months of MSD history, de-duplicated.\n  SELECT\n     msn\n    ,tier\n    ,snapshotTime\n    ,reading\n  FROM (\n    SELECT \n       value.ElectricityMidnightSnapshotReadingEventByMsn.msn\n      ,value.ElectricityMidnightSnapshotReadingEventByMsn.snapshotTime\n      ,reg.tier\n      ,reg.reading\n      ,ROW_NUMBER() OVER(\n        PARTITION BY value.ElectricityMidnightSnapshotReadingEventByMsn.msn, value.ElectricityMidnightSnapshotReadingEventByMsn.snapshotTime, tier \n        ORDER BY value.ElectricityMidnightSnapshotReadingEventByMsn.metadata.createdAt DESC) AS createdOrder\n    FROM \n      `data-engineering-prod.landing_andromeda.rac_msd_stripped_v1`\n    INNER JOIN\n      UNNEST(value.ElectricityMidnightSnapshotReadingEventByMsn.registers) AS reg\n    WHERE\n      DATE(PARTITIONTIME) >= DATE_ADD(CURRENT_DATE(), INTERVAL - 15 MONTH) -- one year plus 3 months\n      AND DATE(value.ElectricityMidnightSnapshotReadingEventByMsn.snapshotTime) >= DATE_ADD(CURRENT_DATE(), INTERVAL - 15 MONTH)\n    )\n  WHERE\n    createdOrder = 1\n), to_read AS (\n  -- get the latest read date for each msn (all tiers). This will be the 'to' reading date used to calculate the interval consumption\n  SELECT\n     msn\n    ,MAX(snapshotTime) AS maxDate\n    ,COUNT(DISTINCT tier) AS tierCount\n  FROM\n    msd\n  GROUP BY\n    msn\n), tier_counts AS (\n  -- reduce the set of reads to include only those dates on which the same number of tiers exist as the to_read\n  SELECT\n     msd.msn\n    ,snapshotTime\n    ,COUNT(DISTINCT tier) AS tierCount\n  FROM\n    msd\n  GROUP BY\n     msd.msn\n    ,snapshotTime\n), intervals AS (\n  -- calculate the difference between each read date and the latest reading\n  SELECT\n     to_read.msn\n    ,DATE_DIFF(DATE(to_read.maxDate), DATE(msd.snapshotTime), DAY) AS daysOld\n    ,to_read.maxDate AS toReadDate\n    ,msd.snapshotTime\n    --,msd.tier\n  FROM\n    msd\n  INNER JOIN \n    to_read\n      ON msd.msn = to_read.msn\n  INNER JOIN\n    tier_counts\n      ON  tier_counts.msn = msd.msn\n      AND tier_counts.tierCount = to_read.tierCount\n      AND tier_counts.snapshotTime = msd.snapshotTime\n), dates AS (\n  -- select the maximum interval (up to a year)\n  SELECT\n     msn\n    ,toReadDate\n    ,MIN(snapshotTime) AS fromReadDate\n    ,DATE_DIFF(DATE(toReadDate), DATE(MIN(snapshotTime)), DAY) AS intervalDays\n  FROM\n    intervals\n  WHERE\n    daysOld <= 365 -- want the maximum interval less than or equal to a year\n  GROUP BY\n     msn\n    ,toReadDate  \n), joined AS (\n  -- join the selected dates back to the reading data to attach values\n  SELECT\n     dates.msn\n    ,msd1.tier\n    ,dates.fromReadDate\n    ,msd1.reading AS fromReading\n    ,dates.toReadDate\n    ,msd2.reading AS toReading\n    ,dates.intervalDays\n    ,ROUND(msd2.reading - msd1.reading, 2) AS intervalConsumption\n  FROM\n    dates\n  INNER JOIN\n    msd AS msd1\n      ON  msd1.msn = dates.msn\n      AND msd1.snapshotTime = dates.fromReadDate\n  INNER JOIN\n    msd AS msd2\n      ON  msd2.msn = dates.msn\n      AND msd2.tier = msd1.tier\n      AND msd2.snapshotTime = dates.toReadDate\n)\nSELECT\n   msn\n  ,tier\n  ,fromReadDate\n  ,fromReading\n  ,toReadDate\n  ,toReading\n  ,intervalDays\n  ,intervalConsumption\nFROM\n joined\n-- TEST:\n-- this checks that there are no cases of different lengths of interval being used. Should return nothing\n-- SELECT\n--    f1.msn\n--   ,f1.fromReadDate AS fromDate1\n--   ,f2.fromReadDate AS fromDate2\n-- FROM (\n--   SELECT * FROM (\n--     SELECT \n--        msn\n--       ,ROW_NUMBER() OVER(PARTITION BY msn ORDER BY tier) AS tierOrder\n--       ,fromReadDate\n--     FROM\n--       joined  \n--   ) AS from_reads\n--   WHERE tierOrder = 1)\n--   AS f1\n-- INNER JOIN (\n--   SELECT * FROM (\n--     SELECT \n--        msn\n--       ,ROW_NUMBER() OVER(PARTITION BY msn ORDER BY tier) AS tierOrder\n--       ,fromReadDate\n--     FROM\n--       joined  \n--   ) AS from_reads\n--   WHERE tierOrder = 2)\n--   AS f2\n--     ON f2.msn = f1.msn\n-- WHERE\n--   f1.fromReadDate <> f2.fromReadDate"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_2_read_intervals_v2":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_2_read_intervals_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_2_read_intervals_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_2_read_intervals_v2","table_id":"multi_rate_projections_2_read_intervals_v2","time_partitioning":null,"view_query":"WITH \n\n\/* RAW CONSUMPTION DATA *\/\n-- fetch gas and electricity consumption data from latest versions\nelectricity_consumption AS (\n  SELECT metadata.createdAt,\n         mpan,\n         msn,\n         fromReading.readingDateTime AS fromDateTime,\n         toReading.readingDateTime AS toDateTime,\n         cons_reg.tier,\n         cons_reg.clockingTimeId,\n         from_reg.reading AS fromMeterReading,\n         to_reg.reading AS toMeterReading,\n         cons_reg.energy AS consumption,                   \n         fromReading.readingType AS fromReadingType,\n         toReading.readingType AS toReadingType,\n         --kafkaData.insertTime AS insertTime\n  FROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5` r\n  INNER JOIN UNNEST (consumption.registers) AS cons_reg\n  INNER JOIN UNNEST (fromReading.registers) AS from_reg ON cons_reg.tier=from_reg.tier\n  INNER JOIN UNNEST (toReading.registers) AS to_reg ON cons_reg.tier=to_reg.tier\n\n  UNION ALL\n\n  SELECT metadata.createdAt, \n         mpan,\n         msn, \n         fromDateTime, \n         toDateTime, \n         t.tier,\n         t.clockingTimeId,\n         t.fromMeterReading,\n         t.toMeterReading,\n         t.consumption,\n         IF(t.fromReadingType IS NULL, 'SmartReading', t.fromReadingType) AS fromReadingType,\n         IF(t.toReadingType IS NULL, 'SmartReading', t.toReadingType) AS toReadingType,\n         --kafkaData.insertTime AS insertTime\n\t\tFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4`\n    INNER JOIN UNNEST(tiers) t\n    \n\t  UNION ALL\n\n\t\tSELECT metadata.createdAt ,\n           mpan,\n           msn,\n           fromDateTime,\n           toDateTime,\n           t.tier,\n           t.clockingTimeId,\n           t.fromMeterReading,\n           t.toMeterReading,\n           t.consumption,\n           'SmartReading' as fromReadingType,\n           'SmartReading' as toReadingType,\n           --metadata.createdAt AS insertTime\n\t\tFROM `data-engineering-prod.landing_andromeda_secure.rac_historic_electricity_consumption` \n    INNER JOIN UNNEST(tiers) t\n\t\n),\n\n\/* CLEAN CONSUMPTION DATA *\/\n-- de-duplicating on mpxn, msn, tier, fromDate, toDate. Note that this doesn't prevent \n-- overlapping consumption (not problematic as we will extract the reads only)\nconsumption_dedupe AS (\n    SELECT\n       mpan AS mpxn\n      ,msn\n      ,tier\n      ,DATE(fromDateTime, 'Europe\/London') AS fromDate\n      ,DATE(toDateTime, 'Europe\/London') AS toDate\n      , fromDateTime\n      , toDateTime\n      ,fromMeterReading\n      ,fromReadingType\n      ,toMeterReading\n      ,toReadingType\n      ,createdAt\n    FROM (SELECT * ,ROW_NUMBER() OVER(PARTITION BY mpan, msn, tier, fromDateTime ORDER BY createdAt DESC) AS rn FROM electricity_consumption)\n    -- reviewer note (BS) removed partioning on toDateTime, which is no longer used\n\n\n  WHERE rn = 1\n)\n,\n\n\/* READS FROM CONSUMPTION *\/\n-- extract all meter readings (from and to) from consumption, allowing only one instance\n-- by mpxn, msn, tier, readingDate\nreads AS (\n  SELECT \n     mpxn\n    ,msn\n    ,tier\n    ,fromDate AS readingDate\n    ,fromDateTime AS readingDateTime\n    ,fromMeterReading AS meterReading\n    ,fromReadingType AS readingType\n  FROM consumption_dedupe\n  WHERE fromReadingType NOT LIKE '%stimate%'\n  ),\n  \n--   (\n--     SELECT \n--        *\n--       ,ROW_NUMBER() OVER(\n--           PARTITION BY mpxn, msn, tier, readingDate \n--           ORDER BY createdAt DESC\n--         ) AS rn\n--     FROM (\n-- --       SELECT\n-- --          mpxn\n-- --         ,msn\n-- --         ,tier\n-- --         ,fromDate AS readingDate\n-- --         , fromDateTime AS readingDateTime\n-- --         ,fromMeterReading AS meterReading\n-- --         ,fromReadingType AS readingType\n-- --         ,createdAt\n-- --       FROM\n-- --         consumption_dedupe\n-- --       UNION ALL\n--       SELECT\n--          mpxn\n--         ,msn\n--         ,tier\n--         ,toDate AS readingDate\n--         , toDateTime AS readingDateTime\n--         ,toMeterReading AS meterReading\n--         ,toReadingType AS readingType\n--         ,createdAt\n--       FROM\n--         consumption_dedupe\n--      )\n--   )\n--   WHERE\n--     rn = 1\n-- ),\n\n\n\ncte_unique_reads AS(\nSELECT DISTINCT       -- reviewer note (BS) added distinct to fix duplication\n      mpxn --AMBIGUOUS FIX: \n      , msn\n      , tier\n      , readingDateTime AS snapshotTime\n      , meterReading AS reading\nFROM reads\n)\n--SELECT * FROM cte_unique_reads WHERE msn = '13P0100188' ORDER BY snapshotTime DESC--LIMIT 1000\n,\n\nto_read AS (\n  -- get the latest read date for each msn (all tiers). This will be the 'to' reading date used to calculate the interval consumption\n  SELECT\n    mpxn  --AMBIGUOUS FIX:\n    , msn\n    ,MAX(snapshotTime) AS maxDate\n    ,COUNT(DISTINCT tier) AS tierCount\n  FROM\n    cte_unique_reads\n  GROUP BY\n    mpxn    --AMBIGUOUS FIX:\n    , msn\n),\n\ntier_counts AS (\n  -- reduce the set of reads to include only those dates on which the same number of tiers exist as the to_read\n  SELECT\n     a.mpxn   --AMBIGUOUS FIX:\n    ,a.msn\n    ,snapshotTime\n    ,COUNT(DISTINCT tier) AS tierCount\n  FROM\n    cte_unique_reads a\n  GROUP BY\n     a.mpxn  --AMBIGUOUS FIX: \n    , a.msn\n    ,snapshotTime\n),\n\nintervals AS (\n  -- calculate the difference between each read date and the latest reading\n  SELECT\n     b.mpxn --AMBIGUOUS FIX:\n    ,b.msn\n    ,DATE_DIFF(DATE(b.maxDate), DATE(a.snapshotTime), DAY) AS daysOld\n    ,b.maxDate AS toReadDate\n    ,a.snapshotTime\n    --,a.tier\n  FROM\n    cte_unique_reads a\n  INNER JOIN \n    to_read b\n      ON a.mpxn = b.mpxn --AMBIGUOUS FIX:\n      AND a.msn = b.msn\n  INNER JOIN\n    tier_counts c\n      ON c.mpxn = b.mpxn --AMBIGUOUS FIX:\n      AND  c.msn = a.msn\n      AND c.tierCount = b.tierCount\n      AND c.snapshotTime = a.snapshotTime\n),\n\ndates AS (\n  -- select the maximum interval (up to a year)\n  SELECT\n      mpxn --AMBIGUOUS FIX:\n    , msn\n    ,toReadDate\n    ,MIN(snapshotTime) AS fromReadDate\n    ,DATE_DIFF(DATE(toReadDate), DATE(MIN(snapshotTime)), DAY) AS intervalDays\n  FROM\n    intervals\n  WHERE\n    daysOld <= 365 -- want the maximum interval less than or equal to a year\n  GROUP BY\n      mpxn --AMBIGUOUS FIX:\n    , msn\n    ,toReadDate  \n),\n\njoined AS (\n  -- join the selected dates back to the reading data to attach values\n  SELECT\n     a.mpxn       --AMBIGUOUS FIX:\n    ,a.msn\n    ,b1.tier\n    ,a.fromReadDate\n    ,b1.reading AS fromReading\n    ,a.toReadDate\n    ,b2.reading AS toReading\n    ,a.intervalDays\n    ,ROUND(b2.reading - b1.reading, 2) AS intervalConsumption\n  FROM\n    dates a\n  INNER JOIN\n    cte_unique_reads AS b1\n      ON b1.mpxn = a.mpxn       --AMBIGUOUS FIX:\n      AND  b1.msn = a.msn\n      AND b1.snapshotTime = a.fromReadDate\n  INNER JOIN\n    cte_unique_reads AS b2\n      ON b2.mpxn = a.mpxn   --AMBIGUOUS FIX:\n      AND  b2.msn = a.msn\n      AND b2.tier = b1.tier\n      AND b2.snapshotTime = a.toReadDate\n)\nSELECT\n  mpxn --AMBIGUOUS FIX:\n  ,msn\n  ,tier\n  ,fromReadDate\n  ,fromReading\n  ,toReadDate\n  ,toReading\n  ,intervalDays\n  ,intervalConsumption\nFROM\n joined"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_3_coefficients":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_3_coefficients","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_3_coefficients","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_3_coefficients","table_id":"multi_rate_projections_3_coefficients","time_partitioning":null,"view_query":"\/* ====================================================================== *\/\n\/* 3) Cummulative Demand Coefficients for Annualised Advance Calculation  *\/\n\/* ====================================================================== *\/\n\n-- This view simply provides the demand coefficients used in the single rate personal projections\n-- calculation. These are profile class one coefficients, and should be replaced by more appropriate\n-- profile class two coefficients split by switched load indicator. They do, however, provide a \n-- reasonable view of seasonality.\n\nSELECT \n   date\n  ,ROUND(SUM(usageCoefficient) OVER(ORDER BY date),5) AS cumulativeUsageCoefficient\nFROM \n  `data-engineering-prod.product_andromeda_secure.electricity_coefficients_unrestricted_domestic`\nORDER BY\n  date\n  "},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_4_eacs":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_4_eacs","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_4_eacs","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_4_eacs","table_id":"multi_rate_projections_4_eacs","time_partitioning":null,"view_query":"\/* ================================ *\/\n\/* 4) Latest D0019 EAC By Register  *\/\n\/* ================================ *\/\n\n-- Locates the latest D0019 EAC for each register (split by Time Pattern Regime ID) \n\nWITH d19 AS (\n  SELECT \n     record.InstructionHeader.meteringSystemId AS mpan\n    ,PARSE_DATE('%Y%m%d', eah.effectiveFromSettlementDate) AS effectiveFromDate\n    ,CAST(ead.timePatternRegime AS INT64) AS timePatternRegime\n    ,CAST(ead.estimatedAnnualConsumption AS FLOAT64) AS estimatedAnnualConsumption \n    -- de-duplicating events\n    ,ROW_NUMBER() OVER(PARTITION BY record.InstructionHeader.meteringSystemId, ead.timePatternRegime, eah.effectiveFromSettlementDate ORDER BY metadata.createdAt DESC) AS createdOrder\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.flow_D0019001_split_v2` AS zin\n  INNER JOIN\n    UNNEST(record.InstructionHeader.estimatedAnnualConsumptionHeader) AS eah\n  INNER JOIN\n    UNNEST(eah.estimatedAnnualConsumptionDetails) AS ead\n), latest AS (\n  SELECT\n     mpan\n    ,effectiveFromDate\n    ,timePatternRegime\n    ,estimatedAnnualConsumption\n    -- latest EACs only for an MPAN\n    ,RANK() OVER(PARTITION BY mpan ORDER BY effectiveFromDate DESC) AS effectiveOrder\n  FROM\n    d19\n  WHERE\n    createdOrder = 1\n  )\nSELECT \n   mpan\n  ,effectiveFromDate\n  ,latest.timePatternRegime\n  ,estimatedAnnualConsumption\nFROM\n  latest\nWHERE\n  effectiveOrder = 1\n"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_5_cleaned_intervals":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_5_cleaned_intervals","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_5_cleaned_intervals","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_5_cleaned_intervals","table_id":"multi_rate_projections_5_cleaned_intervals","time_partitioning":null,"view_query":"\/* ================================================= *\/\n\/* 5) Latest Interval Data for Two Rate Suplies Only *\/\n\/* ================================================= *\/\n\n-- Limits the interval data from 2) to just the supplies mapped in 1). Ensures that in all cases we have an interval\n-- for both registers, not just one\n\nWITH mapped AS (\n  -- get latest intervals (MSN level) and map them to supply using view 1)\n  SELECT\n     map.MPXN AS mpan\n    ,map.tier\n    ,map.clockingTimeId\n    ,map.timeOfUseLabel\n    ,int.fromReadDate\n    ,int.fromReading\n    ,int.toReadDate\n    ,int.toReading\n    ,int.intervalConsumption\n  FROM\n    `data-engineering-prod.product_andromeda_secure.multi_rate_projections_2_read_intervals_v2` AS int\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.multi_rate_projections_1_latest_mappings_v3`\n  AS map\n        ON map.mpxn = int.mpxn --AMBIGUOUS FIX:This mapping makes that his cte is not providing the mpxn, es just confirming that we are using intervals only for the latest mapping\n        AND  map.msn = int.msn\n        AND int.tier = map.tier\n  WHERE int.intervalConsumption > 0       \n), reg_count_check AS (\n-- this asserts that the TPR join condition is met for both, not just one, register\n  SELECT\n     m.mpan\n    ,tier\n    ,clockingTimeId\n    , timeOfUseLabel\n    ,fromReadDate\n    ,fromReading\n    ,toReadDate\n    ,toReading\n    ,intervalConsumption\n  FROM\n    mapped AS m\n  INNER JOIN (\n    SELECT mpan FROM mapped GROUP BY mpan HAVING COUNT(clockingTimeId) = 2) ct\n      ON m.mpan = ct.MPAN\n)\nSELECT\n     mpan\n    ,tier\n    ,clockingTimeId\n    ,timeOfUseLabel\n    ,fromReadDate\n    ,fromReading\n    ,toReadDate\n    ,toReading\n    ,intervalConsumption\nFROM\n  reg_count_check\n--WHERE intervalConsumption > 0  \n-- test:\n-- this should return no results\n-- SELECT mpan, count(*) from reg_count_check group by mpan HAVING COUNT(*) <> 2\n-- this checks that there are no cases of different lengths of interval being used. Should return nothing\n-- SELECT\n--    f1.mpan\n--   ,f1.fromReadDate AS fromDate1\n--   ,f2.fromReadDate AS fromDate2\n-- FROM (\n--   SELECT * FROM (\n--     SELECT \n--        mpan\n--       ,ROW_NUMBER() OVER(PARTITION BY mpan ORDER BY tier) AS tierOrder\n--       ,fromReadDate\n--     FROM\n--       mapped  \n--   ) AS from_reads\n--   WHERE tierOrder = 1)\n--   AS f1\n-- INNER JOIN (\n--   SELECT * FROM (\n--     SELECT \n--        mpan\n--       ,ROW_NUMBER() OVER(PARTITION BY mpan ORDER BY tier) AS tierOrder\n--       ,fromReadDate\n--     FROM\n--       mapped  \n--   ) AS from_reads\n--   WHERE tierOrder = 2)\n--   AS f2\n--     ON f2.mpan = f1.mpan\n-- WHERE\n--   f1.fromReadDate <> f2.fromReadDate\n"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_6_cleaned_eac":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_6_cleaned_eac","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_6_cleaned_eac","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_6_cleaned_eac","table_id":"multi_rate_projections_6_cleaned_eac","time_partitioning":null,"view_query":"\/* ========================================================== *\/\n\/* 6) Latest EAC Data For Two-Rate Only With Cleaning Applied *\/\n\/* ========================================================== *\/\n\n-- EACs are applied to the registers mapped in view 1), and cleansing assures that EACs are only used\n-- in cases where we are able to find an applicable value for both registers, not just one.\n-- Update: EAC greater than 25000 are excluded as presumably those are wrong estimates. In those cases the projection will be solely based on the AA\n\nWITH mapped AS (\n  -- EACs for the two rate supplies mapped in view 1)\n  SELECT\n     mpan\n    ,effectiveFromDate\n    ,map.tier\n    ,map.timeOfUseLabel\n    ,e.timePatternRegime\n    ,estimatedAnnualConsumption\n  FROM\n  `data-engineering-prod.product_andromeda_secure.multi_rate_projections_4_eacs` AS e\n  -- join on latest mappings to exclude single rate and mis-mapped TPRs\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.multi_rate_projections_1_latest_mappings_v3` AS map\n        ON  map.MPXN = e.mpan\n        AND map.clockingTimeId = e.timePatternRegime\n  -- filter out cases where EAC greater than 25000 as this is pressumably a wrong estimate.       \n  WHERE estimatedAnnualConsumption < 25000     \n        \n), reg_count_check AS (\n-- this asserts that the TPR join condition is met for both, not just one, register\n  SELECT\n     m.mpan\n    ,tier\n    ,timeOfUseLabel\n    ,effectiveFromDate\n    ,timePatternRegime\n    ,estimatedAnnualConsumption\n  FROM\n    mapped AS m\n  INNER JOIN (\n              SELECT mpan \n              FROM mapped \n              GROUP BY mpan \n              HAVING COUNT(timePatternRegime) = 2\n              ) ct\n  ON m.mpan = ct.MPAN\n)\nSELECT\n   mpan\n  ,tier\n  ,timeOfUseLabel\n  ,effectiveFromDate\n  ,timePatternRegime\n  ,estimatedAnnualConsumption\nFROM\n  reg_count_check\n\n-- test:\n-- this should return no results\n--SELECT mpan, count(*) from reg_count_check group by mpan HAVING COUNT(*) <> 2"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_7_annualised_advances":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_7_annualised_advances","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_7_annualised_advances","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_7_annualised_advances","table_id":"multi_rate_projections_7_annualised_advances","time_partitioning":null,"view_query":"\/* ========================================================= *\/\n\/* 7) Annualised Advances For Two Rate Supplies, By Register *\/\n\/* ========================================================= *\/\n\n-- Demand coefficients (3) are used to establish the proportion of a year of consumption deemed to be used within the \n-- interval period (5). This is used to give a deemed year of consumption for each register\n\nSELECT \n   int.mpan\n  ,int.tier\n  ,int.clockingTimeId\n  ,int.timeOfUseLabel\n  ,int.fromReadDate\n  ,int.fromReading\n  ,c1.cumulativeUsageCoefficient AS fromCoefficient\n  ,int.toReadDate\n  ,int.toReading\n  ,int.intervalConsumption\n  ,c2.cumulativeUsageCoefficient AS toCoefficient\n  ,ROUND(c2.cumulativeUsageCoefficient - c1.cumulativeUsageCoefficient, 3) AS coefficientAdvance\n  ,ROUND(SAFE_DIVIDE(intervalConsumption, (c2.cumulativeUsageCoefficient - c1.cumulativeUsageCoefficient)), 1) AS annualisedAdvance\nFROM\n  `data-engineering-prod.product_andromeda_secure.multi_rate_projections_5_cleaned_intervals` AS int\nINNER JOIN\n  -- get the cumulative coefficient value applicable to the earlier read date from the consumption interval\n  `data-engineering-prod.product_andromeda_secure.multi_rate_projections_3_coefficients` AS c1\n     ON c1.date = DATE(int.fromReadDate)\nINNER JOIN\n  -- get the cumulative coefficient value applicable to the later read date from the consumption interval\n  `data-engineering-prod.product_andromeda_secure.multi_rate_projections_3_coefficients` AS c2\n     ON c2.DATE = DATE(int.toReadDate)\nWHERE \n  DATE_DIFF(DATE(int.toReadDate), DATE(int.fromReadDate), DAY) >= 14 -- two week advance minimum used... this could be varied\n  -- and mpan in ('1100003670691', '2372921124213', '2372463777810')"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_8_consumption_projections":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_8_consumption_projections","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_8_consumption_projections","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_8_consumption_projections","table_id":"multi_rate_projections_8_consumption_projections","time_partitioning":null,"view_query":"\/* ========================================================== *\/\n\/* 8) Personal Projection Calculation For Multi-Rate Supplies *\/\n\/* ========================================================== *\/\n\n-- Uses a weighted average of EAC and annualised advance based on the le\nWITH eac_aa AS (\n  SELECT\n     COALESCE(a.mpan, e.mpan) AS mpan\n    ,COALESCE(a.tier, e.tier) AS tier\n    ,COALESCE(a.clockingTimeId, e.timePatternRegime) AS clockingTimeId\n    ,COALESCE(a.timeOfUseLabel, e.timeOfUseLabel) AS timeOfUseLabel\n    ,toReadDate AS aaEffectiveFrom\n    ,fromReadDate\n    ,fromReading\n    ,fromCoefficient\n    ,toReadDate\n    ,toReading\n    ,intervalConsumption\n    ,toCoefficient\n    ,IF(coefficientAdvance>1,1,coefficientAdvance) AS coefficientAdvance -- some years might have more than 1 Easter and the seasonality changes what leads to coefficientAdvance greater than 1 and therefore negative eacCummulativeCoefficient (line 48)\n    ,annualisedAdvance\n    ,effectiveFromDate AS eacEffectiveFrom\n    ,estimatedAnnualConsumption\n  FROM\n    `data-engineering-prod.product_andromeda_secure.multi_rate_projections_7_annualised_advances` AS a\n  FULL OUTER JOIN\n    `data-engineering-prod.product_andromeda_secure.multi_rate_projections_6_cleaned_eac` AS e\n      ON  a.mpan = e.mpan\n      AND a.tier = e.tier\n), cases AS (\nSELECT\n   mpan\n  ,tier\n  ,clockingTimeId\n  ,timeOfUseLabel\n  ,CASE \n    WHEN aaEffectiveFrom IS NULL THEN 'eac'\n    WHEN eacEffectiveFrom IS NULL THEN 'aa'\n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NOT NULL THEN 'combined'\n      END AS projectionSource\n  ,CASE \n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NULL THEN 1.0\n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NOT NULL THEN coefficientAdvance\n    ELSE 0.0\n      END AS aaCummulativeCoefficient\n  ,CASE \n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NULL THEN 0.0\n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NOT NULL THEN ROUND(1 - coefficientAdvance, 3)\n    ELSE 1.0\n      END AS eacCummulativeCoefficient\n  ,CASE \n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NOT NULL AND DATE_DIFF(DATE(aaEffectiveFrom, \"Europe\/London\"),eacEffectiveFrom, DAY) > 0 THEN DATE(aaEffectiveFrom, \"Europe\/London\")\n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NOT NULL AND DATE_DIFF(eacEffectiveFrom,DATE(aaEffectiveFrom, \"Europe\/London\"), DAY) >= 0 THEN eacEffectiveFrom\n    WHEN aaEffectiveFrom IS NOT NULL AND eacEffectiveFrom IS NULL THEN DATE(aaEffectiveFrom, \"Europe\/London\")\n    WHEN eacEffectiveFrom IS NOT NULL AND aaEffectiveFrom IS NULL THEN eacEffectiveFrom\n      END AS effectiveFrom\n  ,aaEffectiveFrom\n  ,fromReadDate\n  ,fromReading\n  ,toReadDate\n  ,toReading\n  ,intervalConsumption\n  ,coefficientAdvance\n  ,annualisedAdvance\n  ,eacEffectiveFrom\n  ,estimatedAnnualConsumption  \nFROM\n  eac_aa\nORDER BY\n  mpan,tier\n)\nSELECT\n   mpan\n  ,tier\n  ,clockingTimeId\n  ,timeOfUseLabel\n  ,projectionSource\n  ,aaCummulativeCoefficient\n  ,eacCummulativeCoefficient\n  ,ROUND((aaCummulativeCoefficient * IFNULL(annualisedAdvance,0)) + (eacCummulativeCoefficient * IFNULL(estimatedAnnualConsumption,0)),1) AS projectedConsumption\n  ,effectiveFrom\n  ,aaEffectiveFrom\n  ,fromReadDate\n  ,fromReading\n  ,toReadDate\n  ,toReading\n  ,intervalConsumption\n  ,coefficientAdvance\n  ,annualisedAdvance\n  ,eacEffectiveFrom\n  ,estimatedAnnualConsumption\nFROM\n  cases\nORDER BY mpan\n-- tests: each should return no results\n--select mpan, tier, count(*) from cases group by mpan, tier having count(*) <> 1\n-- union all\n--select mpan, null as tier, count(*) from cases group by mpan having count(*) <> 2"},"data-engineering-prod:product_andromeda_secure.multi_rate_projections_9_structured_consumption_projections":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.multi_rate_projections_9_structured_consumption_projections","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_9_structured_consumption_projections","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/multi_rate_projections_9_structured_consumption_projections","table_id":"multi_rate_projections_9_structured_consumption_projections","time_partitioning":null,"view_query":"\/* ================================== *\/\n\/* 9) Structured Personal Projections *\/\n\/* ================================== *\/\n\n-- Takes the latest personal projection and backing data and outputs with a nested structure resembling the \n-- desired topic schema for the electricity multi-rate event type\n\n\nSELECT \n  STRUCT(\n     mpan\n    ,TIMESTAMP(effectiveFrom) AS effectiveFrom\n    ,ARRAY_AGG(STRUCT(clockingTimeId, timeOfUseLabel, projectedConsumption)) AS projectedRegisterConsumption\n    ,STRUCT(\n       projectionSource\n      ,STRUCT(\n        STRUCT(\n           fromReadDate AS fromReadingDate\n          ,toReadDate AS toReadingDate\n          ,ARRAY_AGG(STRUCT(\n             clockingTimeId, timeOfUseLabel\n            ,fromReading AS fromMeterRegisterReading\n            ,toReading AS toMeterRegisterReading\n          )) AS ElectricityRegisterReadings\n          ,aaCummulativeCoefficient AS cummulativeCoefficient\n          ) AS annualisedAdvancePersonalProjectionOrigin\n        ,STRUCT(\n          ARRAY_AGG(STRUCT(\n            clockingTimeId, timeOfUseLabel, estimatedAnnualConsumption\n            )) AS ElectricityRegisterEstimatedAnnualConsumption\n          ,eacCummulativeCoefficient AS cummulativeCoefficient          \n          ) AS estimatedAnnualConsumptionPersonalProjectionOrigin\n        ) AS ElectricityPersonalProjectionOrigin\n      ) AS basedOn\n    ) AS ElectricityAnnualProjectionEvent\nFROM \n  `data-engineering-prod.product_andromeda_secure.multi_rate_projections_8_consumption_projections`   \nGROUP BY\n   mpan\n  ,effectiveFrom\n  ,eacEffectiveFrom\n  ,eacCummulativeCoefficient\n  ,fromReadDate\n  ,toReadDate\n  ,aaCummulativeCoefficient\n  ,projectionSource\n "},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_0_no_smart_reads_in_six_months":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_0_no_smart_reads_in_six_months","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_0_no_smart_reads_in_six_months","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_0_no_smart_reads_in_six_months","table_id":"non_comms_constraints_0_no_smart_reads_in_six_months","time_partitioning":null,"view_query":"SELECT DISTINCT\n  gt.accountNumber\nFROM\n  `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill` gt\nLEFT JOIN\n  `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads` rd\n    ON rd.msn = gt.msn\nWHERE\n  rd.msn IS NULL"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_1_no_reads_on_or_since_last_gt_bill_date":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_1_no_reads_on_or_since_last_gt_bill_date","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_1_no_reads_on_or_since_last_gt_bill_date","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_1_no_reads_on_or_since_last_gt_bill_date","table_id":"non_comms_constraints_1_no_reads_on_or_since_last_gt_bill_date","time_partitioning":null,"view_query":"  SELECT DISTINCT accountNumber\n--      er.msn\n--     ,accountNumber\n--     ,migrationReadDate\n--     ,readDateTime\n  FROM (\n    SELECT\n       gt.msn\n      ,gt.migrationReadDate\n      ,gt.accountNumber\n      ,gas.readDateTime\n      ,ROW_NUMBER() OVER(PARTITION BY gas.msn ORDER BY gas.readDateTime) readOrder\n    FROM (\n      SELECT msn, accountNumber, migrationReadDate FROM `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill`) AS gt\n    LEFT JOIN (\n      SELECT DISTINCT msn, readDateTime FROM  `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads`) AS gas\n        ON  gt.msn = gas.msn \n        AND gt.migrationReadDate <= DATE(gas.readDateTime)\n  ) AS er\n  -- check for reads in last 6 months\n  INNER JOIN (\n    SELECT DISTINCT msn FROM `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads`) rr\n      ON rr.msn = er.msn\n  WHERE\n    --readOrder = \n    readDateTime IS NULL"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_2_different_read_on_gt_billing_date":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_2_different_read_on_gt_billing_date","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_2_different_read_on_gt_billing_date","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_2_different_read_on_gt_billing_date","table_id":"non_comms_constraints_2_different_read_on_gt_billing_date","time_partitioning":null,"view_query":"WITH fetch_reads AS (\n  SELECT\n    rds.*\n  FROM\n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads` AS rds\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_earliest_read_since_gt_bill` earliest_read\n      ON  rds.msn = earliest_read.msn\n      AND rds.readDateTime = earliest_read.readDateTime\n), mapped_elec AS (\n  SELECT\n     elec.msn\n    ,elec.fuel\n    ,elec.readDateTime\n    ,elec.tier\n    --,map.clockingTimeId\n    ,map.meterRegisterId\n    ,FLOOR(elec.reading) AS reading\n  FROM\n    fetch_reads AS elec\n  INNER JOIN\n    `data-engineering-prod.u_barney_scott.2019_10_28_meter_mappings` AS map\n      ON  elec.msn = map.msn\n      AND elec.tier = map.tier\n  WHERE\n    elec.fuel = 'electricity'\n), adj_elec AS (\n  SELECT\n       gt.msn\n      ,gt.accountNumber\n      --,fuel\n      ,gt.migrationRead\n      ,gt.migrationReadDate\n      ,gt.migrationReadType\n      ,gt.meterRegisterId\n      ,chg.readDateTime\n      ,chg.reading\n      ,CASE\n        WHEN gt.migrationRead < chg.reading - 30 THEN 'charge greater than \u00a35'\n        WHEN gt.migrationRead >= chg.reading - 30 AND gt.migrationRead < chg.reading THEN 'charge less than \u00a35'       \n        WHEN gt.migrationRead > chg.reading + 30 THEN 'credit greater than \u00a35' \n        WHEN gt.migrationRead <= chg.reading + 30 AND gt.migrationRead > chg.reading + 1 THEN 'credit less than \u00a35'       \n        ELSE 'equal' END AS adjustmentType\n      ,ROUND(gt.migrationRead - chg.reading, 1) AS consumptionAdjustment\n      ,DATE_DIFF(DATE(chg.readDateTime), gt.migrationReadDate, DAY) AS adjustmentDays\n  FROM \n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill` AS gt\n  INNER JOIN\n    mapped_elec AS chg\n      ON  gt.msn = chg.msn\n      AND gt.meterRegisterId = chg.meterRegisterId\n      AND gt.migrationReadDate <= DATE(chg.readDateTime)\n), adj_gas AS (\n  SELECT\n       gt.msn\n      ,gt.accountNumber\n      --,fuel\n      ,gt.migrationRead\n      ,gt.migrationReadDate\n      ,gt.migrationReadType\n      ,chg.readDateTime\n      ,FLOOR(chg.reading) AS reading\n      ,CASE\n        WHEN gt.migrationRead < FLOOR(chg.reading) - 30 THEN 'charge greater than \u00a35'\n        WHEN gt.migrationRead >= FLOOR(chg.reading) - 30 AND gt.migrationRead < FLOOR(chg.reading) THEN 'charge less than \u00a35'       \n        WHEN gt.migrationRead > FLOOR(chg.reading) + 30 THEN 'credit greater than \u00a35' \n        WHEN gt.migrationRead <= FLOOR(chg.reading) + 30 AND gt.migrationRead > FLOOR(chg.reading) + 1 THEN 'credit less than \u00a35'       \n        ELSE 'equal' END AS adjustmentType\n      ,ROUND(gt.migrationRead - FLOOR(chg.reading), 1) AS consumptionAdjustment\n      ,DATE_DIFF(DATE(chg.readDateTime), gt.migrationReadDate, DAY) AS adjustmentDays\n  FROM \n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill` AS gt\n  INNER JOIN\n    fetch_reads AS chg\n      ON  gt.msn = chg.msn\n      AND gt.migrationReadDate <= DATE(chg.readDateTime)\n  WHERE chg.fuel = 'gas'\n)\nSELECT DISTINCT(accountNumber) FROM adj_elec WHERE adjustmentDays = 0 AND adjustmentType <> 'equal'\nUNION DISTINCT\nSELECT DISTINCT(accountNumber) FROM adj_gas WHERE adjustmentDays = 0 AND adjustmentType <> 'equal'\n\n"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_3_have_reads_since_gt_last_bill_date":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_3_have_reads_since_gt_last_bill_date","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_3_have_reads_since_gt_last_bill_date","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_3_have_reads_since_gt_last_bill_date","table_id":"non_comms_constraints_3_have_reads_since_gt_last_bill_date","time_partitioning":null,"view_query":"WITH fetch_reads AS (\n  SELECT\n    rds.*\n  FROM\n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads` AS rds\n  INNER JOIN\n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_earliest_read_since_gt_bill` earliest_read\n      ON  rds.msn = earliest_read.msn\n      AND rds.readDateTime = earliest_read.readDateTime\n), mapped_elec AS (\n  SELECT\n     elec.msn\n    ,elec.fuel\n    ,elec.readDateTime\n    ,elec.tier\n    --,map.clockingTimeId\n    ,map.meterRegisterId\n    ,FLOOR(elec.reading) AS reading\n  FROM\n    fetch_reads AS elec\n  INNER JOIN\n    `data-engineering-prod.u_barney_scott.2019_10_28_meter_mappings` AS map\n      ON  elec.msn = map.msn\n      AND elec.tier = map.tier\n  WHERE\n    elec.fuel = 'electricity'\n), adj_elec AS (\n  SELECT\n       gt.msn\n      ,gt.accountNumber\n      --,fuel\n      ,gt.migrationRead\n      ,gt.migrationReadDate\n      ,gt.migrationReadType\n      ,gt.meterRegisterId\n      ,chg.readDateTime\n      ,chg.reading\n      ,CASE\n        WHEN gt.migrationRead < chg.reading - 30 THEN 'charge greater than \u00a35'\n        WHEN gt.migrationRead >= chg.reading - 30 AND gt.migrationRead < chg.reading THEN 'charge less than \u00a35'       \n        WHEN gt.migrationRead > chg.reading + 30 THEN 'credit greater than \u00a35' \n        WHEN gt.migrationRead <= chg.reading + 30 AND gt.migrationRead > chg.reading + 1 THEN 'credit less than \u00a35'       \n        ELSE 'equal' END AS adjustmentType\n      ,ROUND(gt.migrationRead - chg.reading, 1) AS consumptionAdjustment\n      ,DATE_DIFF(DATE(chg.readDateTime), gt.migrationReadDate, DAY) AS adjustmentDays\n  FROM \n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill` AS gt\n  INNER JOIN\n    mapped_elec AS chg\n      ON  gt.msn = chg.msn\n      AND gt.meterRegisterId = chg.meterRegisterId\n      AND gt.migrationReadDate <= DATE(chg.readDateTime)\n), adj_gas AS (\n  SELECT\n       gt.msn\n      ,gt.accountNumber\n      --,fuel\n      ,gt.migrationRead\n      ,gt.migrationReadDate\n      ,gt.migrationReadType\n      ,chg.readDateTime\n      ,FLOOR(chg.reading) AS reading\n      ,CASE\n        WHEN gt.migrationRead < FLOOR(chg.reading) - 30 THEN 'charge greater than \u00a35'\n        WHEN gt.migrationRead >= FLOOR(chg.reading) - 30 AND gt.migrationRead < FLOOR(chg.reading) THEN 'charge less than \u00a35'       \n        WHEN gt.migrationRead > FLOOR(chg.reading) + 30 THEN 'credit greater than \u00a35' \n        WHEN gt.migrationRead <= FLOOR(chg.reading) + 30 AND gt.migrationRead > FLOOR(chg.reading) + 1 THEN 'credit less than \u00a35'       \n        ELSE 'equal' END AS adjustmentType\n      ,ROUND(gt.migrationRead - FLOOR(chg.reading), 1) AS consumptionAdjustment\n      ,DATE_DIFF(DATE(chg.readDateTime), gt.migrationReadDate, DAY) AS adjustmentDays\n  FROM \n    `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill` AS gt\n  INNER JOIN\n    fetch_reads AS chg\n      ON  gt.msn = chg.msn\n      AND gt.migrationReadDate <= DATE(chg.readDateTime)\n  WHERE chg.fuel = 'gas'\n)\nSELECT DISTINCT(accountNumber) FROM adj_elec WHERE adjustmentDays <> 0 \nUNION DISTINCT\nSELECT DISTINCT(accountNumber) FROM adj_gas WHERE adjustmentDays <> 0\n\n"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_earliest_after_or_latest_read_before_gt_bill":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_earliest_after_or_latest_read_before_gt_bill","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_earliest_after_or_latest_read_before_gt_bill","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_earliest_after_or_latest_read_before_gt_bill","table_id":"non_comms_constraints_base_data_earliest_after_or_latest_read_before_gt_bill","time_partitioning":null,"view_query":"\nWITH earliest_latest AS (\n  SELECT  \n       msn\n      ,accountNumber\n      ,fuel\n      ,migrationReadDate\n      ,readDateTime\n      ,ROW_NUMBER() OVER(PARTITION BY msn, accountNumber ORDER BY readDateTime DESC) AS orderOf\n  FROM (\n    SELECT\n         msn\n        ,accountNumber\n        ,fuel\n        ,migrationReadDate\n        ,readDateTime\n    FROM\n      `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_earliest_read_since_gt_bill`\n    UNION DISTINCT\n    SELECT\n         msn\n        ,accountNumber\n        ,fuel\n        ,migrationReadDate\n        ,readDateTime\n    FROM\n      `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_read_before_gt_bill`\n  )\n) \nSELECT\n       msn\n      ,accountNumber\n      ,fuel\n      ,migrationReadDate\n      ,readDateTime\nFROM\n  earliest_latest\nWHERE\n  orderOf = 1\n"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_earliest_read_since_gt_bill":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_earliest_read_since_gt_bill","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_earliest_read_since_gt_bill","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_earliest_read_since_gt_bill","table_id":"non_comms_constraints_base_data_earliest_read_since_gt_bill","time_partitioning":null,"view_query":"  SELECT \n     er.msn\n    ,accountNumber\n    ,fuel\n    ,migrationReadDate\n    ,readDateTime\n  FROM (\n    SELECT\n       gt.msn\n      ,gt.migrationReadDate\n      ,gt.accountNumber\n      ,rd.fuel\n      ,rd.readDateTime\n      ,ROW_NUMBER() OVER(PARTITION BY rd.msn ORDER BY rd.readDateTime) readOrder\n    FROM (\n      SELECT msn, accountNumber, migrationReadDate FROM `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill`) AS gt\n    INNER JOIN (\n      SELECT DISTINCT fuel, msn, readDateTime FROM  `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads`\n) AS rd\n        ON  gt.msn = rd.msn \n        AND gt.migrationReadDate <= DATE(rd.readDateTime)\n  ) AS er\n  WHERE\n    readOrder = 1"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_gentrack_latest_bill","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_gentrack_latest_bill","table_id":"non_comms_constraints_base_data_gentrack_latest_bill","time_partitioning":null,"view_query":"  -- latest Gentrack bill and read\nWITH gas AS (\n  SELECT\n     gt.msn\n    ,gt.accountNumber\n    ,meterRegisterId\n    ,migrationRead\n    ,migrationReadDate\n    ,migrationReadType\n  FROM (\n    SELECT \n       Meter_Serial_No AS msn\n      ,Account_No AS accountNumber\n      , Register_Name AS meterRegisterId\n      ,Current_Read AS migrationRead\n      ,Current_Read_Date AS migrationReadDate\n      ,Current_Read_Type_Code AS migrationReadType\n      ,ROW_NUMBER() OVER(PARTITION BY Account_No ORDER BY Current_Read_Date DESC, Created_Datetime DESC) AS invOrder\n    FROM \n      `data-engineering-prod.reporting_billing.v_Invoice_Register` inv\n    INNER JOIN\n      `data-engineering-prod.reporting_billing.v_Invoice` inv2\n        ON inv.Invoice_ID = inv2.Invoice_ID\n    WHERE\n      (Retailer_Code = 'OVOE') -- GAS OR (Retailer_Code = 'OVO')\n  ) gt\n  WHERE\n    invOrder = 1\n    AND migrationReadDate >= DATE_ADD(CURRENT_DATE(), INTERVAL - 95 DAY)\n), elec AS (\n  SELECT\n     gt.msn\n    ,gt.accountNumber\n    ,meterRegisterId\n    ,migrationRead\n    ,migrationReadDate\n    ,migrationReadType\n  FROM (\n    SELECT \n       Meter_Serial_No AS msn\n      ,Account_No AS accountNumber\n      , Register_Name AS meterRegisterId\n      ,Current_Read AS migrationRead\n      ,Current_Read_Date AS migrationReadDate\n      ,Current_Read_Type_Code AS migrationReadType\n      ,ROW_NUMBER() OVER(PARTITION BY Account_No ORDER BY Current_Read_Date DESC, Created_Datetime DESC) AS invOrder\n    FROM \n      `data-engineering-prod.reporting_billing.v_Invoice_Register` inv\n    INNER JOIN\n      `data-engineering-prod.reporting_billing.v_Invoice` inv2\n        ON inv.Invoice_ID = inv2.Invoice_ID\n    WHERE\n      (Retailer_Code = 'OVO') -- ELEC \n  ) gt\n  WHERE\n    invOrder = 1\n    AND migrationReadDate >= DATE_ADD(CURRENT_DATE(), INTERVAL - 95 DAY)\n)\nSELECT * FROM elec\nUNION ALL\nSELECT * FROM gas"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_latest_read_before_gt_bill":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_latest_read_before_gt_bill","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_latest_read_before_gt_bill","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_latest_read_before_gt_bill","table_id":"non_comms_constraints_base_data_latest_read_before_gt_bill","time_partitioning":null,"view_query":"  SELECT \n     er.msn\n    ,accountNumber\n    ,fuel\n    ,migrationReadDate\n    ,readDateTime\n  FROM (\n    SELECT\n       gt.msn\n      ,gt.migrationReadDate\n      ,gt.accountNumber\n      ,rd.fuel\n      ,rd.readDateTime\n      ,ROW_NUMBER() OVER(PARTITION BY rd.msn ORDER BY rd.readDateTime DESC) readOrder\n    FROM (\n      SELECT msn, accountNumber, migrationReadDate FROM `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_gentrack_latest_bill`) AS gt\n    INNER JOIN (\n      SELECT DISTINCT fuel, msn, readDateTime FROM  `data-engineering-prod.product_andromeda_secure.non_comms_constraints_base_data_latest_reads`\n) AS rd\n        ON  gt.msn = rd.msn \n        AND gt.migrationReadDate > DATE(rd.readDateTime)\n  ) AS er\n  WHERE\n    readOrder = 1"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_latest_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_base_data_latest_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_latest_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_base_data_latest_reads","table_id":"non_comms_constraints_base_data_latest_reads","time_partitioning":null,"view_query":"WITH e_read AS (\n  -- elec recent reads\n  SELECT\n     msn\n    ,'electricity' AS fuel\n    ,readDateTime\n    ,tier\n    ,reading\n  FROM (\n    SELECT \n       value.ElectricityMidnightSnapshotReadingEventByMsn.msn AS msn\n      ,value.ElectricityMidnightSnapshotReadingEventByMsn.snapshotTime AS readDateTime\n      ,tiers.tier\n      ,tiers.reading\n      ,ROW_NUMBER() OVER(\n        PARTITION BY value.ElectricityMidnightSnapshotReadingEventByMsn.msn, value.ElectricityMidnightSnapshotReadingEventByMsn.snapshotTime, tiers.tier\n        ORDER BY value.ElectricityMidnightSnapshotReadingEventByMsn.metadata.createdAt DESC) AS orderReceived\n    FROM \n      `data-engineering-prod.landing_andromeda.rac_msd_stripped_v1`\n    INNER JOIN\n      UNNEST(value.ElectricityMidnightSnapshotReadingEventByMsn.registers) AS tiers\n    WHERE\n      DATE(PARTITIONTIME) >= DATE_ADD(CURRENT_DATE(), INTERVAL -6 MONTH)\n      AND DATE(value.ElectricityMidnightSnapshotReadingEventByMsn.snapshotTime)  >= DATE_ADD(CURRENT_DATE(), INTERVAL -6 MONTH)\n    ) \n    WHERE \n      orderReceived = 1  \n),g_read AS (\n  -- gas recent reads\n  SELECT\n     msn\n    ,'gas' AS fuel\n    ,readDateTime\n    ,NULL AS tier\n    ,reading\n  FROM (\n    SELECT \n       value.GasMidnightSnapshotReadingEventByMsn.msn AS msn\n      ,value.GasMidnightSnapshotReadingEventByMsn.snapshotTime AS readDateTime\n      ,value.GasMidnightSnapshotReadingEventByMsn.gasVolume AS reading\n      ,ROW_NUMBER() OVER(\n        PARTITION BY value.GasMidnightSnapshotReadingEventByMsn.msn, value.GasMidnightSnapshotReadingEventByMsn.snapshotTime\n        ORDER BY value.GasMidnightSnapshotReadingEventByMsn.metadata.createdAt DESC) AS orderReceived\n    FROM \n      `data-engineering-prod.landing_andromeda.rac_msd_stripped_v1`\n    WHERE\n      DATE(PARTITIONTIME) >= DATE_ADD(CURRENT_DATE(), INTERVAL -6 MONTH)\n      AND DATE(value.GasMidnightSnapshotReadingEventByMsn.snapshotTime)  >= DATE_ADD(CURRENT_DATE(), INTERVAL -6 MONTH)\n    ) \n    WHERE \n      orderReceived = 1\n)\nSELECT * FROM e_read\nUNION ALL \nSELECT * FROM g_read\n"},"data-engineering-prod:product_andromeda_secure.non_comms_constraints_overal_eligible":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.non_comms_constraints_overal_eligible","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_overal_eligible","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/non_comms_constraints_overal_eligible","table_id":"non_comms_constraints_overal_eligible","time_partitioning":null,"view_query":"\nSELECT\n      A.Account_No AS accountNumber\n    FROM\n    `data-engineering-prod.reporting_crm.v_Account` A\n      INNER JOIN `data-engineering-prod.reporting_crm.v_Consumer` C\n        ON    A.Account_No = C.Account_No\n        AND C.Lifecycle_Category = 'Live (Excluding Loss)'              \n      LEFT JOIN  `data-engineering-prod.reporting_crm.v_Consumer` C_not_live \n        ON A.Account_No = C_not_live.Account_No \n        AND c_not_live.Lifecycle_Category not in ( 'Live (Excluding Loss)','Transfer Cancelled') and c_not_live.lifecycle <> 'Final'\n      LEFT JOIN `data-engineering-prod.raw_ops_workstreams.Polarstern_tbl_Historic_Status` PS \n        ON C.Consumer_No = PS.Consumer_No\n        AND PS.Is_Latest_Polarstern_Status = TRUE\n    WHERE\n      A.Billing_System = 'GENTRACK'\n      AND    A.Payment_Method_Category = 'PAYM'                                                                    -- PAYM\n      AND A.Retailer_Code = 'OVO'                                                                                -- OVO Customer\n      AND A.Is_ET_Gain = FALSE                                                                                    -- Not an ET\n          AND C_not_live.Account_No IS NULL    \n    GROUP BY A.Account_No\n    HAVING \n      SUM(CASE WHEN SUBSTR(c.Meter_Type_Code,1,2) = 'S2'  THEN 1 WHEN C.Meter_Type_Category = 'Smart' AND C.Meter_type_code NOT IN ('NS','NSS') THEN 1 ELSE 0 END) = COUNT(*)        -- All live consumers are SMART     HOB 31\/5\/19 - now including SMETS2    AND SUM(CASE WHEN ISNULL(C.Billing_Class_Code, 'Nix zu sehen hier') = 'COM' THEN 0 ELSE 1 END) = COUNT(*)                           -- No live consumers are COMMERCIAL\n    AND SUM(CASE WHEN coalesce(C.Tax_Class_Code, 'Nix zu sehen hier') IN ('COMMERCIAL', 'COMEXEMPT') THEN 0 ELSE 1 END) = COUNT(*)        -- No live consumers are COMMERCIAL\n    AND SUM(CASE WHEN C.Profile_Class IN ('01', '02', 'G') THEN 1 ELSE 0 END) = COUNT(*)                                                -- No live consumers are COMMERCIAL\n    AND SUM(CASE WHEN C.Payment_Method_Category = 'PAYM' THEN 1 ELSE 0 END) = COUNT(*)                                                     -- All live consumers are PAYM, too\n    AND SUM(CASE WHEN PS.Has_Meter_and_Tariff_Mismatch = TRUE THEN 0 ELSE 1 END) = COUNT(*)                                                -- No live consumers are Polarstern\/nretsraloP"},"data-engineering-prod:product_andromeda_secure.open_read_disputes_for_ops":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.open_read_disputes_for_ops","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/open_read_disputes_for_ops","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/open_read_disputes_for_ops","table_id":"open_read_disputes_for_ops","time_partitioning":null,"view_query":"SELECT\n  accountNumber as Account_No,\n  mpxn as Meter_Point_No,\n  cast(initiatedAt as date) as Dispute_Raised_Date,\n  'gas' as fuel,\n  -- TODO: Use the status as published by TARDIS once we have it, or a version that conforms to DRS status values\n  case\n   when initiatedBy in ('OVO', 'OVOE') and alternatedAt is not null then 'Ovo Read Alternated'\n   when alternatedAt is not null then 'Dispute Read Alternated'\n   when initiatedBy in ('OVO', 'OVOE') and rejectedAt is not null then 'Ovo Dispute Rejected'\n   when rejectedAt is not null then 'Dispute Read Rejected'\n   when initiatedBy not in ('OVO', 'OVOE') then 'New Dispute Received'\n   else 'Ovo Read Dispute Sent'\n  end as Dispute_Status,\n  disputedReadDate as Disputed_Read_Date,\n  case when gainingSupplier in ('OVO', 'OVOE') then 'Gain' else 'Loss' end as Gain_Or_Loss,\n  'No Salesforce Case' as Has_Open_Case, \n  case when gainingSupplier in ('OVO', 'OVOE') then losingSupplier else gainingSupplier end as Other_Supplier_Code,\n  'PAYM' as Payment_Method_Category,\n  coalesce(alternatedAt, rejectedAt, initiatedAt) as Last_Updated_Datetime, -- TODO: this should be whichever is latest of TARDIS status update and OOT work item note\/status once we have them\n  'TARDIS' as Dispute_System,\n  'ORION' as Billing_System\nFROM\n  `data-engineering-prod.product_andromeda_secure.gas_read_disputes_raised`\nwhere agreedAt is null -- TODO: Replace this with something like status <> 'Agreed' once TARDIS are publishing generic status events\n  and disputeSequence = 1\nunion all\nSELECT\n  accountNumber as Account_No,\n  mpxn as Meter_Point_No,\n  cast(initiatedAt as date) as Dispute_Raised_Date,\n  'electricity' as fuel,\n  -- TODO: Use the status as published by TARDIS once we have it, or a version that conforms to DRS status values\n  case\n   when initiatedBy in ('OVO', 'OVOE') and alternatedAt is not null then 'Ovo Read Alternated'\n   when alternatedAt is not null then 'Dispute Read Alternated'\n   when initiatedBy in ('OVO', 'OVOE') and rejectedAt is not null then 'Ovo Dispute Rejected'\n   when rejectedAt is not null then 'Dispute Read Rejected'\n   when initiatedBy not in ('OVO', 'OVOE') then 'New Dispute Received'\n   else 'Ovo Read Dispute Sent'\n  end as Dispute_Status,\n  disputedReadDate as Disputed_Read_Date,\n  case when gainingSupplier in ('OVO', 'OVOE') then 'Gain' else 'Loss' end as Gain_Or_Loss,\n  'No Salesforce Case' as Has_Open_Case, \n  case when gainingSupplier in ('OVO', 'OVOE') then losingSupplier else gainingSupplier end as Other_Supplier_Code,\n  'PAYM' as Payment_Method_Category,\n  coalesce(alternatedAt, rejectedAt, initiatedAt) as Last_Updated_Datetime, -- TODO: this should be whichever is latest of TARDIS status update and OOT work item note\/status once we have them\n  'TARDIS' as Dispute_System,\n  'ORION' as Billing_System\nFROM\n  `data-engineering-prod.product_andromeda_secure.elec_read_disputes_raised`\nwhere agreedAt is null\n  and disputeSequence = 1\nunion all\nselect serviceAccountId as Account_No,\n       mpxn as Meter_Point_No,\n       null as Dispute_Raised_Date,\n       fuel,\n       'Yet to be raised - manual review needed' as Dispute_Status,\n       date_add(lossDate, interval 1 day) as Disputed_Read_Date,\n       'Loss' as Gain_Or_Loss,\n       'No Salesforce Case', \n       NewSupplierShortcode as Other_Supplier_Code,\n       'PAYM' as Payment_Method_Category,\n       null as Last_Updated_Datetime, \n       'Orion Gas Disputes Sheet' as Dispute_System,\n       'ORION' as Billing_System\nfrom `data-engineering-prod.product_andromeda_secure.cos_loss_read_delay_reasons` \nwhere fuel = 'gas'\n  and reason_for_delay = 'Read dispute - Yet to be raised'\nunion all\nselect serviceAccountId as Account_No,\n       mpxn as Meter_Point_No,\n       null as Dispute_Raised_Date,\n       fuel,\n       'Yet to be raised - manual review needed' as Dispute_Status,\n       date_add(lossDate, interval 1 day) as Disputed_Read_Date,\n       'Loss' as Gain_Or_Loss,\n       'No Salesforce Case', \n       NewSupplierShortcode as Other_Supplier_Code,\n       'PAYM' as Payment_Method_Category,\n       null as Last_Updated_Datetime, \n       'Orion Elec Disputes Sheet' as Dispute_System,\n       'ORION' as Billing_System\nfrom `data-engineering-prod.product_andromeda_secure.cos_loss_read_delay_reasons` \nwhere fuel = 'electricity'\n  and reason_for_delay = 'Read dispute - Yet to be raised'"},"data-engineering-prod:product_andromeda_secure.orion_loss_confirmation":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.orion_loss_confirmation","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/orion_loss_confirmation","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/orion_loss_confirmation","table_id":"orion_loss_confirmation","time_partitioning":null,"view_query":"# Loss confirmed supplies logic.\n# \n# Author: Victor Irles\n\n\nWITH \n\n--Get all Orion accounts.Reversed accounts get excluded as Ownership gets published as Null when a reverse migration happens and the INNER JOIN UNNEST ensures no null events get moved forward.\ncte_Orion_Accounts AS(\nSELECT accountId\n      ,o.supplyPoint AS mpxn\n      ,o.fuel\n      ,DATE(o.start, \"Europe\/London\") AS StartOwnership\n      ,DATE(o.end, \"Europe\/London\") AS EndOwnership\nFROM\n(SELECT *\n      , ROW_NUMBER() OVER(PARTITION BY accountId ORDER BY kafkaData.insertTime DESC) AS rn --Sort the rows by createdAt time\nFROM `data-engineering-prod.landing_bast.bast_account_supply_point_state_v1`)\nINNER JOIN UNNEST (ownership) AS o\nWHERE rn=1 --dedupe\n),\n\nmigrations AS (\n  SELECT DISTINCT\n     accountId\n    ,DATE(createdAt)  AS migrationRunDate\n    ,migrationDate \n  FROM (\n    SELECT\n       accountId\n      ,globalAccountId\n      ,migrationDate\n      ,sp.mpxn\n      ,fuel\n      ,metadata.createdAt\n      ,ROW_NUMBER() OVER(PARTITION BY sp.mpxn ORDER BY migrationDate DESC, metadata.createdAt DESC) AS ordering\n    FROM \n      `data-engineering-prod.landing_orion_migration.orion_migration_success_v2`\n    INNER JOIN\n      UNNEST(supplyPointList) AS sp\n  )\n  WHERE\n    ordering = 1\n),\n\n--Logic for loss confirmation\ncte_loss_confirmation_fuels AS(\nSELECT\n      mpxn\n      ,\"elecricity\" AS fuel\n      , supplyStartDate\n      , supplyEndDate\n      , supplyEndDate AS LossConfirmationDate --SupplyEndDate is the effective Loss Confirmation Date. lossConfirmedDate is when the first D0151 flow is sent by Utiligroup\n      , lossConfirmedDate AS LossConfirmationReceiveDate\nFROM (\n    SELECT \n       MPXN                           AS mpxn\n      ,gspGroupId                     AS region\n      ,sp.supplyStartDate\n      ,sp.supplyEndDate\n      ,sp.lossConfirmed\n      ,sp.lossConfirmedDate\n      ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY supplyStartDate DESC) AS LatestSP --Take the latest supply period per supplypoint\n\n    FROM (\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber --Sort the rows by createdAt time\n      FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n      ) \n    INNER JOIN\n      UNNEST( supplyPeriods ) AS sp\n    WHERE\n          rowNumber = 1 --dedupe     \n)\n--WHERE LatestSP=1 --only latest supplyperiod\nWHERE supplyEndDate IS NOT NULL --Where an end date exists\nAND lossConfirmed=true --and just those supplies that are confirmed. (to avoid cases where supplyEndDate Is not null (Loss Notification flow received) but the D0151 has not arrived yet). Those could end up being withdrawn\nAND supplyEndDate <= DATE_SUB(CURRENT_DATE(), INTERVAL 13 DAY) --For elec there is no confirmation loss date flow. Best to wait 13 days to make sure cancel has not been withdrawn. This means that lots of accounts will show up as just Gas has been lost at fist but elec will follow 13 days later.\n\nUNION ALL\n\nSELECT\n      mpxn\n      ,\"gas\" AS fuel\n      , supplyStartDate\n      , supplyEndDate\n      , supplyEndDate AS LossConfirmationDate --SupplyEndDate is the effective Loss Confirmation Date. lossConfirmedDate is just the date in which we receive the flow TFRS88\n      , lossConfirmedDate AS LossConfirmationReceiveDate\n\nFROM (\n    SELECT \n       MPXN AS mpxn\n      ,LDZ  AS region\n      ,sp.supplyStartDate\n      ,sp.supplyEndDate\n      ,sp.lossConfirmed\n      ,sp.lossConfirmedDate\n      ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY supplyStartDate DESC) AS LatestSP --Take the latest supply period per supplypoint\n\n    FROM (\n      SELECT *, ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY metadata.createdAt DESC) AS rowNumber   --Sort the rows by createdAt time\n      FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n      ) \n    INNER JOIN\n      UNNEST( supplyPeriods ) AS sp\n    WHERE\n          rowNumber = 1 --dedupe\n)\n--WHERE LatestSP=1 --only latest supplyperiod\nWHERE lossConfirmed=true --Where an end date exists\nAND supplyEndDate IS NOT NULL --and just those supplies that are confirmed. (to avoid cases where supplyEndDate Is not null (Loss Notification flow received) but the confirmation flow TRFS88 has not arrived yet). Those could end up being withdrawn\n\n)\n,\n\n--Select distinct accounts for which at least one supplypoint is lost\ncte_Lost_Accounts AS(\nSELECT DISTINCT acc.accountId\nFROM cte_Orion_Accounts acc\nINNER JOIN cte_loss_confirmation_fuels lc\nON acc.mpxn=lc.mpxn\nAND lc.LossConfirmationDate BETWEEN StartOwnership AND EndOwnership --This condition avoids selecting the wrong account in the case of a Change of Tenancy\n),\n\n--Map loss dates to supply and these to the accounts with at least one supply lost\ncte_Lost_Accounts_Supply AS(\nSELECT acc.accountId\n      , mig.migrationDate\n      , acc.StartOwnership\n      , acc.EndOwnership\n      , acc.fuel\n      , acc.mpxn\n      , lc.supplyStartDate\n      , lc.LossConfirmationReceiveDate\n      , lc.LossConfirmationDate\nFROM cte_Orion_Accounts acc\nLEFT JOIN cte_loss_confirmation_fuels lc --Map loss information to all accounts\nUSING (mpxn)\nINNER JOIN cte_Lost_Accounts lacc --select those accounts for which at least one supply is lost only, not just the accounts for which all supplies are lost.\nUSING (accountId)\nLEFT JOIN migrations mig\nUSING (accountId)\n)\n\n\nSELECT accountId\n      , migrationDate\n      , StartOwnership\n      , EndOwnership\n      , fuel\n      , mpxn\n      --, supplyStartDate\n      , LossConfirmationReceiveDate\n      , LossConfirmationDate\nFROM cte_Lost_Accounts_Supply\nWHERE (LossConfirmationDate>COALESCE(migrationDate,StartOwnership) OR LossConfirmationDate IS NULL) --Only losses in Orion OR supplies not lost but where the account has lost the other supply (e.g account 20000025)\n--AND accountId IN ('') --testing\nORDER BY accountId, fuel, supplyStartDate DESC\n\n\n"},"data-engineering-prod:product_andromeda_secure.orion_loss_confirmation_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.orion_loss_confirmation_extract","location":"EU","num_bytes":11530593,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/orion_loss_confirmation_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/orion_loss_confirmation_extract","table_id":"orion_loss_confirmation_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.personal_projections_1_latest_mappings":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.personal_projections_1_latest_mappings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/personal_projections_1_latest_mappings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/personal_projections_1_latest_mappings","table_id":"personal_projections_1_latest_mappings","time_partitioning":null,"view_query":"WITH mappings AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n    ,createdAt\n  FROM (\n    SELECT\n       MPXN \n      ,inst.MSN\n      ,inst.startDate AS meterMappingEffectiveFrom\n      ,his.startDate AS registerConfigEffectiveFrom\n      ,reg.clockingTimeId\n      ,reg.timePatternRegime\n      ,reg.tier\n      ,metadata.createdAt\n      -- use rank to find the latest configuration and meter instalation dates\n      ,RANK() OVER(PARTITION BY MPXN  ORDER BY inst.startDate DESC) AS latestMeterMapping\n      ,RANK() OVER(PARTITION BY MPXN  ORDER BY his.startDate DESC) AS latestConfigMapping\n    FROM \n      `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v1`\n    INNER JOIN\n      UNNEST(installationHistory) AS inst\n    INNER JOIN\n      UNNEST(inst.meterRegisterHistory) his\n    INNER JOIN\n      UNNEST(his.meterRegisters) reg\n    ) lt\n  WHERE \n    latestMeterMapping = 1 \n    AND latestConfigMapping = 1\n    AND tier IS NOT NULL\n), ranked_mappings AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n    -- single entry per MPXN, tier\n    ,ROW_NUMBER() OVER(PARTITION BY MPXN, tier ORDER BY createdAt DESC) rowNumMpxn\n    -- single entry per MSN, tier\n    ,ROW_NUMBER() OVER(PARTITION BY MSN, tier ORDER BY createdAt DESC) rowNumMsn\n  FROM\n    mappings\n), deduped_ranked AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier\n  FROM\n    ranked_mappings\n  WHERE \n    rowNumMpxn = 1\n    AND rowNumMsn = 1\n), two_rate_list AS (\n  -- get multi rate MPANs only. Choose exactly 2 tiers as we will not support more than 2 on OEP\n  SELECT\n    m.MPXN AS mpan\n  FROM\n    deduped_ranked AS m\n  GROUP BY\n    m.MPXN\n  HAVING\n    COUNT(clockingTimeId) = 2\n), two_rate_only AS (\n  SELECT\n     MPXN\n    ,MSN\n    ,meterMappingEffectiveFrom\n    ,registerConfigEffectiveFrom\n    ,clockingTimeId\n    ,timePatternRegime\n    ,tier  \n  FROM\n    deduped_ranked dr\n  INNER JOIN\n    two_rate_list AS t\n      ON dr.MPXN = t.mpan\n)\nSELECT\n   MPXN\n  ,MSN\n  ,meterMappingEffectiveFrom\n  ,registerConfigEffectiveFrom\n  ,clockingTimeId\n  ,timePatternRegime\n  ,tier  \nFROM\n  two_rate_only\n-- tests:\n--  correct if all tests return no results\n--  SELECT mpxn, tier, count(*) from two_rate_only group by mpxn, tier HAVING COUNT(*) <> 1\n--  SELECT msn, tier, count(*) from two_rate_only group by msn, tier HAVING COUNT(*) <> 1\n--  SELECT mpxn, count(*) from two_rate_only group by mpxn HAVING COUNT(*) <> 2\n--  SELECT msn, count(*) from two_rate_only group by msn HAVING COUNT(*) <> 2\n-- ...and total count plausible for multi-rate smart supplies\n-- SELECT COUNT(DISTINCT MPXN) FROM two_rate_only"},"data-engineering-prod:product_andromeda_secure.poc_gas_settled_reads_urs":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_gas_settled_reads_urs","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_gas_settled_reads_urs","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_gas_settled_reads_urs","table_id":"poc_gas_settled_reads_urs","time_partitioning":null,"view_query":"select\n  *,\n  'URS' as source\nfrom\n  (\n    select\n      record.U02.items.Meter_Point_Reference as mprn,\n      record.U02.items.Meter_Serial_Number as msn,\n      PARSE_DATE('%Y%m%d', record.U02.items.Actual_Read_Date) as meterReadingDate,\n      cast(record.U02.items.Meter_Reading as int64) as meterReading,\n      'Failed' as meterReadingStatus\n    from\n      `data-engineering-prod.raw_andromeda_secure.flow_URS_split`\n    union all\n    select\n      record.U10.items.Meter_Point_Reference as mprn,\n      record.U10.items.Meter_Serial_Number as msn,\n      PARSE_DATE('%Y%m%d', record.U10.items.Actual_Read_Date) as meterReadingDate,\n      cast(record.U10.items.Meter_Reading as int64) as meterReading,\n      'Passed' as meterReadingStatus\n    from\n      `data-engineering-prod.raw_andromeda_secure.flow_URS_split`\n  ) as urs_all\norder by\n  mprn,\n  msn,\n  meterReadingDate\n  \n"},"data-engineering-prod:product_andromeda_secure.poc_gas_volume_msd":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_gas_volume_msd","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_gas_volume_msd","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_gas_volume_msd","table_id":"poc_gas_volume_msd","time_partitioning":null,"view_query":"SELECT\n  event.GasVolumeConsumptionGeneratedEvent.mprn AS mprn,\n  event.GasVolumeConsumptionGeneratedEvent.msn AS msn,\n  event.GasVolumeConsumptionGeneratedEvent.fromDateTime AS fromDateTime,\n  event.GasVolumeConsumptionGeneratedEvent.toDateTime AS toDateTime,\n  event.GasVolumeConsumptionGeneratedEvent.fromMeterReading AS fromMeterReading,\n  event.GasVolumeConsumptionGeneratedEvent.toMeterReading AS toMeterReading,\n  event.GasVolumeConsumptionGeneratedEvent.volume AS volume\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_gas_volume_generated_v6`\nORDER BY\n  fromDateTime"},"data-engineering-prod:product_andromeda_secure.poc_gentrack_tariff_mapping":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_gentrack_tariff_mapping","location":"EU","num_bytes":122358,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_gentrack_tariff_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_gentrack_tariff_mapping","table_id":"poc_gentrack_tariff_mapping","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.poc_manual":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_manual","location":"EU","num_bytes":10719,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_manual","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_manual","table_id":"poc_manual","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_config_previous_uploads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_config_previous_uploads","location":"EU","num_bytes":14375275,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_config_previous_uploads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_config_previous_uploads","table_id":"poc_sfe_tariff_config_previous_uploads","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_config_reporting":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_config_reporting","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_config_reporting","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_config_reporting","table_id":"poc_sfe_tariff_config_reporting","time_partitioning":null,"view_query":"select\n  uploaded.servicePointNo as mpxn,\n  uploaded.TariffDescription,\n  uploaded.ActivationTime as ScheduledActivation,\n  timestamp_micros(sfe_report.activationDate * 1000) as ActualActivation,\n  sfe_report.deviceNo as msn\nfrom\n  `data-engineering-prod.product_andromeda_secure.poc_sfe_tariff_config_previous_uploads` as uploaded\n  left join\n  `data-engineering-prod.raw_andromeda_secure.flow_SFE_CHANGETARIFF_split` as sfe_report\n    on uploaded.servicePointNo = sfe_report.servicePointNo\n    and uploaded.tariffDescription = sfe_report.tariffDescription\norder by\n  mpxn"},"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_config_to_upload":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_config_to_upload","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_config_to_upload","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_config_to_upload","table_id":"poc_sfe_tariff_config_to_upload","time_partitioning":null,"view_query":"-- Looks back 7 days on startDate and createdDate to catch as much as possible and gives redundancy in case a day\n-- gets missed.  The output SFE csv is loaded back into BQ so that we don't create the same csv again.\n\n-- Conversions\n-- 01,Warmer Home Plan,15% Reduced Rate\n-- 02,Warmer Home Plan,15% P2 to P1\n-- 11,Better Energy,15% Reduced Rate\n-- 13,Better Energy,P2 to P1\n-- 17,Simpler Energy,15% Reduced Rate\n-- 18,Simpler Energy, Reduced Rage\n-- 19,Simpler Energy,15% P2 to P1\n-- 20,Simpler Energy,P2 to P1\n-- 27,2 Year Fixed Energy,15% Rdced VAT\n-- 28,2 Year Fixed Energy,P2 to P1\n\n-- Note on VAT\n-- The rates physically stored in SFE need to include VAT\n-- The rates here all exc VAT, but that is fine for the rate testing etc, just that the final rates on the meter need to include VAT\n\nwith cte_gt_codes as (\n-- GT codes from kate loaded manually - would need to be updated in case of price changes and new rates\n-- 17-20 Append VARL\n-- Otherwise append ActiveFrom YYYYMMDD\n  select\n    gentrack_code as GentrackCode,\n    case\n      when substr(gentrack_code, -2) in ('17', '18', '19', '20') then concat(gentrack_code, '_VARL') -- Adds the OVO\/SFE convention _VARL for variable tariffs\n      else concat(gentrack_code, '_', REPLACE(cast(active_from as string), '-', '')) -- Adds the OVO\/SFE convention of versioning by adding _YYYYMMDD of activeFrom\n    end as TariffDescription,\n    version_id as VersionId,\n    active_from as ActiveFrom,\n    active_to as ActiveTo,\n    tariff_id as TariffID,\n    case\n      when substr(gentrack_code, -2) in ('17', '18', '19', '20') then 'v'\n      else 'f'\n    end as TariffType,\n    standing_rate as StandingRate,\n    unit_rate as UnitRate\n  from\n    `data-engineering-prod.product_andromeda_secure.poc_gentrack_tariff_mapping`\n),\n\ncte_gt_codes_var as (\n  select\n    *\n  from\n    cte_gt_codes\n  where\n    TariffType = 'v'\n),\n\ncte_gt_codes_fix as (\n  select\n    *\n  from\n    cte_gt_codes\n  where\n    TariffType = 'f'\n),\n\ncte_contracts as (\n  select\n    fuel as SupplyType,\n    mpxn as ServicePointNo,\n    case\n      when startDate <= current_date() then timestamp(date_add(current_date(), interval 1 day))\n      else cast(startDate as timestamp)\n    end as ActivationTime,\n    contractId,\n    tariffId,\n    currentUnitRate,\n    currentStandingRate,\n    startDate,\n    createdDate\n  from\n    `data-engineering-prod.product_andromeda_secure.contracts`\n),\ncte_result as (\n-- Fixed\nselect\n  c.SupplyType,\n  c.ServicePointNo,\n  gtf.GentrackCode,\n  gtf.TariffDescription,\n  gtf.VersionId,\n  cast(gtf.ActiveFrom as string) as ActiveFrom,\n  cast(gtf.ActiveTo as string) as ActiveTo,\n  c.ActivationTime,\n  c.contractId,\n  c.tariffId,\n  c.currentUnitRate,\n  c.currentStandingRate,\n  gtf.UnitRate,\n  gtf.StandingRate,\n  case\n    when (c.currentUnitRate = gtf.UnitRate) and (c.currentStandingRate = gtf.StandingRate) then 1\n    else 0\n  end as RatesCorrect\nfrom\n  cte_contracts as c\n  inner join\n  cte_gt_codes_fix as gtf\n    on c.tariffId = gtf.TariffId\nwhere\n  c.startDate > DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY) or cast(c.createdDate as date) > DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY)\n-- Variable\nunion all\nselect\n  c.SupplyType,\n  c.ServicePointNo,\n  gtv.GentrackCode,\n  gtv.TariffDescription,\n  gtv.VersionId,\n  cast(gtv.ActiveFrom as string) as ActiveFrom,\n  cast(gtv.ActiveTo as string) as ActiveTo,\n  c.ActivationTime,\n  c.contractId,\n  c.tariffId,\n  c.currentUnitRate,\n  c.currentStandingRate,\n  gtv.UnitRate,\n  gtv.StandingRate,\n  case\n    when (c.currentUnitRate = gtv.UnitRate) and (c.currentStandingRate = gtv.StandingRate) then 1\n    else 0\n  end as RatesCorrect\nfrom\n  cte_contracts as c\n  inner join\n  cte_gt_codes_var as gtv\n    on c.tariffId = gtv.TariffId\nwhere\n  (c.startDate > DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY) or cast(c.createdDate as date) > DATE_ADD(CURRENT_DATE(), INTERVAL -7 DAY))\n  and (current_date() >= gtv.ActiveFrom and current_date() <= ifnull(gtv.ActiveTo, date(9999,1,1))) -- Chooses the correct variable tariff (since same tariffID for different versions)\n)\n\nselect\n  r.*\nfrom\n  cte_result as r\n  left join\n  `data-engineering-prod.product_andromeda_secure.poc_sfe_tariff_config_previous_uploads` as tc\n    on r.ServicePointNo = tc.ServicePointNo\n    and r.tariffId = tc.tariffId\n    and r.currentUnitRate = tc.currentUnitRate\n    and r.currentStandingRate = tc.currentStandingRate\nwhere\n  tc.ServicePointNo is null -- to remove the previously processed rates (takes into account both tariffId and rates for variable)\norder by\n  r.SupplyType,\n  r.TariffDescription,\n  r.ServicePointNo\n"},"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_history":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.poc_sfe_tariff_history","location":"EU","num_bytes":515312,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_history","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/poc_sfe_tariff_history","table_id":"poc_sfe_tariff_history","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.probate_data":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.probate_data","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/probate_data","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/probate_data","table_id":"probate_data","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_charges_missing_from_balances":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_charges_missing_from_balances","location":"EU","num_bytes":14111455,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_charges_missing_from_balances","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_charges_missing_from_balances","table_id":"prod_support_charges_missing_from_balances","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_final_account_reconsiliation":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_final_account_reconsiliation","location":"EU","num_bytes":55,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_final_account_reconsiliation","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_final_account_reconsiliation","table_id":"prod_support_daily_smash_final_account_reconsiliation","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_special_comms":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_special_comms","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_special_comms","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_special_comms","table_id":"prod_support_daily_smash_special_comms","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_swo_3":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_swo_3","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_swo_3","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_swo_3","table_id":"prod_support_daily_smash_swo_3","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_swo_4":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_daily_smash_swo_4","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_swo_4","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_daily_smash_swo_4","table_id":"prod_support_daily_smash_swo_4","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_end_of_contract_charging_gaps_V2":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_end_of_contract_charging_gaps_V2","location":"EU","num_bytes":55103,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_end_of_contract_charging_gaps_V2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_end_of_contract_charging_gaps_V2","table_id":"prod_support_end_of_contract_charging_gaps_V2","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_cot_to_send_today":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_cot_to_send_today","location":"EU","num_bytes":4356,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_cot_to_send_today","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_cot_to_send_today","table_id":"prod_support_final_statement_cot_to_send_today","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_exemption_identification":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_exemption_identification","location":"EU","num_bytes":14324006,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_exemption_identification","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_exemption_identification","table_id":"prod_support_final_statement_exemption_identification","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_loss_to_send_today":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_loss_to_send_today","location":"EU","num_bytes":17936,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_loss_to_send_today","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_loss_to_send_today","table_id":"prod_support_final_statement_loss_to_send_today","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_prep_V2":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_prep_V2","location":"EU","num_bytes":1019250,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_prep_V2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_prep_V2","table_id":"prod_support_final_statement_prep_V2","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_ready":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_ready","location":"EU","num_bytes":18975,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_ready","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_ready","table_id":"prod_support_final_statement_ready","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_ready_V2":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_final_statement_ready_V2","location":"EU","num_bytes":35623,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_ready_V2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_final_statement_ready_V2","table_id":"prod_support_final_statement_ready_V2","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.prod_support_work_items_prep":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.prod_support_work_items_prep","location":"EU","num_bytes":362208,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_work_items_prep","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/prod_support_work_items_prep","table_id":"prod_support_work_items_prep","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.rac_d10_simplified":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_d10_simplified","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_d10_simplified","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_d10_simplified","table_id":"rac_d10_simplified","time_partitioning":null,"view_query":"SELECT \n   header.fileIdentifier\n  ,header.fromRoleCode AS fromMarketParticipantRoleCode\n  ,header.fromParticipantId AS fromMarketParticipantId\n  ,header.toRoleCode AS toMarketParticipantRoleCode\n  ,header.toParticipantId AS toMarketParticipantId\n  ,header.creationTime AS fileCreationTimestamp\n  ,item.mpanCore\n  ,item.bscValidationStatus\n  ,rt.meterIdSerialNumber\n  ,rt.readingType\n  ,rr.meterRegisterId\n  ,rr.readingDateAndTime\n  ,rr.registerReading\nFROM `data-engineering-prod.landing_andromeda.rac_flow_d0010_received_v9`\nINNER JOIN UNNEST(item.meterReadingTypes) rt\nINNER JOIN UNNEST(rt.registerReadings) rr\nWHERE\n  PARTITIONTIME >= '2018-01-01'\n  AND header.testDataFlag = 'OPER'      -- prod data\n  AND item.bscValidationStatus = 'V'    -- valid"},"data-engineering-prod:product_andromeda_secure.rac_d86_simplified":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_d86_simplified","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_d86_simplified","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_d86_simplified","table_id":"rac_d86_simplified","time_partitioning":null,"view_query":"SELECT\n   header.fileIdentifier\n  ,header.fromMarketParticipantRoleCode\n  ,header.fromMarketParticipantId\n  ,header.toMarketParticipantRoleCode\n  ,header.toMarketParticipantId\n  ,header.fileCreationTimestamp\n  ,record.MpanCores.mpanCore\n  ,record.MpanCores.bscValidationStatus\n  ,rt.meterIdSerialNumber\n  ,rt.readingType\n  ,rr.meterRegisterId \n  ,rr.readingDateTime\n  ,rr.registerReading\nFROM\n  `data-engineering-prod.landing_andromeda_secure.flow_D0086002_split_v3`\nINNER JOIN\n  UNNEST(record.MpanCores.meterReadingType) rt\nINNER JOIN\n  UNNEST(rt.registerReadings) rr\nWHERE\n  PARTITIONTIME >= '2018-01-01'\n  AND header.testDataFlag = 'OPER'                    -- prod data\n  AND record.MpanCores.bscValidationStatus = 'V'      -- valid\n  "},"data-engineering-prod:product_andromeda_secure.rac_elec_replay_service_performance":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_elec_replay_service_performance","location":"EU","num_bytes":249095325,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_elec_replay_service_performance","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_elec_replay_service_performance","table_id":"rac_elec_replay_service_performance","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.rac_electricity_HISTORIC_contractChangeDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_electricity_HISTORIC_contractChangeDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_HISTORIC_contractChangeDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_HISTORIC_contractChangeDateEstimates","table_id":"rac_electricity_HISTORIC_contractChangeDateEstimates","time_partitioning":null,"view_query":"SELECT MSN AS msn\n      , 'EstimatedReading' AS readingType\n      , 0 AS registerTier\n      , estimatedReading AS readValue\n      , DATETIME(startDate) AS readingDateTime\nFROM `data-engineering-prod.product_andromeda_secure.2020_04_historical_contract_change_estimates`\nWHERE fuel = 'electricity'"},"data-engineering-prod:product_andromeda_secure.rac_electricity_billingDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_electricity_billingDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_billingDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_billingDateEstimates","table_id":"rac_electricity_billingDateEstimates","time_partitioning":null,"view_query":"SELECT MSN AS msn\n      , 'EstimatedReading' AS readingType\n      , tier AS registerTier\n      , readEstimate AS readValue\n      , DATETIME(billingDate) AS readingDateTime\nFROM `data-engineering-prod.product_andromeda_secure.rac_internal_billingDateEstimates`\nWHERE fuel = 'electricity'"},"data-engineering-prod:product_andromeda_secure.rac_electricity_contractChangeDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_electricity_contractChangeDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_contractChangeDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_contractChangeDateEstimates","table_id":"rac_electricity_contractChangeDateEstimates","time_partitioning":null,"view_query":"SELECT MSN AS msn\n      , 'EstimatedReading' AS readingType\n      , tier AS registerTier\n      , readEstimate AS readValue\n      , DATETIME(startDate) AS readingDateTime\nFROM `data-engineering-prod.product_andromeda_secure.rac_internal_contractChangeDateEstimates`\nWHERE fuel = 'electricity'"},"data-engineering-prod:product_andromeda_secure.rac_electricity_loadProfiles":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_electricity_loadProfiles","location":"EU","num_bytes":245472,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_loadProfiles","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_electricity_loadProfiles","table_id":"rac_electricity_loadProfiles","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.rac_gas_HISTORIC_contractChangeDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_gas_HISTORIC_contractChangeDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_HISTORIC_contractChangeDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_HISTORIC_contractChangeDateEstimates","table_id":"rac_gas_HISTORIC_contractChangeDateEstimates","time_partitioning":null,"view_query":"SELECT MSN AS msn\n      , 'EstimatedReading' AS readingType\n      , estimatedReading AS gasVolume\n      , DATETIME(startDate) AS readingDateTime\nFROM `data-engineering-prod.product_andromeda_secure.2020_04_historical_contract_change_estimates`\nWHERE fuel = 'gas'"},"data-engineering-prod:product_andromeda_secure.rac_gas_billingDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_gas_billingDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_billingDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_billingDateEstimates","table_id":"rac_gas_billingDateEstimates","time_partitioning":null,"view_query":"SELECT MSN AS msn\n      , 'EstimatedReading' AS readingType\n      , readEstimate AS gasVolume\n      , DATETIME(billingDate) AS readingDateTime\nFROM `data-engineering-prod.product_andromeda_secure.rac_internal_billingDateEstimates`\nWHERE fuel = 'gas'"},"data-engineering-prod:product_andromeda_secure.rac_gas_contractChangeDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_gas_contractChangeDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_contractChangeDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_contractChangeDateEstimates","table_id":"rac_gas_contractChangeDateEstimates","time_partitioning":null,"view_query":"SELECT MSN AS msn\n      , 'EstimatedReading' AS readingType\n      , readEstimate AS gasVolume\n      , DATETIME(startDate) AS readingDateTime\nFROM `data-engineering-prod.product_andromeda_secure.rac_internal_contractChangeDateEstimates`\nWHERE fuel = 'gas'"},"data-engineering-prod:product_andromeda_secure.rac_gas_loadProfiles":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_gas_loadProfiles","location":"EU","num_bytes":9305856,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_loadProfiles","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_loadProfiles","table_id":"rac_gas_loadProfiles","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.rac_gas_replay_service_performance":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_gas_replay_service_performance","location":"EU","num_bytes":204821867,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_replay_service_performance","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_gas_replay_service_performance","table_id":"rac_gas_replay_service_performance","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.rac_internal_billingDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_internal_billingDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_internal_billingDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_internal_billingDateEstimates","table_id":"rac_internal_billingDateEstimates","time_partitioning":null,"view_query":"--CONTRACTS\n--############################################ \nWITH cte_contracts_raw AS(  \n  SELECT\n    a.unionRecord.Contract.mpxn,\n    a.unionRecord.Contract.serviceAccountId,\n    a.unionRecord.Contract.fuel,\n    a.unionRecord.Contract.contractId,\n    a.unionRecord.Contract.startDate,\n    a.unionRecord.Contract.endDate,\n    a.unionRecord.Contract.lossConfirmed,\n    ROW_NUMBER() OVER(PARTITION BY a.unionRecord.Contract.mpxn ORDER BY a.unionRecord.Contract.metadata.createdAt DESC) AS rn\n\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3` a\n  LEFT JOIN (SELECT DISTINCT unionRecord.Cancelled.contractId FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`) b --Remove cancelled contracts\n  ON a.unionRecord.Contract.contractId = b.contractId\n  WHERE a.unionRecord.Contract IS NOT NULL \n  AND b.contractId IS NULL\n  ),\n  \n  cte_contracts AS(\n  SELECT DISTINCT fuel\n                  , serviceAccountId\n                  , mpxn\n                  , DATE_TRUNC(CURRENT_DATE(), MONTH) AS ECbillingDate\n  FROM cte_contracts_raw \n  WHERE rn=1\n  AND lossConfirmed IS NULL --Just live supplies?\n  ORDER BY serviceAccountId\n  ),\n\ncte_bastBillingDate AS(\n  SELECT accountId\n        , DATE_ADD(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL (status.Active.billingDayOfTheMonth-1) DAY) AS BASTbillingDate\n  FROM \n    (SELECT *, row_number() OVER (PARTITION BY accountId ORDER BY metadata.createdAt DESC) AS rn \n      FROM `data-engineering-prod.landing_bast_secure.bast_account_billing_information_v1`)\n  WHERE rn=1 \n  AND status.Active IS NOT NULL\n  ),\n  \n cte_BillingDateJoined AS( \n  SELECT a.*, b.BASTbillingDate\n  FROM cte_contracts a\n  LEFT JOIN cte_bastBillingDate b\n  ON a.serviceAccountId = b.accountId \n  ),\n  \n cte_billingDates AS( \n  SELECT fuel\n         , serviceAccountId\n         , mpxn\n         , IF(BASTbillingDate IS NOT NULL, BASTbillingDate, ECbillingDate) AS billingDate\n  FROM cte_BillingDateJoined\n  )\n  --SELECT * FROM cte_billingDates where serviceAccountId = '3237185'\n  ,\n\n--ESTIMATES\n--############################################\ncte_estimates AS(\n  SELECT 'Electricity' AS Fuel\n       , ElectricityReadEstimate.mpan AS MPXN\n       , ElectricityReadEstimate.msn AS MSN\n       , CAST(reg.tier AS STRING) AS tier\n       , CAST(reg.clockingTimeId AS STRING) AS clockingTimeId\n       , ElectricityReadEstimate.dateTime\n       , reg.readEstimate \n  FROM `data-engineering-prod.u_victor_irles.rac_electricity_readEstimates_DailyUpdate`\n  INNER JOIN UNNEST (ElectricityReadEstimate.ElectricityRegisterEstimates) AS reg\n\n  UNION ALL\n\n  SELECT 'Gas' AS Fuel\n       , GasReadEstimate.mprn AS MPXN\n       , GasReadEstimate.msn AS MSN\n       , 'G' AS tier\n       , 'G' AS clockingTimeId\n       , GasReadEstimate.dateTime\n       , GasReadEstimate.readEstimate \n  FROM `data-engineering-prod.u_victor_irles.rac_gas_readEstimates_DailyUpdate`\n)\n,\n\n--REMOVE ALREADY EXISITNG READ\n--############################################\ncte_consumption AS(\nSELECT DISTINCT mpan AS MPXN, msn, fromDateTime, toDateTime\nFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4`\nUNION ALL \nSELECT DISTINCT mprn AS MPXN, msn, fromDateTime, toDateTime\nFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2`\n),\n\ncte_billingDatesFiltered AS(\nSELECT a.*\nFROM cte_billingDates a\nLEFT JOIN cte_consumption b\nON a.mpxn = b.MPXN\nAND a.billingDate = DATE(b.toDateTime) --Careful here if billingdate is not UTC I'll need to add 1h in summer\nWHERE b.MPXN IS NULL\n)\n,\n\n\n--MAP ESTIMATES TO ACCOUNTS ON BILLING DATE\n--############################################\ncte_mapEstimates AS(\n  SELECT a.*, b.MSN, b.tier, b.clockingTimeId, b.readEstimate\n  FROM cte_billingDatesFiltered a --cte_estimates b\n  LEFT JOIN cte_estimates b --cte_contracts_filtered a\n  ON b.MPXN = a.mpxn\n  AND DATE(b.dateTime) = a.billingDate\n)\n  \nSELECT serviceAccountId AS accountId\n      , fuel\n      , mpxn AS MPXN\n      , MSN\n      , tier\n      , clockingTimeId\n      , billingDate\n      , readEstimate\nFROM cte_mapEstimates\nWHERE billingDate <= CURRENT_DATE() AND billingDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 DAY)\n--WHERE serviceAccountId = '3237185'\nAND readEstimate IS NOT NULL\nORDER BY serviceAccountId\n\n"},"data-engineering-prod:product_andromeda_secure.rac_internal_contractChangeDateEstimates":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_internal_contractChangeDateEstimates","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_internal_contractChangeDateEstimates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_internal_contractChangeDateEstimates","table_id":"rac_internal_contractChangeDateEstimates","time_partitioning":null,"view_query":"WITH cte_contracts_raw AS(  \n  SELECT\n    a.unionRecord.Contract.mpxn,\n    a.unionRecord.Contract.serviceAccountId,\n    a.unionRecord.Contract.fuel,\n    a.unionRecord.Contract.contractId,\n    a.unionRecord.Contract.metadata.createdAt,\n    a.unionRecord.Contract.startDate,\n    a.unionRecord.Contract.endDate,\n    a.unionRecord.Contract.lossConfirmed,\n    ROW_NUMBER() OVER(PARTITION BY a.unionRecord.Contract.serviceAccountId, a.unionRecord.Contract.mpxn, a.unionRecord.Contract.contractId, a.unionRecord.Contract.startDate ORDER BY a.unionRecord.Contract.metadata.createdAt DESC) AS rn\n\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3` a\n  LEFT JOIN (SELECT DISTINCT unionRecord.Cancelled.contractId FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`) b --Remove cancelled contracts\n  ON a.unionRecord.Contract.contractId = b.contractId\n  WHERE a.unionRecord.Contract IS NOT NULL \n  AND b.contractId IS NULL\n  ),\n  \ncte_contracts AS(    \n  SELECT serviceAccountId\n        , fuel\n        , mpxn\n        , contractId\n        , createdAt\n        , startDate\n        , endDate  \n        , ROW_NUMBER() OVER(PARTITION BY serviceAccountId, mpxn ORDER BY startDate DESC) contractOrderDesc\n        , ROW_NUMBER() OVER(PARTITION BY serviceAccountId, mpxn ORDER BY startDate ASC) contractOrderAsc\n        , lossConfirmed\n  FROM cte_contracts_raw\n  WHERE rn=1\n  --AND lossConfirmed IS NULL --Just live supplies?\n  AND startDate BETWEEN '2019-08-28' AND CURRENT_DATE() --mpxn v4 just covers up to this point\n  --AND serviceAccountId = '3110700'\n ),\n \n --remove those accounts-mpxn where its last contract is loss confirmed\n cte_contracts_clean AS(\n   SELECT a.serviceAccountId\n          , a.fuel\n          , a.mpxn\n          , a.contractId\n          , a.createdAt\n          , a.startDate\n          , a.endDate  \n          , a.contractOrderDesc\n          , a.contractOrderAsc\n   FROM cte_contracts a\n   LEFT JOIN\n             (SELECT DISTINCT serviceAccountId, mpxn\n             FROM cte_contracts \n             WHERE lossConfirmed IS true \n             AND contractOrderDesc = 1) b\n   USING (serviceAccountId, mpxn)\n   WHERE b.serviceAccountId IS NULL\n  )\n  \n  --SELECT * FROM cte_contracts_clean WHERE serviceAccountId = '2294640'\n \n --AND mpxn = '1326570305'\n \n --SELECT * FROM cte_contracts WHERE serviceAccountId = '6476719'--'9331498403'--lossConfirmed IS NOT NULL order by mpxn--serviceAccountId = '3110700' order by mpxn\n ,\n  \n--REMOVE ALREADY EXISITNG READ\n--############################################\ncte_consumption AS(\n  SELECT DISTINCT mpan AS MPXN, msn, fromDateTime, toDateTime\n  FROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4`\n  UNION ALL \n  SELECT DISTINCT mprn AS MPXN, msn, fromDateTime, toDateTime\n  FROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2`\n ),\n\ncte_contracts_filtered AS(\n  SELECT a.*\n        --, b.toDateTime\n  FROM cte_contracts_clean a\n  LEFT JOIN cte_consumption b\n  ON a.mpxn = b.MPXN\n  AND a.startDate = DATE(b.toDateTime) --Careful here if billingdate is not UTC I'll need to add 1h in summer\n  WHERE b.MPXN IS NULL\n),\n\n--ESTIMATES\n--############################################\ncte_estimates AS(\n  SELECT 'Electricity' AS Fuel\n       , ElectricityReadEstimate.mpan AS MPXN\n       , ElectricityReadEstimate.msn AS MSN\n       , CAST(reg.tier AS STRING) AS tier\n       , CAST(reg.clockingTimeId AS STRING) AS clockingTimeId\n       , ElectricityReadEstimate.dateTime\n       , reg.readEstimate \n  FROM `data-engineering-prod.u_victor_irles.rac_electricity_readEstimates_DailyUpdate`\n  INNER JOIN UNNEST (ElectricityReadEstimate.ElectricityRegisterEstimates) AS reg\n\n  UNION ALL\n\n  SELECT 'Gas' AS Fuel\n       , GasReadEstimate.mprn AS MPXN\n       , GasReadEstimate.msn AS MSN\n       , 'G' AS tier\n       , 'G' AS clockingTimeId\n       , GasReadEstimate.dateTime\n       , GasReadEstimate.readEstimate \n  FROM `data-engineering-prod.u_victor_irles.rac_gas_readEstimates_DailyUpdate`\n),\n \n--MAP ESTIMATES TO ACCOUNTS ON BILLING DATE\n--############################################\ncte_mapEstimates AS(\n  SELECT a.*, b.MSN, b.tier, b.clockingTimeId, b.readEstimate\n  FROM  cte_contracts_filtered a--cte_estimates b\n  LEFT JOIN cte_estimates b --cte_contracts_filtered a --Do left other way around\n  ON b.MPXN = a.mpxn\n  AND DATE(b.dateTime) = a.startDate\n)\n\nSELECT serviceAccountId AS accountId\n      , fuel\n      , mpxn AS MPXN\n      , MSN\n      , tier\n      , clockingTimeId\n      , contractId\n      , createdAt\n      , startDate\n      , endDate\n      , contractOrderDesc\n      ,\tcontractOrderAsc\n      , readEstimate\nFROM cte_mapEstimates --6783 instances. We have estimates only for 4384. Multi-rate missing, consumptions gaps missing and the fact that Im only calculating estimates for reads after th elatest mapping.\nWHERE contractOrderAsc > 1\nAND readEstimate IS NOT NULL\n-- WHERE MSN IN\n-- (\n-- '19P0118042', --2020-03-07\n-- '19M1109845', --2020-02-29\n-- '17P0196134', --2020-03-14\n-- '17P7149595', --2020-03-02\n-- '14P0118875' --2020-03-08\n-- )\nORDER BY MPXN  "},"data-engineering-prod:product_andromeda_secure.rac_orion_electricity_personal_projections_monthly":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_orion_electricity_personal_projections_monthly","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_orion_electricity_personal_projections_monthly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_orion_electricity_personal_projections_monthly","table_id":"rac_orion_electricity_personal_projections_monthly","time_partitioning":null,"view_query":" WITH\n  v3 AS (\n      SELECT \n         event.ElectricityAnnualProjectionEvent.mpan                  AS mpxn\n        ,event.ElectricityAnnualProjectionEvent.effectiveFrom         AS effectiveFrom\n        ,event.ElectricityAnnualProjectionEvent.projectedConsumption  AS projectedConsumption\n        --,MAX(event.ElectricityAnnualProjectionEvent.effectiveFrom) OVER(PARTITION BY event.ElectricityAnnualProjectionEvent.mpan) AS latestProjection\n        ,CASE \n          WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n            THEN 'Actual'\n          WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n            THEN 'Industry Estimate'\n          WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n            THEN 'Hybrid'\n         END AS projectionSource\n      ,CASE WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL \n          THEN 1.0\n       WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL \n          THEN 1.0\n       ELSE event.ElectricityAnnualProjectionEvent.basedOn.ElectricityCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient\n          END AS actualDemandWeighting\n      ,( event.ElectricityAnnualProjectionEvent.basedOn.ElectricityCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.toMeterRegisterReading -\n      event.ElectricityAnnualProjectionEvent.basedOn.ElectricityCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.fromMeterRegisterReading) \/ \n      event.ElectricityAnnualProjectionEvent.basedOn.ElectricityCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient AS componentAa\n      , event.ElectricityAnnualProjectionEvent.basedOn.ElectricityCombinedPersonalProjectionOrigin.estimatedAnnualConsumptionPersonalProjectionOrigin.estimatedAnnualConsumption AS componentEac\n      ,event.ElectricityAnnualProjectionEvent.metadata.createdAt\n      FROM \n        `data-engineering-prod.landing_andromeda_secure.rac_orion_personal_projections_published_v3` \n      WHERE\n        event.ElectricityAnnualProjectionEvent.mpan IS NOT NULL\n  ),\n  v2 AS (\n      SELECT \n         event.ElectricityAnnualProjectionEvent.mpan                  AS mpxn\n        ,event.ElectricityAnnualProjectionEvent.effectiveFrom         AS effectiveFrom\n        ,event.ElectricityAnnualProjectionEvent.projectedConsumption  AS projectedConsumption\n        --,MAX(event.ElectricityAnnualProjectionEvent.effectiveFrom) OVER(PARTITION BY event.ElectricityAnnualProjectionEvent.mpan) AS latestProjection\n        ,CASE \n          WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n            THEN 'Actual'\n          WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n            THEN 'Industry Estimate'\n            END AS projectionSource\n       ,CASE WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL \n          THEN 1.0\n        WHEN event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL \n           THEN 0.0\n              END AS actualDemandWeighting\n       ,NULL AS componentAA\n       ,NULL AS componentEAC\n       ,event.ElectricityAnnualProjectionEvent.metadata.createdAt\n      FROM \n        `data-engineering-prod.landing_andromeda.rac_orion_personal_projections_published_v2` \n      WHERE\n        event.ElectricityAnnualProjectionEvent.mpan IS NOT NULL\n  ),\n  unioned AS (\n    SELECT\n       mpxn\n      ,effectiveFrom\n      ,projectedConsumption\n      ,MAX(effectiveFrom) OVER(PARTITION BY mpxn) AS latestProjection\n      ,projectionSource\n      ,CASE\n        WHEN projectionSource = 'Hybrid' THEN ROUND(componentAa)\n        WHEN projectionSource = 'Actual' THEN ROUND(projectedConsumption)\n        WHEN projectionSource = 'Industry Estimate' THEN NULL\n        END AS componentAA\n      ,CASE\n        WHEN projectionSource = 'Hybrid' THEN ROUND(componentEac)\n        WHEN projectionSource = 'Actual' THEN NULL\n        WHEN projectionSource = 'Industry Estimate' THEN ROUND(projectedConsumption)\n        END AS componentEac  \n      ,actualDemandWeighting\n      ,createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          mpxn,\n          TIMESTAMP_TRUNC(effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          effectiveFrom DESC,\n          createdAt DESC) AS rowNumber -- latest for a given month\n    FROM (\n      SELECT * FROM v3 \n      UNION ALL\n      SELECT * FROM v2\n      )\n  )\nSELECT\n   mpxn\n  ,effectiveFrom\n  ,projectedConsumption\n  ,projectionSource\n  ,actualDemandWeighting\n  ,componentEac\n  ,componentAa\n  ,CASE WHEN effectiveFrom = latestProjection THEN 1 ELSE 0 END AS IsLatest\n  ,TIMESTAMP_TRUNC(effectiveFrom, MONTH, 'UTC') AS monthStart\nFROM\n  unioned\nWHERE\n  rowNumber = 1\nORDER BY\n  mpxn, effectiveFrom DESC"},"data-engineering-prod:product_andromeda_secure.rac_orion_gas_personal_projections_monthly":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_orion_gas_personal_projections_monthly","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_orion_gas_personal_projections_monthly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_orion_gas_personal_projections_monthly","table_id":"rac_orion_gas_personal_projections_monthly","time_partitioning":null,"view_query":"WITH\n  v3 AS (\n    SELECT \n       event.GasAnnualProjectionEvent.mprn                  AS mpxn\n      , event.GasAnnualProjectionEvent.effectiveFrom         AS effectiveFrom\n      ,ROUND(event.GasAnnualProjectionEvent.projectedConsumption,2)  AS projectedConsumption\n      --,MAX( event.GasAnnualProjectionEvent.effectiveFrom ) OVER(PARTITION BY event.GasAnnualProjectionEvent.mprn ) AS latestProjection\n      ,CASE \n        WHEN event.GasAnnualProjectionEvent.basedOn.GasAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Actual'\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Industry Estimate'\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Hybrid'\n       END AS projectionSource\n      ,CASE \n        WHEN event.GasAnnualProjectionEvent.basedOn.GasAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 1.0\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 0.0\n        ELSE event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient\n       END AS actualDemandWeighting\n      ,(event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.toMeterRegisterReading -event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.fromMeterRegisterReading) *\n      event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.calorificValue *\n      1.02264 \/ \n       (event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient * 3.6)\n       AS componentAa\n      ,event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.estimatedAnnualConsumptionPersonalProjectionOrigin.estimatedAnnualConsumption AS componentEac\n      ,event.GasAnnualProjectionEvent.metadata.createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          event.GasAnnualProjectionEvent.mprn ,\n          TIMESTAMP_TRUNC( event.GasAnnualProjectionEvent.effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          event.GasAnnualProjectionEvent.effectiveFrom DESC,\n          event.GasAnnualProjectionEvent.metadata.createdAt DESC) AS rowNumber -- latest for a given month\n    FROM \n      `data-engineering-prod.landing_andromeda_secure.rac_orion_personal_projections_published_v3` \n    WHERE\n     event.GasAnnualProjectionEvent.mprn IS NOT NULL\n  ),\n  v2 AS (\n    SELECT \n       event.GasAnnualProjectionEvent.mprn                  AS mpxn\n      ,event.GasAnnualProjectionEvent.effectiveFrom         AS effectiveFrom\n      ,ROUND(event.GasAnnualProjectionEvent.projectedConsumption,2)  AS projectedConsumption\n      --,MAX( event.GasAnnualProjectionEvent.effectiveFrom ) OVER(PARTITION BY event.GasAnnualProjectionEvent.mprn ) AS latestProjection\n      ,CASE \n        WHEN event.GasAnnualProjectionEvent.basedOn.GasAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Actual'\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Industry Estimate'\n       END AS projectionSource\n      ,CASE \n        WHEN event.GasAnnualProjectionEvent.basedOn.GasAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 1.0\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 0.0\n       END AS actualDemandWeighting\n      ,NULL AS componentAa\n      ,NULL AS componentEac\n      ,event.GasAnnualProjectionEvent.metadata.createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          event.GasAnnualProjectionEvent.mprn ,\n          TIMESTAMP_TRUNC( event.GasAnnualProjectionEvent.effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          event.GasAnnualProjectionEvent.effectiveFrom DESC,\n          event.GasAnnualProjectionEvent.metadata.createdAt DESC) AS rowNumber -- latest for a given month\n    FROM \n      `data-engineering-prod.landing_andromeda.rac_orion_personal_projections_published_v2` \n    WHERE\n     event.GasAnnualProjectionEvent.mprn IS NOT NULL  \n  ),\n  unioned AS (\n    SELECT\n       mpxn\n      ,effectiveFrom\n      ,projectedConsumption\n      ,MAX(effectiveFrom) OVER(PARTITION BY mpxn) AS latestProjection\n      ,projectionSource\n      ,CASE\n        WHEN projectionSource = 'Hybrid' THEN ROUND(componentAa)\n        WHEN projectionSource = 'Actual' THEN ROUND(projectedConsumption)\n        WHEN projectionSource = 'Industry Estimate' THEN NULL\n        END AS componentAA\n      ,CASE\n        WHEN projectionSource = 'Hybrid' THEN ROUND(componentEac)\n        WHEN projectionSource = 'Actual' THEN NULL\n        WHEN projectionSource = 'Industry Estimate' THEN ROUND(projectedConsumption)\n        END AS componentEac       \n      ,createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          mpxn,\n          TIMESTAMP_TRUNC(effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          effectiveFrom DESC,\n          createdAt DESC) AS rowNumber -- latest for a given month\n    FROM (\n      SELECT * FROM v3 \n      UNION ALL\n      SELECT * FROM v2\n      )\n  )\nSELECT\n   mpxn\n  ,effectiveFrom\n  ,projectedConsumption\n  ,projectionSource\n  ,componentAa\n  ,componentEac\n  ,CASE WHEN effectiveFrom = latestProjection THEN 1 ELSE 0 END AS IsLatest\n  ,TIMESTAMP_TRUNC(effectiveFrom, MONTH, 'UTC') AS monthStart\nFROM\n  unioned\nWHERE\n  rowNumber = 1\nORDER BY\n  mpxn, effectiveFrom DESC"},"data-engineering-prod:product_andromeda_secure.rac_orion_personal_projections_monthly":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.rac_orion_personal_projections_monthly","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_orion_personal_projections_monthly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/rac_orion_personal_projections_monthly","table_id":"rac_orion_personal_projections_monthly","time_partitioning":null,"view_query":"WITH\n  v3 AS (\n    SELECT \n       event.GasAnnualProjectionEvent.mprn                  AS mpxn\n      , event.GasAnnualProjectionEvent.effectiveFrom         AS effectiveFrom\n      ,ROUND(event.GasAnnualProjectionEvent.projectedConsumption,2)  AS projectedConsumption\n      ,MAX( event.GasAnnualProjectionEvent.effectiveFrom ) OVER(PARTITION BY event.GasAnnualProjectionEvent.mprn ) AS latestProjection\n      ,CASE \n        WHEN event.GasAnnualProjectionEvent.basedOn.GasAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Actual'\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Industry Estimate'\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasCombinedPersonalProjectionOrigin.annualisedAdvancePersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Hybrid'\n       END AS projectionSource\n       ,event.GasAnnualProjectionEvent.metadata.createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          event.GasAnnualProjectionEvent.mprn ,\n          TIMESTAMP_TRUNC( event.GasAnnualProjectionEvent.effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          event.GasAnnualProjectionEvent.effectiveFrom DESC,\n          event.GasAnnualProjectionEvent.metadata.createdAt DESC) AS rowNumber -- latest for a given month\n    FROM \n      `data-engineering-prod.landing_andromeda_secure.rac_orion_personal_projections_published_v3` \n    WHERE\n     event.GasAnnualProjectionEvent.mprn IS NOT NULL\n  ),\n  v2 AS (\n    SELECT \n       event.GasAnnualProjectionEvent.mprn                  AS mpxn\n      , event.GasAnnualProjectionEvent.effectiveFrom         AS effectiveFrom\n      ,ROUND(event.GasAnnualProjectionEvent.projectedConsumption,2)  AS projectedConsumption\n      ,MAX( event.GasAnnualProjectionEvent.effectiveFrom ) OVER(PARTITION BY event.GasAnnualProjectionEvent.mprn ) AS latestProjection\n      ,CASE \n        WHEN event.GasAnnualProjectionEvent.basedOn.GasAnnualAdvancementPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Actual'\n        WHEN event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.cumulativeCoefficient IS NOT NULL\n          THEN 'Industry Estimate'\n       END AS projectionSource\n      ,event.GasAnnualProjectionEvent.metadata.createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          event.GasAnnualProjectionEvent.mprn ,\n          TIMESTAMP_TRUNC( event.GasAnnualProjectionEvent.effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          event.GasAnnualProjectionEvent.effectiveFrom DESC,\n          event.GasAnnualProjectionEvent.metadata.createdAt DESC) AS rowNumber -- latest for a given month\n    FROM \n      `data-engineering-prod.landing_andromeda.rac_orion_personal_projections_published_v2` \n    WHERE\n     event.GasAnnualProjectionEvent.mprn IS NOT NULL  \n  ),\n  unioned AS (\n    SELECT\n       mpxn\n      ,effectiveFrom\n      ,projectedConsumption\n      ,latestProjection\n      ,projectionSource\n      ,createdAt\n      ,ROW_NUMBER() OVER(\n        PARTITION BY \n          mpxn,\n          TIMESTAMP_TRUNC(effectiveFrom , MONTH, 'UTC')\n        ORDER BY \n          effectiveFrom DESC,\n          createdAt DESC) AS rowNumber -- latest for a given month\n    FROM (\n      SELECT * FROM v3 \n      UNION ALL\n      SELECT * FROM v2\n      )\n  )\nSELECT\n   mpxn\n  ,effectiveFrom\n  ,projectedConsumption\n  ,projectionSource\n  ,CASE WHEN effectiveFrom = latestProjection THEN 1 ELSE 0 END AS IsLatest\n  ,TIMESTAMP_TRUNC(effectiveFrom, MONTH, 'UTC') AS monthStart\nFROM\n  unioned\nWHERE\n  rowNumber = 1\nORDER BY\n  mpxn, effectiveFrom DESC"},"data-engineering-prod:product_andromeda_secure.read_dispute_work_item_changes":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.read_dispute_work_item_changes","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/read_dispute_work_item_changes","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/read_dispute_work_item_changes","table_id":"read_dispute_work_item_changes","time_partitioning":null,"view_query":"with cte_sequence as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         case\n          when wi.statusChangeAuthor = 'google-oauth2|101896709569699413536' then 'Rhianna Bailey'\n          when wi.statusChangeAuthor = 'google-oauth2|109028848899209592945' then 'Danielle Giltrow'\n          when wi.statusChangeAuthor = 'google-oauth2|104990701221444704641' then 'Pete Grace'\n          when wi.statusChangeAuthor = 'google-oauth2|104926974093175656072' then 'Mike Gibson'\n          else wi.statusChangeAuthor\n         end as statusChangeAuthor,\n         split(e, '\/') as key_array,\n         row_number() over (partition by wi.workItemId order by wi.statusChangeDateTime asc, wi.metadata.createdAt asc) as statusChangeSequence\n  from `data-engineering-prod.landing_oot_secure.oot_work_item_v3` wi\n  inner join unnest(wi.entityUris) e\n  where e like 'read-disputes%'\n)\nselect wi.* except(key_array),\n       wi.key_array[offset(2)] as mpxn,\n       cast(wi.key_array[offset(3)] as date) as disputedReadDate\nfrom cte_sequence wi"},"data-engineering-prod:product_andromeda_secure.read_dispute_work_items":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.read_dispute_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/read_dispute_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/read_dispute_work_items","table_id":"read_dispute_work_items","time_partitioning":null,"view_query":"with cte_dedupe as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         coalesce(u.name, wi.statusChangeAuthor) as statusChangeAuthor,\n         split(e, '\/') as key_array,\n         row_number() over (partition by wi.workItemId order by wi.statusChangeDateTime desc, wi.metadata.createdAt desc) as row_num_all,\n         row_number() over (partition by wi.workItemId order by case when wi.statusChangeAuthor is not null then 1 else 2 end, -- favour when there's an author\n                                                                case when wi.statusNote not like 'State Transition%' then 1 else 2 end, -- favour when it's not a state transition to get round bug we had to begin with\n                                                                wi.statusChangeDateTime desc, wi.metadata.createdAt desc) as row_num_worked\n  from `data-engineering-prod.landing_oot_secure.oot_work_item_v3` wi\n  inner join unnest(wi.entityUris) e\n  left join `data-engineering-prod.landing_oot_secure.oot_users_export` u on wi.statusChangeAuthor = u.userId\n  where e like 'read-disputes%'\n)\nselect wi.* except(key_array, row_num_all, row_num_worked),\n       wi.key_array[offset(2)] as mpxn,\n       cast(wi.key_array[offset(3)] as date) as disputedReadDate,\n       case when wrkd.statusChangeAuthor is not null then true else false end as hasBeenWorked,\n       wrkd.statusChangeAuthor as lastWorkedBy,\n       wrkd.status as lastWorkedStatus,\n       wrkd.statusChangeDateTime as lastWorkedDatetime,\n       wrkd.statusNote as lastWorkedNote,\n       wrkd.statusDueDate as lastWorkedDueDate,\n       case when wrkd.status in ('AwaitingSupplier', 'AwaitingCustomer') and current_date() >= wrkd.statusDueDate then true else false end as isPastDueDate\nfrom cte_dedupe wi\nleft join cte_dedupe wrkd on wi.workItemId = wrkd.workItemId\n                         and wrkd.row_num_worked = 1\nwhere wi.row_num_all = 1"},"data-engineering-prod:product_andromeda_secure.registers":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.registers","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/registers","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/registers","table_id":"registers","time_partitioning":null,"view_query":"select mpxn,\n       0 as tier,\n       '00001' as tpr\nfrom `data-engineering-prod.product_andromeda_secure.supply_points` sp\nwhere sp.chargeMandateStatus = 'Has Current Charge Mandate'\n  and sp.fuel = 'electricity'"},"data-engineering-prod:product_andromeda_secure.results_20190524_164200":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.results_20190524_164200","location":"EU","num_bytes":50268275,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/results_20190524_164200","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/results_20190524_164200","table_id":"results_20190524_164200","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.settled_gas_reads_orion":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.settled_gas_reads_orion","location":"EU","num_bytes":4477992,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/settled_gas_reads_orion","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/settled_gas_reads_orion","table_id":"settled_gas_reads_orion","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.smart_meter_read_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.smart_meter_read_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/smart_meter_read_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/smart_meter_read_snapshots","table_id":"smart_meter_read_snapshots","time_partitioning":null,"view_query":"WITH cte_simplified as (\n  SELECT COALESCE(s.value.ElectricityMidnightSnapshotReadingEvent.msn, s.value.GasMidnightSnapshotReadingEvent.msn) as msn,\n         COALESCE(s.value.ElectricityMidnightSnapshotReadingEvent.snapshotTime, s.value.GasMidnightSnapshotReadingEvent.snapshotTime) as snapshotTime,\n         COALESCE(s.value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan, s.value.GasMidnightSnapshotReadingEvent.mprn) as mpxn,\n         CASE WHEN s.value.ElectricityMidnightSnapshotReadingEvent.snapshotTime IS NOT NULL THEN 'electricity'\n              WHEN s.value.GasMidnightSnapshotReadingEvent.snapshotTime IS NOT NULL THEN 'gas'\n         END AS fuel,\n         s.value.GasMidnightSnapshotReadingEvent.gasVolume as importTotalVolumeRead,\n         MIN(CASE WHEN r.tier = 0 THEN r.reading END) AS importReg0KwhRead,\n         MIN(CASE WHEN r.tier = 1 THEN r.reading END) AS importReg1KwhRead,\n         MIN(CASE WHEN r.tier = 2 THEN r.reading END) AS importReg2KwhRead\n  FROM `data-engineering-prod.raw_andromeda_secure.rac_msd_simplified` s\n  LEFT JOIN UNNEST(s.value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers) r\n  GROUP BY s.value.ElectricityMidnightSnapshotReadingEvent.msn,\n           s.value.GasMidnightSnapshotReadingEvent.msn,\n           s.value.ElectricityMidnightSnapshotReadingEvent.snapshotTime,\n           s.value.GasMidnightSnapshotReadingEvent.snapshotTime,\n           s.value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan,\n           s.value.GasMidnightSnapshotReadingEvent.mprn,\n           s.value.GasMidnightSnapshotReadingEvent.gasVolume\n),\n\ncte_received as (\n  SELECT msd.snapshotData.device.snapshotId,\n         msd.snapshotData.device.snapshotTime,\n         msd.snapshotData.device.serialNumber as msn,\n         lower(msd.snapshotData.device.servicePointNumber) as mpxn,\n         msd.snapshotData.device.supplyType as fuel,\n         msd.snapshotData.device.snapshotCause,\n         msd.snapshotData.device.importChargingType,\n         msd.snapshotData.device.cumulativeRegisters.volume       as importTotalVolumeRead,\n         msd.snapshotData.device.cumulativeRegisters.activeImport as importTotalKwhRead,\n         MIN(CASE WHEN r.tier = 0 THEN r.cumulative END) AS importReg0KwhRead,\n         MIN(CASE WHEN r.tier = 1 THEN r.cumulative END) AS importReg1KwhRead,\n         MIN(CASE WHEN r.tier = 2 THEN r.cumulative END) AS importReg2KwhRead,\n         msd.snapshotData.device.exportChargingType,\n         msd.snapshotData.device.cumulativeRegisters.activeExport AS exportTotalKwhRead\n  FROM `data-engineering-prod.raw_andromeda_secure.rac_msd_received` msd\n  INNER JOIN UNNEST (snapshotData.device.importRateRegisters.value) as r\n  GROUP BY msd.snapshotData.device.snapshotId,\n           msd.snapshotData.device.snapshotTime,\n           msd.snapshotData.device.servicePointNumber,\n           msd.snapshotData.device.serialNumber, \n           msd.snapshotData.device.supplyType,\n           msd.snapshotData.device.snapshotCause,\n           msd.snapshotData.device.importChargingType,\n           msd.snapshotData.device.cumulativeRegisters.activeImport,\n           msd.snapshotData.device.cumulativeRegisters.volume,\n           msd.snapshotData.device.exportChargingType,\n           msd.snapshotData.device.cumulativeRegisters.activeExport\n)\n\nSELECT distinct msd.snapshotId,\n       COALESCE(msd.snapshotTime, simp.snapshotTime) as snapshotTime,\n       COALESCE(msd.msn, simp.msn) as msn,\n       COALESCE(CASE WHEN LENGTH(simp.mpxn) < 10 THEN SUBSTR(CONCAT('00000', simp.mpxn), -10) ELSE simp.mpxn END,\n                CASE WHEN LENGTH(msd.mpxn) < 10 THEN SUBSTR(CONCAT('00000', msd.mpxn), -10) ELSE msd.mpxn END) as mpxn,\n       msd.mpxn as mpxnFromMeter,\n       simp.mpxn as mpxnFromMsdSimplified,\n       CASE WHEN CASE WHEN LENGTH(simp.mpxn) < 10 THEN SUBSTR(CONCAT('00000', simp.mpxn), -10) ELSE simp.mpxn END\n                 =\n                 CASE WHEN LENGTH(msd.mpxn) < 10 THEN SUBSTR(CONCAT('00000', msd.mpxn), -10) ELSE msd.mpxn END \n            THEN 'Validated'\n            WHEN msd.snapshotTime < '2018-03-01' THEN 'Pre-Validation'\n            WHEN CASE WHEN LENGTH(simp.mpxn) < 10 THEN SUBSTR(CONCAT('00000', simp.mpxn), -10) ELSE simp.mpxn END\n                 <>\n                 CASE WHEN LENGTH(msd.mpxn) < 10 THEN SUBSTR(CONCAT('00000', msd.mpxn), -10) ELSE msd.mpxn END \n            THEN 'Suspected incorrect MPXN on Meter'\n            WHEN msd.mpxn IS NULL THEN 'SMETS2'\n            WHEN simp.mpxn IS NULL THEN 'Not Validated'\n       END AS mpxnValidationStatus,\n       COALESCE(msd.fuel, simp.fuel) as fuel,\n       msd.snapshotCause,\n       msd.importChargingType,\n       COALESCE(msd.importTotalVolumeRead, simp.importTotalVolumeRead) as importTotalVolumeRead,\n       msd.importTotalKwhRead,\n       COALESCE(msd.importReg0KwhRead, simp.importReg0KwhRead) as importReg0KwhRead,\n       COALESCE(msd.importReg1KwhRead, simp.importReg1KwhRead) as importReg1KwhRead,\n       COALESCE(msd.importReg2KwhRead, simp.importReg2KwhRead) as importReg2KwhRead,\n       msd.exportChargingType,\n       msd.exportTotalKwhRead,\n       CASE WHEN RANK() OVER(PARTITION BY COALESCE(CASE WHEN LENGTH(simp.mpxn) < 10 THEN SUBSTR(CONCAT('00000', simp.mpxn), -10) ELSE simp.mpxn END,\n                                                   CASE WHEN LENGTH(msd.mpxn) < 10 THEN SUBSTR(CONCAT('00000', msd.mpxn), -10) ELSE msd.mpxn END) \n                             ORDER BY COALESCE(msd.snapshotTime, simp.snapshotTime) DESC) = 1\n            THEN 1\n            ELSE 0\n       END as isLatestSnapshotForSupplyPoint\nFROM cte_received msd\nFULL JOIN cte_simplified simp ON msd.msn = simp.msn AND msd.snapshotTime = simp.snapshotTime"},"data-engineering-prod:product_andromeda_secure.standing_charges":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.standing_charges","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/standing_charges","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/standing_charges","table_id":"standing_charges","time_partitioning":null,"view_query":"with cte_standing_charge_created as\n(\n  with cte_charge_dedupe as\n  (\n    select created_eventId            as event_id,\n           created_chargeId           as charge_id,\n           created_createdAt          as created_at,\n           created_chargeDate         as charge_date,\n           created_contractId         as contract_id,\n           created_supplyPoint        as supply_point,\n           created_amount             as charge_amount,\n           insertTime                 as latestCreatedInsertTime,\n           row_number() over (partition by created_chargeId order by insertTime desc, created_createdAt desc) as charge_dedupe_rownum\n    from `data-engineering-prod.raw_andromeda_secure.energy_contracts_standing_charge_created`\n    WHERE created_eventId is not null\n  )\n  select *\n  from cte_charge_dedupe\n  where charge_dedupe_rownum = 1\n),\ncte_created_times as\n(\n  select created_chargeId as charge_id,\n         min(created_createdAt) as charge_first_created_time\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_standing_charge_created`\n  group by created_chargeId\n),\ncte_standing_charge_cancelled as\n(\n  select cancelled_chargeId        as charge_id,\n         max(insertTime)           as latestCancelledInsertTime\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_standing_charge_created`\n  where cancelled_eventId is NOT null\n  group by cancelled_chargeId\n),\ncte_standing_charge as\n(\n  select \n      sc_created.supply_point,\n      sc_created.contract_id,\n      sc_created.charge_id,\n      ct.charge_first_created_time,\n      sc_created.charge_date,\n      CAST(sc_created.charge_date AS datetime) AS Charge_From_Date,\n      cast(DATE_ADD(sc_created.charge_date,INTERVAL 1 DAY) as datetime) AS Charge_To_Date,\n      sc_created.charge_amount,\n      case when sc_cancelled.charge_id is null then 0 else 1 end is_cancelled,\n      'standing_charge' as charge_type\n  from\n               cte_standing_charge_created sc_created\n  LEFT JOIN    cte_created_times ct on sc_created.charge_id = ct.charge_id\n  left join    cte_standing_charge_cancelled sc_cancelled on sc_cancelled.charge_id = sc_created.charge_id\n                                                         and sc_cancelled.latestCancelledInsertTime > sc_created.latestCreatedInsertTime\n)\nselect sc.*,\n       sc.supply_point as mpxn\nfrom cte_standing_charge sc\nwhere is_cancelled = 0"},"data-engineering-prod:product_andromeda_secure.supply_point_override_work_items":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.supply_point_override_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/supply_point_override_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/supply_point_override_work_items","table_id":"supply_point_override_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where entityUri like 'overrides%'\n)\nselect wi.key_array[offset(3)] as mpxn,\n       wi.key_array[offset(2)] as fuel,\n       wi.* except(key_array)\nfrom cte_work_items wi"},"data-engineering-prod:product_andromeda_secure.supply_points":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.supply_points","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/supply_points","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/supply_points","table_id":"supply_points","time_partitioning":null,"view_query":"with cte_supply_points as (\n  with cte_elec_dedupe as   (\n    select sp.mpxn,\n           sp.gspGroupId,\n           sp.msn,\n           sp.profileClassId,\n           NULL as meterTimeswitchCode,\n           sp.lineLossFactorClassId, \n           sp.supplyStatus.status as supplyStatus,\n           sp.supplyStatus.statusDate as supplyStatusDate,\n           mrh as currentMeterRegisters,\n           sp.meterRegisterHistory,\n           sp.latestMeterDetails.meterType as meterType,\n           row_number() over (partition by mpxn order by metadata.createdAt desc, kafkaData.insertTime desc, kafkaData.offset desc) as mpxn_dedupe_rownum\n    from `data-engineering-prod.raw_andromeda_secure.spam_electricitySupplyPoint_legacy` sp\n    left join unnest(sp.meterRegisterHistory) mrh\n  ),\n  \n  cte_gas_dedupe as (\n    select mpxn,\n           ldz,\n           msn,\n           supplyStatus.status as supplyStatus,\n           supplyStatus.statusDate as supplyStatusDate,\n           latestInstallation.meterType as meterType,\n           row_number() over (partition by mpxn order by metadata.createdAt desc, kafkaData.insertTime desc, kafkaData.offset) as mpxn_dedupe_rownum\n    from `data-engineering-prod.raw_andromeda_secure.spam_gasSupplyPoint_legacy`\n  )\n  \n  select mpxn,\n         'electricity' as fuel,\n         gspGroupId as regionCode,\n         gspGroupId,\n         null as ldz,\n         msn,\n         profileClassId,\n         meterTimeswitchCode,\n         lineLossFactorClassId,\n         supplyStatus,\n         supplyStatusDate,\n         currentMeterRegisters,\n         meterRegisterHistory,\n         meterType\n  from cte_elec_dedupe\n  where mpxn_dedupe_rownum = 1\n    and length(mpxn) = 13 -- Validate that it's an elec MPAN to filter out duds that have been published historically\n  \n  union all\n  \n  select mpxn,\n         'gas' as fuel,\n         ldz as regionCode,\n         null as gspGroupId,\n         ldz,\n         msn,\n         null as profileClassId,\n         null as meterTimeswitchCode,\n         null as lineLossFactorClassId,\n         supplyStatus,\n         supplyStatusDate,\n         null as currentMeterRegisters,\n         null as meterRegisterHistory,\n         meterType\n  from cte_gas_dedupe\n  where mpxn_dedupe_rownum = 1\n    and length(mpxn) <= 10 -- Validate that it's a as MPRN to filter out duds that have been published historically\n),\n\n-- This deliberately pulls back supply points with cancelled charge mandates as these are of interest to us\ncte_all_historical_charge_mandated_supply_points as (\n  select contract_mpxn as mpxn,\n         min(cast(contract_createdAt as date)) as andromedaMigrationDate\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_contract`\n  where contract_contractId is not null\n  group by contract_mpxn\n),\n\ncte_charge_mandate_status as (\n  select sp.mpxn,\n         sp.andromedaMigrationDate,\n         case\n          when current_date() between min(cm.startDate) and max(coalesce(cm.endDate, '2999-01-01')) then 'Has Current Charge Mandate'\n          when current_date() > max(cm.endDate) then 'Has Historic Charge Mandate'\n          when current_date() < MIN(cm.startDate) then 'Has Future Charge Mandate'\n          when min(cm.startDate) is null then 'Has Cancelled Charge Mandate'\n         END as chargeMandateStatus\n  from cte_all_historical_charge_mandated_supply_points sp\n  left join `data-engineering-prod.product_andromeda_secure.contracts` cm on sp.mpxn = cm.mpxn\n  group by sp.mpxn,\n           sp.andromedaMigrationDate\n),\n\n-- TODO: Add in rac_personal_projections_calculated_v5.event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin.estimatedAnnualConsumptions\ncte_estimated_consumption_dedupe as (\n  select case when length(ieu.supplyPoint) < 10 then substr(concat('00000', ieu.supplyPoint), -10) ELSE ieu.supplyPoint END as mpxn,\n         ieu.forecastedAnnualConsumption,\n         ieu.effectiveFrom as forecastedAnnualConsumptionEffectiveFrom,\n         row_number() over (partition by case when length(ieu.supplyPoint) < 10 then substr(concat('00000', ieu.supplyPoint), -10) ELSE ieu.supplyPoint END\n                            order by ieu.effectiveFrom desc, ieu.metadata.createdAt desc) as estimated_consumption_dedupe_rownum\n  from `data-engineering-prod.raw_andromeda_secure.rac_industry_estimate_updated` ieu\n),\n\ncte_register_eacs as (\n  with cte_latest_eac_dedupe as (\n    select event.ElectricityAnnualProjectionEvent.mpan as mpxn,\n           event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin.estimatedAnnualConsumptions,\n           row_number() over (partition by event.ElectricityAnnualProjectionEvent.mpan order by event.ElectricityAnnualProjectionEvent.metadata.createdAt desc) as row_num\n    from `data-engineering-prod.raw_andromeda_secure.rac_personal_projections_calculated`\n    where event.ElectricityAnnualProjectionEvent.basedOn.ElectricityEstimatedAnnualConsumptionPersonalProjectionOrigin is not null\n  ),\n  \n  cte_latest_aq_dedupe as (\n    select event.GasAnnualProjectionEvent.mprn as mpxn,\n           array(select struct(cast(null as int64) as timePatternRegime,\n                               event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin.estimatedAnnualConsumption)) as estimatedAnnualConsumptions,\n           row_number() over (partition by event.GasAnnualProjectionEvent.mprn order by event.GasAnnualProjectionEvent.metadata.createdAt desc) as row_num\n    from `data-engineering-prod.raw_andromeda_secure.rac_personal_projections_calculated`\n    where event.GasAnnualProjectionEvent.basedOn.GasEstimatedAnnualConsumptionPersonalProjectionOrigin is not null\n  )\n  \n  select * except(row_num)\n  from cte_latest_eac_dedupe\n  where row_num = 1\n  \n  union all\n  \n  select * except(row_num)\n  from cte_latest_aq_dedupe\n  where row_num = 1\n)\n\nselect sp.*,\n       substr(sp.mpxn, 1, 2) as distributorId,\n       currentMeterRegisters.ssc as ssc,\n       case\n         when sp.fuel = 'electricity' then 'kwh'\n         when sp.fuel = 'gas' and chargeMandateStatus = 'Has Current Charge Mandate' then 'm3'\n       end as meterUnitOfMeasure,\n       cm.andromedaMigrationDate,\n       cm.chargeMandateStatus,\n       rec.estimatedAnnualConsumptions as registerEstimatedAnnualConsumptions,\n       ec.forecastedAnnualConsumption,\n       ec.forecastedAnnualConsumptionEffectiveFrom\nfrom cte_supply_points sp\nleft join cte_charge_mandate_status cm on sp.mpxn = cm.mpxn\nleft join cte_estimated_consumption_dedupe ec on sp.mpxn = ec.mpxn and ec.estimated_consumption_dedupe_rownum = 1\nleft join cte_register_eacs rec on sp.mpxn = rec.mpxn"},"data-engineering-prod:product_andromeda_secure.supply_points_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.supply_points_extract","location":"EU","num_bytes":109371747,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/supply_points_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/supply_points_extract","table_id":"supply_points_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_ambiguous_meter_losses_elec":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_ambiguous_meter_losses_elec","location":"EU","num_bytes":150286,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_ambiguous_meter_losses_elec","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_ambiguous_meter_losses_elec","table_id":"tardis_ambiguous_meter_losses_elec","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_ambiguous_meter_losses_gas":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_ambiguous_meter_losses_gas","location":"EU","num_bytes":370687,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_ambiguous_meter_losses_gas","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_ambiguous_meter_losses_gas","table_id":"tardis_ambiguous_meter_losses_gas","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_dispute_state":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_dispute_state","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_dispute_state","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_dispute_state","table_id":"tardis_dispute_state","time_partitioning":null,"view_query":"WITH event as (\n    SELECT *\n          ,'Elec' as Fuel\n          ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC) Row_Num\n    FROM `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_state` \n    \n    UNION ALL\n    \n    SELECT *\n          , \"Gas\" as Fuel\n          ,ROW_NUMBER() OVER(PARTITION BY mpxn ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC) Row_Num\n    FROM `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_state` \n),\n\nlatest_account as (\nSELECT a.Account_No\n      ,e.mpxn\n      ,e.Fuel\n      ,e.disputedReadDate \n      ,e.status \n      ,e.workRequired \n      ,e.disputedReadValues \n      ,e.metadata\n      ,ROW_NUMBER() OVER(PARTITION BY e.mpxn ORDER BY a.Start_Date DESC) Row_Num\nFROM event e\nLEFT JOIN `data-engineering-prod.product_orion.account_supply_points` a on a.Meter_Point_No = e.mpxn and e.disputedReadDate >= a.Start_Date \nWHERE Row_Num = 1\n)\n\nSELECT a.Account_No\n      ,a.mpxn\n      ,a.Fuel\n      ,a.disputedReadDate \n      ,a.status \n      ,a.workRequired \n      ,a.disputedReadValues \n      ,if(status in (\"Agreed\", \"Agreed-Pending\",\"Agreed-Complete\", \"Cancelled\"), true, false) Is_Closed\n      ,a.metadata\nFROM latest_account a\nWHERE a.Row_Num = 1"},"data-engineering-prod:product_andromeda_secure.tardis_dispute_status_events":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_dispute_status_events","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_dispute_status_events","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_dispute_status_events","table_id":"tardis_dispute_status_events","time_partitioning":null,"view_query":"select Distinct\n*\nFrom\n(\nSELECT\nmpxn,\ndisputedReadDate,\nstatus,\nworkRequired,\nmetadata.createdAt as statusTime\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v2`\n\nUnion All\n\nSELECT\nmpxn,\ndisputedReadDate,\nstatus,\nworkRequired,\nmetadata.createdAt as statusTime\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v2`\n\nUnion All\n\nSELECT\nmpxn,\ndisputedReadDate,\nstatus,\nworkRequired,\nmetadata.createdAt as statusTime\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v2`\n\nUnion All\n\nSELECT\nmpxn,\ndisputedReadDate,\nstatus,\nworkRequired,\nmetadata.createdAt as statusTime\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v2`\n\nOrder By statusTime)"},"data-engineering-prod:product_andromeda_secure.tardis_disputes_currently_proposed":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_disputes_currently_proposed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_disputes_currently_proposed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_disputes_currently_proposed","table_id":"tardis_disputes_currently_proposed","time_partitioning":null,"view_query":"WITH cte_responses as\n\n(\nSelect\nMPxN,\ndisputedReadDate,\nAgreedAt as responseTime\nFrom\n`data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_agreed`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\nrejectedAt as responseTime\nFrom\n`data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_rejected`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\nalternatedAt as responseTime\nFrom\n`data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_alternated`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\ninvalidAt as responseTime\nFrom\n`data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_invalid_v2`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\nagreedAt as responseTime\nFrom\n`data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_agreed`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\nrejectedAt as responseTime\nFrom\n`data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_rejected`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\nalternatedAt as responseTime\nFrom\n`data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_alternated`\nUnion All\nSelect\nMPxN,\ndisputedReadDate,\ninvalidAt as responseTime\nFrom\n`data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_invalid_v2`\n)\n,\n\ncte_initiations\n\nAS\n\n(\nSelect Distinct\n'Elec' as fuel,\nCase\nWhen initiatedBy = losingSupplier Then gainingSupplier\nWhen initiatedBy = gainingSupplier Then losingSupplier\nEnd\nAs\notherSupplier,\nie.MPxN,\nie.disputedReadDate,\nDate(ie.InitiatedAt) as initiatedDate,\nFROM `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_initiated` ie\nUNION ALL\nSELECT\nDistinct\n'Gas' as fuel,\nCase\nWhen initiatedBy = losingSupplier Then gainingSupplier\nWhen initiatedBy = gainingSupplier Then losingSupplier\nEnd\nAs\notherSupplier,\nig.MPxN,\nig.disputedReadDate,\nDate(ig.InitiatedAt) as initiatedDate,\nFROM `data-engineering-prod.raw_andromeda_secure.tardis_gas_dispute_initiated` ig\n)\n\n\nSELECT\nfuel,\notherSupplier,\ni.MPxN,\ni.disputedReadDate,\ninitiatedDate\nFROM cte_initiations i\nLEFT Join cte_responses s on i.mpxn = s.mpxn and i.disputedReadDate = s.disputedReadDate\nWhere s.mpxn is null\n\n\nOrder By\notherSupplier\n,\nInitiatedDate ASC\n\n"},"data-engineering-prod:product_andromeda_secure.tardis_duplicates_in_DRS":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_duplicates_in_DRS","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_duplicates_in_DRS","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_duplicates_in_DRS","table_id":"tardis_duplicates_in_DRS","time_partitioning":null,"view_query":"WITH\n\ncte_in_tardis AS\n\n(\nSelect Distinct\nMPxN,\ndisputedReadDate,\ninitiatedAt,\n'E' as fuelType,\n'' as sarRef\nFrom\n`raw_andromeda_secure.tardis_elec_dispute_initiated`\nUnion All\nSelect Distinct\nMPxN,\ndisputedReadDate,\ninitiatedAt,\n'G' as fuelType,\nsarReferenceNumber as sarRef,\nFROM\n`raw_andromeda_secure.tardis_gas_dispute_initiated`\n)\n\n,\ncte_dispute_status\nas\n(SELECT\ndh.DisputeID,\ndh.Status,\nds.Description,\nRANK() OVER(PARTITION BY DisputeID ORDER BY DateAdded desc) as latest_status\nFROM `source-data-mirror-prod.BC_OVO_Applications_internal.DisputeHistory` dh\nInner Join `source-data-mirror-prod.BC_OVO_Applications_internal.DisputeStatus` ds on dh.Status = ds.ID\nwhere dh.status > 0\n)\n,\n\ncte_DRS_disputes\nAS\n(\nSELECT\nID,\nAccountNo,\nMPAN_MPRN,\nds.Status as StatusID,\nds.Description as StatusDescription,\nDateRaised,\ndate(d.DisputedReadDate) as disputedReadDate,\nInitiatingSupplier,\nIsNewSupplier,\nReceivingSupplier\nFROM `source-data-mirror-prod.BC_OVO_Applications_internal.Dispute` d\nINNER Join cte_dispute_status ds\non d.ID = ds.DisputeID\nwhere ds.latest_status = 1\n\n)\n\nSelect\nd.*,\nt.initiatedAt\nFrom\ncte_DRS_disputes d\nLeft Join cte_in_tardis t on d.MPAN_MPRN = t.mpxn and d.disputedReadDate = t.disputedReadDate\nWhere t.mpxn is not null\nand StatusID = 10"},"data-engineering-prod:product_andromeda_secure.tardis_elec_agent_initiated_disputes":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_elec_agent_initiated_disputes","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_agent_initiated_disputes","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_agent_initiated_disputes","table_id":"tardis_elec_agent_initiated_disputes","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_elec_final_reads_to_load":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_elec_final_reads_to_load","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_final_reads_to_load","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_final_reads_to_load","table_id":"tardis_elec_final_reads_to_load","time_partitioning":null,"view_query":"With\ncte_data_with_calcs\nAs\n(\nSELECT *\n,\n(SELECT Round(SUM(proposedReadDiff))\nFROM UNNEST(l.registers) x) AS totalProposedReadDiff,\n(SELECT Round(SUM(totalAdjustedDifference))\nFROM UNNEST(l.registers) x) AS totalTotalAdjustedDifference,\n(SELECT Round(SUM(LastIndustryToPriorReadDifference ))\nFROM UNNEST(l.registers) x) AS totalPriorReadDiff,\n(SELECT Round(SUM(priorReadAge))\nFROM UNNEST(l.registers) x) AS totalPriorReadAge\nFROM `data-engineering-prod.product_andromeda_secure.tardis_elec_loss_data_extract` l\n)\nSelect\nDistinct\nmpan,\nreg.latestIndustryReadMSN as msn,\nPARSE_DATE('%d\/%m\/%Y', disputedReadDate) as readingDate,\nreg.timeOfUseLabel,\nCase\nWhen reg.isTvr = 1 and totalProposedReadDiff < 350 and reg.latestIndustryReadType = 'C' Then reg.latestIndustryReadValue\nWhen reg.isTvr = 1 and totalTotalAdjustedDifference < 350 and reg.latestIndustryReadType = 'C' Then reg.TotalAdjustedIndustry\nElse\nreg.latestIndustryReadValue\nEnd as reading,\nreg.latestIndustryReadType as readingType,\nreg.meterType,\nreg.backingReadDate,\nreg.backingReadUnits,\nreg.finalBilledReadType,\nreg.finalBilledReadUnits\nFrom\ncte_data_with_calcs d\ninner join unnest (d.registers) as reg\nLeft Join\n(\n    Select Distinct mpxn,\n                    DATE(finalReadDateTime, \"Europe\/London\") as finalReadDate,\n                    min(createdAt) as createdAt\n    From `product_andromeda_secure.consumption_loss_adjustments`\n    Group By        mpxn,\n                    DATE(finalReadDateTime, \"Europe\/London\")\n)\n ela on d.mpan = ela.mpxn and PARSE_DATE('%d\/%m\/%Y', disputedReadDate) = ela.finalReadDate\nWhere\n-- those where the tardis deemed estimate or an actual from within 5 days is within tolerance\n(totalProposedReadDiff <= 250\n-- extends tolerance to 350 for customer reads\nOR\n(totalProposedReadDiff < 350 and reg.latestIndustryReadType = 'C')\n-- apply tolerance to Total Adjusted industry read\nOR\n(reg.isTvr = 1 and totalTotalAdjustedDifference < 350 and reg.latestIndustryReadType = 'C')\n-- includes those within tolerance of any other latest billed read for the same day\nOR\n(totalPriorReadDiff <= 250 --and totalPriorReadAge = 0\n)\nOR\n(totalPriorReadDiff < 350 and reg.latestIndustryReadType = 'C')\nOR\ntotalProposedReadDiff is null\n)\n-- not got a dispute\nand TardisInitiatedAt is null\n-- not already got a loss adjustment\nand lossAdjustmentCreatedAt is null\n-- where the industry read msn match the orion billing\nand reg.latestIndustryReadMSN = reg.priorBilledReadMSN\n-- up to 11 months old\nand PARSE_DATE('%d\/%m\/%Y', disputedReadDate) > date_add(current_date, interval - 11 month)\n-- where there is not already a finalRead type read for the loss date\nand finalBilledReadUnits is null\n--final check there are no loss adjustments\nand ela.mpxn is null"},"data-engineering-prod:product_andromeda_secure.tardis_elec_loss_data_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_elec_loss_data_extract","location":"EU","num_bytes":29449965,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_loss_data_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_loss_data_extract","table_id":"tardis_elec_loss_data_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_elec_omr_stats":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_elec_omr_stats","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_omr_stats","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_omr_stats","table_id":"tardis_elec_omr_stats","time_partitioning":null,"view_query":"WITH cte_elec_gains AS\n(\nSelect reg.mpanCore as MPAN,\nPARSE_DATE(\"%Y%m%d\", substr(reg.effectiveFromSettlementDateRegi,1,8)) as SSD,\nreg.SmetsVersion\nFrom `data-engineering-prod.raw_andromeda_secure.flow_D0217001_POST_DTC10_7_split` d217,\nUnnest (record.FileSequenceNumber.registrationConfirmationDetails) reg\nwhere reg.profileClassId = '1'\nUNION ALL\nSelect reg.mpanCore as MPAN,\nPARSE_DATE(\"%Y%m%d\", substr(reg.effectiveFromSettlementDateRegi,1,8)) as SSD,\nreg.SmetsVersion\nFrom `data-engineering-prod.raw_andromeda_secure.flow_D0217002_split`  d217,\nUnnest (record.FileSequenceNumber.registrationConfirmationDetails) reg\nwhere reg.profileClassId = '1'\n)\n,\n\ncte_elec_reading_dedupe as\n(\n  select d86.record.MpanCores.mpanCore as mpxn,\n         d86.record.MpanCores.bscValidationStatus as bscValidationStatus,\n         mrt.meterIdSerialNumber as msn,\n         mrt.readingType as readingType,\n         rr.meterRegisterId as registerId,\n         PARSE_DATE(\"%Y%m%d\", SUBSTR(rr.readingDateTime, 1, 8)) as readingDate,\n         cast(rr.registerReading as float64) as readingKwh,\n         header.fileCreationTimestamp,\n         universal_metadata.createdAt,\n         rank() over (partition by record.MpanCores.mpanCore, rr.readingDateTime\n                      order by header.fileCreationTimestamp desc, universal_metadata.createdAt desc, kafkaData.insertTime desc) as reading_dedupe_rank\n  from `data-engineering-prod.raw_andromeda_secure.flow_D0086002_split__no_dedupe` d86,\n  unnest(record.MpanCores.meterReadingType) mrt,\n  unnest(mrt.registerReadings) rr\n  where mrt.readingType <> 'F' and mrt.readingType <> 'W'\n),\ncte_industry_reads as\n(\n  select mpxn,\n         msn,\n         readingType,\n         readingDate,\n         sum(readingKwh) as readingUnits\n  from cte_elec_reading_dedupe r\n  where reading_dedupe_rank = 1\n    and bscValidationStatus = 'V'\n  group by mpxn, msn, readingType, readingDate\n)\n,\n  cte_sfe_gain_read AS (\n  SELECT\n    servicePointNo as MPAN,\n    requestedSwitchTime as SSD,\n    CAST(processTime AS Date) AS sfeReadDate,\n    deviceNo as MSN,\n    initialReading \n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated`\n  WHERE\n    switchStatus = 7 )\n    ,\n \n cte_disputes AS (\nSelect\nMPAN_MPRN as MPAN,\nextract (date from DisputedReadDate) as DisputedDate,\nCurrentStatus\nFrom\n`source-data-mirror-prod.BC_OVO_Applications_internal.Dispute` \nWhere UtilityType = 'E'\nand IsMissingDispute = 'F'\n)\n\nSelect distinct g.mpan,g.ssd,r.msn,r.readingUnits, r.readingType, sr.InitialReading, g.SmetsVersion,\n    case when r.msn like '14P%' Then 'SECURE'\n    when r.msn like '15P%' Then 'SECURE'\n    when r.msn like '16P%' Then 'SECURE'\n    when r.msn like '17P%' Then 'SECURE'\n    when r.msn like '18P%' Then 'SECURE'\n    when r.msn like '18P%' Then 'SECURE'\n    Else 'NOT Secure' End as MeterType, \n    CASE\n      WHEN r.mpxn IS NULL THEN 'Missing'\n      WHEN r.readingType IN ('A','C', 'I', 'P') THEN 'Actual'\n      WHEN r.readingType = 'D' THen 'Estimated'\n      Else 'Other'\n    END as ReadStatus\n    ,\n    case\n    when d.mpan is not null then 1 else 0\n    End as HasDispute\nFrom\ncte_elec_gains g\nleft join cte_industry_reads r\non g.MPAN = r.MPxN\nand g.SSD = r.readingDate\nLEFT JOIN\n  cte_sfe_gain_read sr\nON\n  g.mpan = sr.mpan\n  AND sr.sfeReadDate BETWEEN DATE_ADD(g.ssd, INTERVAL -5 Day)\n  AND DATE_ADD(g.ssd, INTERVAL 5 Day)\nleft join\ncte_disputes d\non\ng.mpan = d.mpan\nand g.ssd = d.DisputedDate\n--where sr.mpan is not null"},"data-engineering-prod:product_andromeda_secure.tardis_elec_onboarding_tracking":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_elec_onboarding_tracking","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_onboarding_tracking","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_elec_onboarding_tracking","table_id":"tardis_elec_onboarding_tracking","time_partitioning":null,"view_query":"\nWith \n\n\ncte_first_elec_reading_dedupe as (\n     SELECT DISTINCT d86.record.MpanCores.mpanCore as mpxn,\n                     d86.record.MpanCores.bscValidationStatus as bscValidationStatus,\n                     mrt.meterIdSerialNumber as msn,\n                     mrt.readingType as readingType,\n                     rr.meterRegisterId as registerId,\n                     PARSE_DATE(\"%Y%m%d\", SUBSTR(rr.readingDateTime, 1, 8)) as readingDate,\n                     CAST(rr.registerReading as float64) as readingUnits,\n                     header.fileCreationTimestamp,\n                     universal_metadata.createdAt,\n                     RANK() OVER(PARTITION BY record.MpanCores.mpanCore, rr.readingDateTime  ORDER BY header.fileCreationTimestamp ASC, universal_metadata.createdAt desc) as reading_dedupe_rank \n    FROM `data-engineering-prod.raw_andromeda_secure.flow_D0086002_split__no_dedupe` d86\n    LEFT JOIN UNNEST(record.MpanCores.meterReadingType) mrt\n    LEFT JOIN UNNEST(mrt.registerReadings) rr\n    WHERE mrt.readingType <> 'W' \n),\n\nregistrations\nas\n(  \nSELECT Distinct meters.meterPointNumber as mpxn,\nevent.AcquisitionEventMessage.account.id as accountID,\n       DATE(TIMESTAMP_ADD(a.metadata.createdAt, INTERVAL 18 DAY)) as ssd,\n       meters.utility as supplyType\nFROM `data-engineering-prod.landing_orion_onboarding_secure.orion_onboarding_acquisition_v2` a,\n     UNNEST(event.AcquisitionEventMessage.meters) as meters\n     WHERE event.AcquisitionEventMessage.saleStatus = 'Validated' \n     and meters.Utility = 'Electricity'\n\n),\n\n\ncancelled_registrations\nas\n(  \nSELECT\nmessage.accountId as accountID,\nmessage.mpxn as mpxn,\nmessage.supplyStartDate as SSD,\nmessage.status as registrationStatus,\nRANK() OVER(PARTITION BY  message.accountId,\n                          message.mpxn,\n                          message.supplyStartDate\nORDER BY metaData.createdAt DESC) as latestUpdate \nFROM `data-engineering-prod.landing_orion_onboarding_secure.orion_onboarding_registration_update_v1`\nwhere length(message.mpxn) = 13\n\n),\n\ncte_DC_appointment\nAs\n(\nSELECT\nheader.fromMarketParticipantId as DC,\nrecord.ContractTermsData.mpanCore as MPAN,\nPARSE_DATE(\"%Y%m%d\", ed.effectiveFromDateDca) as dCStartDate,\nPARSE_DATE(\"%Y%m%d\", record.ContractTermsData.effectiveFromSettlementDateRegi) as SSD\nFROM `data-engineering-prod.raw_andromeda_secure.flow_D0011001_split` rec\ninner join unnest (record.ContractTermsData.dcEffectiveDate) ed\nwhere  record.ContractTermsData.effectiveFromSettlementDateRegi =  ed.effectiveFromDateDca\nand header.fromMarketParticipantId in ('SIEM', 'ACCU')\n),\n\nmeter_details_at_gain\nAs\n(\nWith\nspam_event_order as\n(\nSELECT\nmetadata.eventId,\nmetadata.createdAt,\nmp.MPXN,\nrow_number() over\n(partition by mpxn\n\nOrder by\nmetadata.createdAt desc\n)\nas eventOrder\nFROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2` mp\n)\n,\nspam_data AS\n\n(\nSELECT\nmp.mpxn,\nsp.supplyStartDate,\nih.msn,\nrh.startDate,\nrow_number() over\n(partition by\nmp.mpxn,\nsp.supplyStartDate\nOrder by\nmp.mpxn,\nsp.supplyStartDate,\nrh.startDate desc\n)\nas meterOrder\n,\nrh.meterRegisters\nFROM spam_event_order eo\nINNER JOIN `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2` mp on eo.eventID = mp.metaData.EventID\nLEFT JOIN UNNEST (mp.supplyPeriods) sp\nLEFT JOIN UNNEST (mp.installationHistory) as ih\nLEFT JOIN UNNEST (ih.meterRegisterHistory) as rh\nWhere rh.startDate <= sp.supplyStartDate\nAND eo.eventOrder = 1\n)\n\nSelect\nsp.mpxn,\nsp.supplyStartDate,\nsp.msn,\nreg.meterRegisterID,\nreg.timeOfUseLabel,\nreg.clockingTimeID,\nreg.tier\nfrom\nspam_data sp\nLEFT JOIN UNNEST (sp.MeterRegisters) reg\nwhere meterOrder = 1\n)\n\n,\n\n\nOMR_data\nAS\n(\nSelect\nmpxn,\nreadDate,\nreg.timeOfUseLabel,\nreg.read,\nrow_number() over (partition by mpxn Order by metadata.createdAt desc) as row_num\nFrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_omr_api_v4` omr\nInner Join unnest(omr.registers) reg\n)\n\n,\n\ncte_email\nas\n(\nWith\ncte_ordered_events AS\n(\nSELECT\n metadata.createdAt ,\ncommId,\nstatus,\nchannel,\nSUBSTR(customer.customerId, (length(customer.customerId)) - 7) as AccountNo,\ncase\nWhen status = 'Delivered' and description is null Then 'delivered'\nWhen REGEXP_CONTAINS(description, r\"delivered\") Then 'delivered'\nWhen REGEXP_CONTAINS(description, r\"opened\") Then 'opened'\nWhen REGEXP_CONTAINS(description, r\"clicked\") Then 'clicked'\nEnd\nAs lastAction,\nRANK() OVER(PARTITION BY commId\t\n                               ORDER BY metadata.createdAt desc) as latestStatus\nFROM\nregistrations r\nInner Join `data-engineering-prod.landing_comms_secure.comms_feedback_v5` f on r.AccountID = SUBSTR(customer.customerId, (length(customer.customerId)) - 7) and f.metadata.createdAt < timestamp(date_add(r.ssd, interval 5 day))\nwhere templateManifest.id = '1e10240e-14c2-4bbe-95a9-91c5fb50f5eb'\n \n)\n\nSelect *\nFrom cte_ordered_events\nwhere latestStatus = 1\n)\n\n\n,\nOMR_rac\nAS\n(\nSelect\nkafkaData.InsertTime,\nevent.ElectricityManualReadingEvent.msn,\nevent.ElectricityManualReadingEvent.readingDateTime as UTCReadingDateTime, \nDATE(event.ElectricityManualReadingEvent.readingDateTime, \"Europe\/London\") as ReadingDate, \nevent.ElectricityManualReadingEvent.readingType,\ntier,\nreadingValue,\nrow_number() over (partition by event.ElectricityManualReadingEvent.msn, event.ElectricityManualReadingEvent.readingDateTime, tier Order by event.ElectricityManualReadingEvent.msn, event.ElectricityManualReadingEvent.readingDateTime, tier, kafkaData.InsertTime desc) as row_num\nFrom `data-engineering-prod.landing_andromeda_secure.rac_manual_read_submitted_v2` ms\nInner Join unnest(ms.event.ElectricityManualReadingEvent.tiers) t\n)\n\nSELECT\n       r.accountId,\n       r.mpxn, \n       r.ssd as registrationSSD,\n       s.SupplyStartDate as spamSSD,\n       dc.dc,\n       s.MSN as spamMSN,\n       s.meterRegisterID,\n       s.timeOfUseLabel,\n       e.status as omrCommsStatus,\n       e.channel as omrEmailType,\n       e.lastAction as omrEmailTypeLastAction,\n       omr.readDate as submittedOmrReadDate,\n       omr.read as submittedOmrRead,\n       ir.readingUnits as industryRead,\n       ir.readingType as industryReadType,\n       --ir.readingDate as industryReadingDate,\n       rr.readingType as processedReadType,\n       rr.readingValue as processedReadValue,\n       con.fromDate as consumptionFromDate,\n       con.fromMeterReading as consumptionFromRead,\n       con.fromReadingType as consumptionFromReadType,\n       con.toDate as consumptionToDate,\n       con.toMeterReading as consumptionToRead,\n       con.toReadingType as consumptionToReadType\n\n--        ARRAY (SELECT AS STRUCT \n--       *\n--       From\n--       registrations r\n--       inner join cte_meter_registers \n--       left join OMR_data omr\n--       left Join cte_first_elec_reading_dedupe\n--       where r.mpxn = omr.mpxn) as reads  \n\nFROM registrations r\nLEFT JOIN meter_details_at_gain s on r.mpxn = s.mpxn and r.ssd <= s.supplyStartDate\nLEFT JOIN cte_DC_appointment dc on r.mpxn = dc.mpan and r.ssd = dc.ssd\nLEFT JOIN OMR_data omr on r.mpxn = omr.mpxn and s.timeOfUseLabel = omr.timeOfUseLabel and omr.row_num = 1\nLeft JOIN cte_first_elec_reading_dedupe ir on s.mpxn = ir.mpxn and s.supplyStartDate = ir.readingDate and ir.reading_dedupe_rank = 1 and ir.registerID = s.meterRegisterID and ir.msn = s.msn\nLeft Join OMR_rac rr on s.msn = rr.msn and s.supplyStartDate = rr.readingDate  and (s.tier = rr.tier or s.tier is null) and rr.row_num = 1\nLEFT JOIN `data-engineering-prod.product_andromeda_secure.tardis_rac_elec_reads` con on s.mpxn = con.mpan and s.SupplyStartDate = con.fromDate and s.clockingTimeID = con.clockingTimeId\nleft join cte_email e on r.accountId = e.AccountNo\nLeft Join cancelled_registrations c on r.mpxn = c.mpxn and c.latestUpdate = 1\norder by r.ssd"},"data-engineering-prod:product_andromeda_secure.tardis_gas_agent_initiated_disputes":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_agent_initiated_disputes","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_agent_initiated_disputes","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_agent_initiated_disputes","table_id":"tardis_gas_agent_initiated_disputes","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_gas_final_reads_to_load":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_final_reads_to_load","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_final_reads_to_load","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_final_reads_to_load","table_id":"tardis_gas_final_reads_to_load","time_partitioning":null,"view_query":" With cte_losses_with_calcs AS\n (\n Select\n *,\n(SELECT SUM(proposedReadDiff)\nFROM UNNEST(l.registers) x) AS proposedReadDiffSum,\n(SELECT SUM(priorReadAge)\nFROM UNNEST(l.registers) x) AS priorReadAgeSum,\n(SELECT SUM(lastestIndustryToPriorReadDiff)\nFROM UNNEST(l.registers) x) AS priorReadDiffSum,\nFrom `data-engineering-prod.product_andromeda_secure.tardis_gas_loss_data_extract` l\n)\nSelect\nDistinct\nmprn,\nreg.latestIndustryReadMSN as msn,\nreg.latestIndustryReadValue as reading,\nCase When reg.latestIndustryReadType = 'URN' Then 'A'\nElse reg.latestIndustryReadType\nEnd as readingType,\nPARSE_DATE('%d\/%m\/%Y', disputedReadDate) as readingDate,\nFrom cte_losses_with_calcs d\ninner join unnest(d.registers) reg\nLeft Join\n(\n    Select Distinct mpxn,\n                    DATE(finalReadDateTime, \"Europe\/London\") as finalReadDate,\n                    min(createdAt) as createdAt\n    From `product_andromeda_secure.consumption_loss_adjustments`\n    Group By        mpxn,\n                    DATE(finalReadDateTime, \"Europe\/London\")\n)\n gla on d.mprn = gla.mpxn and PARSE_DATE('%d\/%m\/%Y', disputedReadDate) = gla.finalReadDate\nwhere\narray_length(registers) = 1\nand\n(\nreg.priorReadMSN = reg.latestIndustryReadMSN\nor\nreg.priorReadMSN is null\n)\nand\n(\nproposedReadDiffSum <= 108\nOr\npriorReadDiffSum <= 108\nor\nproposedReadDiffSum is null\n)\nand TardisInitiatedAt is null\nand drsDateRaised is null\nand lossAdjustmentCreatedAt is null\nand reg.finalBilledReadUnits is null\nand gla.mpxn is null\n"},"data-engineering-prod:product_andromeda_secure.tardis_gas_gain_read_metric":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_gain_read_metric","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_gain_read_metric","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_gain_read_metric","table_id":"tardis_gas_gain_read_metric","time_partitioning":null,"view_query":"WITH\n  cte_gas_gains AS (\n  SELECT\n    DISTINCT\n    mtd.meterPointReference AS mpxn,\n    ends_with(mtd.meterPointReference,'00') as InCG,\n    mtd.meterSerialNumber AS msn,\n    mtd.meterSerialNumber,\n    CASE\n      WHEN sd.dccServiceFlag = 'A' THEN 'SMETS2'\n      WHEN mtd.meterSerialNumber LIKE 'G4P%' THEN 'SFE SMETS1'\n      WHEN mtd.meterSerialNumber LIKE 'G1$P%' THEN 'SFE SMETS1'\n      ELSE 'Other'\n    END AS meterTypeDerived,\n    mtd.meterPointAq,\n    mtd.previousSupplierShortCode,\n    PARSE_DATE(\"%Y%m%d\",\n      trf.record.TransferOfOwnership.confirmationEffectiveDate) AS ssd,\n    trf.record.TransferOfOwnership.ldzIdentifier,\n    trf.record.TransferOfOwnership.recordedDate,\n    trf.record.TransferOfOwnership.recordedTime,\n    trf.record.TransferOfOwnership.lastRecordedRead,\n    trf.record.TransferOfOwnership.lastRecordedReadDate,\n    sd.dccServiceFlag\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_TRF_POST_NEXUS_split` trf\n  INNER JOIN\n    UNNEST(trf.record.TransferOfOwnership.address) addr\n  INNER JOIN\n    UNNEST(addr.meterPointDetails) mtd\n  LEFT JOIN\n    UNNEST(mtd.smartData) sd\n  WHERE\n    record.TransferOfOwnership.recordedDate IS NOT NULL\n    AND mtd.previousSupplierShortCode <> 'OVO' -- exclude loss\n    -- AND PARSE_DATE(\"%Y%m%d\", trf.record.TransferOfOwnership.confirmationEffectiveDate) = '2018-12-04'\n    ),\n  cte_gas_reading_union AS (\n  SELECT\n    'MBR' AS flow,\n    -- estimates\n    record.Billreads.meterPointReference AS mpxn,\n    record.Billreads.meterSerialNumber AS msn,\n    record.Billreads.readType AS readingType,\n    PARSE_DATE(\"%Y%m%d\",\n      record.Billreads.actualReadDate ) AS readingDate,\n    CAST(record.Billreads.meterReading AS int64) AS readingVolume,\n    header.creationDate,\n    header.creationTime,\n    universal_metadata.createdAt\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_MBR_POST_NEXUS_split__no_dedupe` mbr\n  WHERE\n    record.Billreads.meterPointReference IS NOT NULL\n  UNION ALL\n  SELECT\n    'URN' AS flow,\n    -- actuals\n    record.OpeningUnbundledReadNotice.meterPointReference AS mpxn,\n    record.OpeningUnbundledReadNotice.meterSerialNumber AS msn,\n    'URN' AS readingType,\n    PARSE_DATE(\"%Y%m%d\",\n      record.OpeningUnbundledReadNotice.actualReadDate) AS readingDate,\n    CAST(record.OpeningUnbundledReadNotice.meterReading AS int64) AS readingVolume,\n    header.creationDate,\n    header.creationTime,\n    universal_metadata.createdAt\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_URN_POST_NEXUS_split__no_dedupe` urn\n  WHERE\n    record.OpeningUnbundledReadNotice.meterPointReference IS NOT NULL ),\n  cte_gas_reading_dedupe AS -- latest read\n  (\n  SELECT\n    gru.mpxn,\n    gru.msn,\n    gru.readingType,\n    gru.readingDate,\n    gru.readingVolume,\n    gru.creationDate,\n    gru.creationTime,\n    gru.createdAt,\n    ROW_NUMBER() OVER (PARTITION BY gru.mpxn, gru.readingDate ORDER BY gru.flow DESC, gru.creationDate DESC, gru.creationTime DESC, gru.createdAt DESC) AS reading_dedupe_rownum\n  FROM\n    cte_gas_reading_union gru ),\n  cte_umr_opening_read AS (\n  SELECT\n    umr.record.UnbundledMeterRead.meterPointReference AS mpxn,\n    PARSE_DATE(\"%Y%m%d\",\n      record.UnbundledMeterRead.actualReadDate) AS readDate,\n    record.UnbundledMeterRead.meterReadingSource AS readSource,\n    record.UnbundledMeterRead.meterReadingReason AS readReason,\n    record.UnbundledMeterRead.meterSerialNumber AS msn,\n    record.UnbundledMeterRead.meterReading AS reading,\n    header.creationDate,\n    header.creationTime,\n    ROW_NUMBER() OVER (PARTITION BY umr.record.UnbundledMeterRead.meterPointReference, record.UnbundledMeterRead.actualReadDate ORDER BY header.creationDate DESC, header.creationTime DESC) AS omr_reading_dedupe_rownum\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_UMR_POST_NEXUS_split` umr\n  WHERE\n    record.UnbundledMeterRead.meterReadingReason = 'O' ),\n  cte_sfe_gain_read AS (\n  SELECT\n    servicePointNo,\n    requestedSwitchTime,\n    CAST(processTime AS Date) AS sfeReadDate,\n    deviceNo,\n    initialVolume\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated`\n  WHERE\n    switchStatus = 7 )\n\n  SELECT\n  g.metertypederived,\n  g.ssd,\n  g.InCG,\n  SUM(\n    CASE\n      WHEN g.mpxn IS NULL THEN 0\n      ELSE 1\n    END ) AS totalGains,\n  SUM(\n    CASE\n      WHEN omr.mpxn IS NULL THEN 0\n      ELSE 1\n    END ) AS omrSubmitted,\n  SUM(\n    CASE\n      WHEN r.mpxn IS NULL THEN 0\n      ELSE 1\n    END ) AS industryReceived,\n  SUM(\n    CASE\n      WHEN r.readingType IS NULL THEN 0\n      WHEN r.readingType = 'URN' THEN 1\n      WHEN sr.InitialVolume < (readingvolume - 108) OR sr.InitialVolume > (readingvolume + 108) THEN 0\n      WHEN sr.InitialVolume > (readingvolume - 108)\n    AND sr.InitialVolume < (readingvolume + 108) THEN 1\n    END ) AS inToleranceOfSmartOrActual\nFROM\n  cte_gas_gains g\nLEFT JOIN\n  cte_gas_reading_dedupe r\nON\n  g.mpxn = r.mpxn\n  AND ((readingtype = 'URN'\n      AND r.readingdate BETWEEN DATE_ADD(ssd, INTERVAL -5 Day)\n      AND DATE_ADD(ssd, INTERVAL 5 Day)\n      OR r.readingdate = ssd))\nLEFT JOIN\n  cte_sfe_gain_read sr\nON\n  g.mpxn = sr.servicePointNo\n  AND sr.sfeReadDate BETWEEN DATE_ADD(ssd, INTERVAL -5 Day)\n  AND DATE_ADD(ssd, INTERVAL 5 Day)\nLEFT JOIN\n  cte_umr_opening_read omr\nON\n  g.mpxn = omr.mpxn\n  AND omr.readdate BETWEEN DATE_ADD(ssd, INTERVAL -5 Day)\n  AND DATE_ADD(ssd, INTERVAL 5 Day)\nWHERE\n  (reading_dedupe_rownum IS NULL\n    OR reading_dedupe_rownum = 1)\n  AND (omr_reading_dedupe_rownum IS NULL\n    OR omr_reading_dedupe_rownum = 1)\nGROUP BY\n  g.metertypederived,\n  g.ssd,\n  g.InCG\nORDER BY\n  g.ssd DESC,\n  g.metertypederived"},"data-engineering-prod:product_andromeda_secure.tardis_gas_loss_data_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_loss_data_extract","location":"EU","num_bytes":24570236,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_loss_data_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_loss_data_extract","table_id":"tardis_gas_loss_data_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_gas_omr_dashboard":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_omr_dashboard","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_omr_dashboard","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_omr_dashboard","table_id":"tardis_gas_omr_dashboard","time_partitioning":null,"view_query":"WITH\n  cte_gas_gains AS (\n  SELECT\n    DISTINCT mtd.meterPointReference AS mpxn,\n    mtd.meterSerialNumber AS msn,\n    mtd.numberofdialsordigits,\n    mtd.correctionfactor,\n    mtd.meterSerialNumber,\n    CASE\n      WHEN sd.dccServiceFlag = 'A' THEN 'SMETS2'\n      WHEN mtd.meterSerialNumber LIKE 'G4P%' THEN 'SFE SMETS1'\n      WHEN mtd.meterSerialNumber LIKE 'G1$P%' THEN 'SFE SMETS1'\n      ELSE 'Other'\n    END AS meterTypeDerived,\n    cast(mtd.meterPointAq as float64) as AQ,\n    mtd.previousSupplierShortCode,\n    PARSE_DATE(\"%Y%m%d\",trf.record.TransferOfOwnership.confirmationEffectiveDate) AS ssd,\n    trf.record.TransferOfOwnership.ldzIdentifier,\n    trf.record.TransferOfOwnership.recordedDate,\n    trf.record.TransferOfOwnership.recordedTime,\n    safe_cast(trf.record.TransferOfOwnership.lastRecordedRead as int64) as lastRecordedRead,\n    PARSE_DATE(\"%Y%m%d\",nullif(trf.record.TransferOfOwnership.lastRecordedReadDate,'')) as lastReadDate,\n    sd.dccServiceFlag\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_TRF_POST_NEXUS_split` trf\n  INNER JOIN\n    UNNEST(trf.record.TransferOfOwnership.address) addr\n  INNER JOIN\n    UNNEST(addr.meterPointDetails) mtd\n  LEFT JOIN\n    UNNEST(mtd.smartData) sd\n  WHERE\n    record.TransferOfOwnership.recordedDate IS NOT NULL\n    AND mtd.previousSupplierShortCode <> 'OVO' -- exclude loss\n    ),\n    cte_Prep_data AS\n(\nSELECT\n  *, \n  (((((((AQ \/ 365) * (DATE_DIFF(ssd, lastReadDate, DAY)) * 3.6) \/ 39.5) \/ 1) \/ 1.02264))) as calc_dif,\n  CASE\n  --#below are the validation rules as confirmed in settlement BRDs (with some new bands added in change requests) These will be used to validate read advances to see if they fall in line \n    WHEN AQ = 1                       THEN 20000.00\n    WHEN AQ BETWEEN 2\t  AND 100     THEN 200.00\n    WHEN AQ BETWEEN 101   AND 200     THEN 100.00\n    WHEN AQ BETWEEN 201   AND 500     THEN 40.00 \n    WHEN AQ BETWEEN 501   AND 1000    THEN 20.00 \n    WHEN AQ between 1001  AND 5000    THEN 4.00 \n    WHEN AQ BETWEEN 5001  AND 10000   THEN 2.00 \n    WHEN AQ BETWEEN 10001 AND 20000   THEN 1.50 \n    WHEN AQ BETWEEN 20001 AND 73200   THEN 3.00 \n    WHEN AQ BETWEEN 73201 and 732000  THEN 2.50 \n  ELSE NULL \n  END AS Tol_Flag_Upper_Limit, -- Each AQ band has a different multiplication value depending on the AQ XOSERVE hold.\n  CASE\n    WHEN AQ = 1                       THEN 70000.00\n    WHEN AQ BETWEEN 2     AND 100     THEN 450.00\n    WHEN AQ BETWEEN 101   AND 200     THEN 250.00\n    WHEN AQ BETWEEN 201   AND 500     THEN 550.00\n    WHEN AQ BETWEEN 501   AND 1000    THEN 250.00\n    WHEN AQ between 1001  AND 5000    THEN 70.00\n    WHEN AQ BETWEEN 5001  AND 10000   THEN 20.00\n    WHEN AQ BETWEEN 10001 AND 20000   THEN 10.00\n    WHEN AQ BETWEEN 20001 AND 73200   THEN 10.00\n    WHEN AQ BETWEEN 73201 and 732000  THEN 10.00\n  ELSE NULL\n  END AS MBT_Tol_Upper_Limit  \nfrom cte_gas_gains\n),\n\ncte_calc_consumption as\n( -- Calculates the threshold reads to either break into Lower Tolerance, or Market Breaker Tolerances\nSELECT\n *,\n lastRecordedRead + (Tol_Flag_Upper_Limit * calc_dif)      AS Tol_Flag_Read,\n lastRecordedRead + (MBT_Tol_Upper_Limit  * calc_dif)      AS MBT_Flag_Read\nfrom cte_Prep_data\n-- If the read is between Tol_Flag_Read and MBT_Flag_Read, then a Tolerance Override Flag is needed for read submission\n-- If above MBT_Flag_Read, then the read wil not be validated by XOSERVE without other site action (AQ correction etc)\n-- If read below Tol_Flag_Read, then can be submitted without override flag for validation\n),\n  cte_gas_reading_union AS (\n  SELECT\n    'MBR' AS flow,\n    -- estimates\n    record.Billreads.meterPointReference AS mpxn,\n    record.Billreads.meterSerialNumber AS msn,\n    record.Billreads.readType AS readingType,\n    PARSE_DATE(\"%Y%m%d\",\n      record.Billreads.actualReadDate ) AS readingDate,\n    CAST(record.Billreads.meterReading AS int64) AS readingVolume,\n    header.creationDate,\n    header.creationTime,\n    universal_metadata.createdAt\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_MBR_POST_NEXUS_split__no_dedupe` mbr\n  WHERE\n    record.Billreads.meterPointReference IS NOT NULL\n  UNION ALL\n  SELECT\n    'URN' AS flow,\n    -- actuals\n    record.OpeningUnbundledReadNotice.meterPointReference AS mpxn,\n    record.OpeningUnbundledReadNotice.meterSerialNumber AS msn,\n    'URN' AS readingType,\n    PARSE_DATE(\"%Y%m%d\",\n      record.OpeningUnbundledReadNotice.actualReadDate) AS readingDate,\n    CAST(record.OpeningUnbundledReadNotice.meterReading AS int64) AS readingVolume,\n    header.creationDate,\n    header.creationTime,\n    universal_metadata.createdAt\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_URN_POST_NEXUS_split__no_dedupe` urn\n  WHERE\n    record.OpeningUnbundledReadNotice.meterPointReference IS NOT NULL ),\n  cte_gas_reading_dedupe AS -- latest read\n  (\n  SELECT\n    gru.mpxn,\n    gru.msn,\n    gru.readingType,\n    gru.readingDate,\n    gru.readingVolume,\n    gru.creationDate,\n    gru.creationTime,\n    gru.createdAt,\n    ROW_NUMBER() OVER (PARTITION BY gru.mpxn, gru.readingDate ORDER BY gru.flow DESC, gru.creationDate DESC, gru.creationTime DESC, gru.createdAt DESC) AS reading_dedupe_rownum\n  FROM\n    cte_gas_reading_union gru ),\n  cte_umr_opening_read AS (\n  SELECT\n    umr.record.UnbundledMeterRead.meterPointReference AS mpxn,\n    PARSE_DATE(\"%Y%m%d\",\n      record.UnbundledMeterRead.actualReadDate) AS readDate,\n    record.UnbundledMeterRead.meterReadingSource AS readSource,\n    record.UnbundledMeterRead.meterReadingReason AS readReason,\n    record.UnbundledMeterRead.meterSerialNumber AS msn,\n    record.UnbundledMeterRead.meterReading AS reading,\n    header.creationDate,\n    header.creationTime,\n    ROW_NUMBER() OVER (PARTITION BY umr.record.UnbundledMeterRead.meterPointReference, record.UnbundledMeterRead.actualReadDate ORDER BY header.creationDate DESC, header.creationTime DESC) AS omr_reading_dedupe_rownum\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_UMR_POST_NEXUS_split` umr\n  WHERE\n    record.UnbundledMeterRead.meterReadingReason = 'O' ),\n  cte_sfe_gain_read AS (\n  SELECT\n    servicePointNo,\n    requestedSwitchTime,\n    CAST(processTime AS Date) AS sfeReadDate,\n    deviceNo,\n    initialVolume\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated`\n  WHERE\n    switchStatus = 7 )\n\nSELECT distinct\n    g.metertypederived,\n    g.ssd,\n    g.mpxn,\n    g.AQ,\n    cc.Tol_Flag_Read,\n    cc.MBT_Flag_Read,\n    sr.initialvolume as smartRead,\n    g.lastRecordedRead as previousRead,\n    r.readingType as industryType,\n    r.readingVolume as industryVolume,\n    CASE\n      WHEN omr.mpxn IS NULL THEN 0\n      ELSE 1\n    END AS omrSubmitted,\n    CASE\n      WHEN r.mpxn IS NULL THEN 'Missing'\n      WHEN r.readingType = 'URN' THEN 'Actual'\n      WHEN sr.InitialVolume < (readingvolume - 108) OR sr.InitialVolume > (readingvolume + 108) THEN 'Outside Tolerance'\n      WHEN sr.InitialVolume > (readingvolume - 108) AND sr.InitialVolume < (readingvolume + 108) THEN 'Inside Tolerance'\n      WHen sr.InitialVolume is Null and r.ReadingType <> 'URN' Then 'Unknown'\n      Else 'Other'\n    END\n    AS ReadStatus,\n    Case when sr.initialvolume > tol_flag_read then 'Smart_Above_Tol' Else 'Smart_Below_Tol' End as XoSTol\n    \nFROM\n  cte_gas_gains g\nLEFT JOIN\n  cte_gas_reading_dedupe r\nON\n  g.mpxn = r.mpxn\n  AND ((readingtype = 'URN'\n      AND r.readingdate BETWEEN DATE_ADD(ssd, INTERVAL -5 Day)\n      AND DATE_ADD(ssd, INTERVAL 5 Day)\n      OR r.readingdate = ssd))\nLEFT JOIN\n  cte_sfe_gain_read sr\nON\n  g.mpxn = sr.servicePointNo\n  AND sr.sfeReadDate BETWEEN DATE_ADD(ssd, INTERVAL -5 Day)\n  AND DATE_ADD(ssd, INTERVAL 5 Day)\nLEFT JOIN\n  cte_umr_opening_read omr\nON\n  g.mpxn = omr.mpxn\n  AND omr.readdate BETWEEN DATE_ADD(ssd, INTERVAL -5 Day)\n  AND DATE_ADD(ssd, INTERVAL 5 Day)\nleft join\n    cte_calc_consumption cc\non g.mpxn = cc.mpxn and g.ssd = cc.ssd\nWHERE\n  (reading_dedupe_rownum IS NULL\n    OR reading_dedupe_rownum = 1)\n  AND (omr_reading_dedupe_rownum IS NULL\n    OR omr_reading_dedupe_rownum = 1)"},"data-engineering-prod:product_andromeda_secure.tardis_gas_onboarding_tracking":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_onboarding_tracking","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_onboarding_tracking","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_onboarding_tracking","table_id":"tardis_gas_onboarding_tracking","time_partitioning":null,"view_query":"With\ncte_all_industry_readings as\n        (\nSELECT 'MBR' as flow, -- estimates\n           record.Billreads.meterPointReference as mpxn,\n           record.Billreads.meterSerialNumber as msn,\n           record.Billreads.readType as readingType,\n           PARSE_DATE(\"%Y%m%d\", record.Billreads.actualReadDate ) as readingDate,\n           CAST(record.Billreads.meterReading as int64) as readingVolume,\n           header.creationDate,\n           header.creationTime,\n           universal_metadata.createdAt\n    FROM `data-engineering-prod.raw_andromeda_secure.flow_MBR_POST_NEXUS_split__no_dedupe` mbr\n    WHERE record.Billreads.meterPointReference is not null\n    \n    UNION ALL\n    \n    SELECT 'URN' as flow, -- actuals\n           record.OpeningUnbundledReadNotice.meterPointReference as mpxn,\n           record.OpeningUnbundledReadNotice.meterSerialNumber as msn,\n           'URN' as readingType,\n           PARSE_DATE(\"%Y%m%d\", record.OpeningUnbundledReadNotice.actualReadDate) as readingDate,\n           CAST(record.OpeningUnbundledReadNotice.meterReading as int64) as readingVolume,\n           header.creationDate,\n           header.creationTime,\n           universal_metadata.createdAt\n    FROM `data-engineering-prod.raw_andromeda_secure.flow_URN_POST_NEXUS_split__no_dedupe` urn\n    WHERE record.OpeningUnbundledReadNotice.meterPointReference is not null\n),\n\n\ncte_last_industry_read as (\nSelect\n*,\nRANK() OVER(PARTITION BY mpxn, readingDate  ORDER BY creationDate desc,\n           creationTime desc, createdAt desc) as last_reading_dedupe_rank \nFrom cte_all_industry_readings\n)\n,\n\n\nregistrations\nas\n(\nSELECT Distinct LPAD(meters.meterPointNumber, 10, '0') as mpxn,\nevent.AcquisitionEventMessage.account.id as accountID,\n       DATE(TIMESTAMP_ADD(a.metadata.createdAt, INTERVAL 18 DAY)) as ssd,\n       meters.utility as supplyType\nFROM `data-engineering-prod.landing_orion_onboarding_secure.orion_onboarding_acquisition_v1` a,\n     UNNEST(event.AcquisitionEventMessage.meters) as meters\n     WHERE event.AcquisitionEventMessage.saleStatus = 'Validated' \n     and meters.Utility = 'Gas'\n\n),\n\nspam_data AS\n\n(\nSELECT \nmp.MPXN,\nsp.supplyStartDate as SSD,\nih.MSN,\nrow_number() over (partition by mpxn Order by mpxn, metadata.createdAt desc) as row_num\nFROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2` mp\nLEFT JOIN UNNEST (mp.supplyPeriods) sp\nLEFT JOIN UNNEST (mp.installationHistory) as ih\n),\n\nOMR_data\nAS\n(\nSelect\nmpxn,\nreadDate,\nread,\nrow_number() over (partition by mpxn Order by metadata.createdAt desc) as row_num\nFrom `data-engineering-prod.landing_andromeda_secure.tardis_gas_omr_api_v4` omr\n)\n\nSELECT\n       r.accountId,\n       r.mpxn, \n       r.ssd as regostrationSSD,\n       s.ssd as spamSSD,\n       s.MSN,\n       omr.readDate,\n       omr.read,\n       ir.readingVolume,\n       ir.flow,\n       con.fromReading,\n       con.fromReadingType\nFROM registrations r\nLeft Join OMR_data omr on r.mpxn = omr.mpxn and omr.row_num = 1\n\nLEFT JOIN spam_data s on r.mpxn = s.mpxn and s.row_num = 1 and r.ssd <= s.ssd and s.row_num = 1\n\nLeft JOIN cte_last_industry_read ir on r.mpxn = ir.mpxn and ((ir.flow = 'URN' and ir.readingDate between date_add(r.ssd, interval -5 day) and date_add(r.ssd, interval 5 day)) OR (ir.flow = 'MBR' and ir.readingDate = r.ssd)) and ir.last_reading_dedupe_rank = 1\n\nLEFT JOIN `data-engineering-prod.product_andromeda_secure.tardis_rac_gas_reads` con on s.mpxn = con.mprn and s.SSD = con.fromDate\n\nOrder By 3"},"data-engineering-prod:product_andromeda_secure.tardis_gas_rejection_reasons":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_gas_rejection_reasons","location":"EU","num_bytes":23754,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_rejection_reasons","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_gas_rejection_reasons","table_id":"tardis_gas_rejection_reasons","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_inc366_accounts":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_inc366_accounts","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_inc366_accounts","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_inc366_accounts","table_id":"tardis_inc366_accounts","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_omr_submitted":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_omr_submitted","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_omr_submitted","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_omr_submitted","table_id":"tardis_omr_submitted","time_partitioning":null,"view_query":"SELECT * FROM `data-engineering-prod.landing_andromeda_secure.tardis_omr_submitted_v1`\nwhere (metadata.createdAt >= '2019-04-16' and supplyType = 'E')\nor (metadata.createdAt >= '2019-05-30' and supplyType = 'G')"},"data-engineering-prod:product_andromeda_secure.tardis_opening_urs_rejections":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_opening_urs_rejections","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_opening_urs_rejections","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_opening_urs_rejections","table_id":"tardis_opening_urs_rejections","time_partitioning":null,"view_query":"WITH\n  cte_gas_gains AS (\n  SELECT\n    DISTINCT mtd.meterPointReference AS mpxn,\n    mtd.meterSerialNumber AS msn,\n    mtd.numberofdialsordigits,\n    mtd.correctionfactor,\n    mtd.meterSerialNumber,\n    CASE\n      WHEN sd.dccServiceFlag = 'A' THEN 'SMETS2'\n      WHEN mtd.meterSerialNumber LIKE 'G4P%' THEN 'SFE SMETS1'\n      WHEN mtd.meterSerialNumber LIKE 'G1$P%' THEN 'SFE SMETS1'\n      ELSE 'Other'\n    END AS meterTypeDerived,\n    CAST(mtd.meterPointAq AS float64) AS AQ,\n    mtd.previousSupplierShortCode,\n    PARSE_DATE(\"%Y%m%d\",\n      trf.record.TransferOfOwnership.confirmationEffectiveDate) AS ssd,\n    trf.record.TransferOfOwnership.ldzIdentifier,\n    trf.record.TransferOfOwnership.recordedDate,\n    trf.record.TransferOfOwnership.recordedTime,\n    SAFE_CAST(trf.record.TransferOfOwnership.lastRecordedRead AS int64) AS lastRecordedRead,\n    PARSE_DATE(\"%Y%m%d\",\n      nullif(trf.record.TransferOfOwnership.lastRecordedReadDate,\n        '')) AS lastReadDate,\n    sd.dccServiceFlag\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_TRF_POST_NEXUS_split` trf\n  INNER JOIN\n    UNNEST(trf.record.TransferOfOwnership.address) addr\n  INNER JOIN\n    UNNEST(addr.meterPointDetails) mtd\n  LEFT JOIN\n    UNNEST(mtd.smartData) sd\n  WHERE\n    record.TransferOfOwnership.recordedDate IS NOT NULL\n    AND mtd.previousSupplierShortCode <> 'OVO' -- exclude loss\n    ),\n  \n  \n  cte_opening_failures AS (\n  SELECT\n    header.creationDate,\n    header.creationTime,\n    urs.record.UnbundledReadRejection.meterPointReference AS MPxN,\n    PARSE_DATE(\"%Y%m%d\",\n      urs.record.UnbundledReadRejection.actualReadDate) AS readDate,\n    rej.rejectionReason\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_URS_split` urs\n  LEFT JOIN\n    UNNEST(record.UnbundledReadRejection.rejectionDetail) rej\n  WHERE\n    record.UnbundledReadRejection.meterReadingReason = 'O')\n    \n    \n  , cte_opening_acceptance AS\n  \n  (\n   SELECT\n    header.creationDate,\n    header.creationTime,\n    record.UnbundledAcceptedReadNotification.meterPointReference AS MPxN,\n    PARSE_DATE(\"%Y%m%d\",\n      record.UnbundledAcceptedReadNotification.actualReadDate) AS readDate\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.flow_URS_split` urs\n  WHERE\n    record.UnbundledAcceptedReadNotification.meterReadingReason = 'O')\n  \n  \n    \nSELECT distinct\n  g.metertypederived,\n  g.mpxn,\n  g.ssd,\n  f.rejectionReason,\n  f.creationDate,\n  case\n  When a.mpxn is Not Null Then 'Accepted'\n  when r.RejectionDescription is null then f.rejectionReason\n  Else r.RejectionDescription\n  End as URSResult\nFROM\n  cte_gas_gains g\nLeft JOIN\n  cte_opening_failures f\nON\n  g.mpxn = f.mpxn\n  AND f.readDate BETWEEN DATE_ADD(g.ssd, INTERVAL -5 Day) AND date_add(g.ssd, INTERVAL +5 Day)\n  left join `data-engineering-prod.product_andromeda_secure.tardis_gas_rejection_reasons` r\n  on f.rejectionReason = r.rejectionCode\n\nleft join\ncte_opening_acceptance a\non\ng.mpxn = a.mpxn\nAND\na.readDate BETWEEN DATE_ADD(g.ssd, INTERVAL -5 Day) AND date_add(g.ssd, INTERVAL +5 Day)"},"data-engineering-prod:product_andromeda_secure.tardis_previous_loss_adjustment_deleted":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_previous_loss_adjustment_deleted","location":"EU","num_bytes":23368,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_previous_loss_adjustment_deleted","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_previous_loss_adjustment_deleted","table_id":"tardis_previous_loss_adjustment_deleted","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.tardis_rac_elec_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_rac_elec_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_rac_elec_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_rac_elec_reads","table_id":"tardis_rac_elec_reads","time_partitioning":null,"view_query":"With cte_ordered_reads\nAS\n(\nWith cte_union_topics as\n(\nSELECT\n    metaData.createdAt\n    ,mpan \n    ,msn\n    ,fromDate\n    ,f.reading as fromMeterReading\n    ,fromReading.readingType AS fromReadingType\n    ,toDate\n    ,t.reading AS toMeterReading\n    ,toReading.readingType AS toReadingType\n    ,c.clockingTimeId\n  FROM \n    `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5` \n  INNER JOIN  UNNEST(fromReading.registers) AS f\n  INNER JOIN  UNNEST(toReading.registers) AS t ON t.tier = f.tier\n  INNER JOIN  UNNEST(consumption.registers) AS c ON c.tier = f.tier\nUnion All\nSELECT\nmetaData.createdAt as createdAt,\nmpan,\nmsn,\ndate(fromDateTime, \"Europe\/London\") as fromDate,\nt.fromMeterReading as fromMeterReading,\nt.fromReadingType as fromReadingType,\ndate(toDateTime, \"Europe\/London\") as toDate,\nt.toMeterReading as toMeterReading,\nt.toReadingType as toReadingType,\nt.clockingTimeId\nFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v4`\ninner join unnest (tiers) t\n)\nSelect\ncreatedAt,\nmpan,\nmsn,\ntoDate,\ntoMeterReading,\ntoReadingType,\nfromDate,\nfromMeterReading,\nfromReadingType,\nclockingTimeId,\nROW_NUMBER() OVER (PARTITION BY mpan,\nmsn,\ntoDate, clockingTimeId ORDER BY createdAt DESC) AS latest_consumption\nFrom cte_union_topics\n)\n\nSELECT * FROM cte_ordered_reads\nwhere latest_consumption = 1\n"},"data-engineering-prod:product_andromeda_secure.tardis_rac_gas_reads":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_rac_gas_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_rac_gas_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_rac_gas_reads","table_id":"tardis_rac_gas_reads","time_partitioning":null,"view_query":"With cte_ordered_reads\nAS\n(\nWith cte_union_topics as\n(\nSELECT\nmetaData.createdAt,\nmprn,\nmsn,\nfromDate,\nfromReading.Reading as fromReading,\nfromReading.ReadingType as fromReadingType,\ntoDate,\ntoReading.Reading as Reading,\ntoReading.ReadingType as ReadingType\nFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v3`\nUnion All\nSELECT\nmetaData.createdAt,\nmprn,\nmsn,\ndate(fromDateTime) as fromDate,\nfromMeterReading as fromReading,\nfromReadingType as fromReadingType,\ndate(toDateTime) as toDate,\ntoMeterReading as Reading,\ntoReadingType as ReadingType\nFROM `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_volume_consumption_generated_v2`\n)\nSelect\ncreatedAt,\nmprn,\nmsn,\nfromDate,\nfromReading,\nfromReadingType,\ntoDate,\nReading,\nReadingType,\nROW_NUMBER() OVER (PARTITION BY mprn,\nmsn,\ntoDate ORDER BY createdAt DESC) AS latest_consumption\nFrom cte_union_topics\n)\n\nSELECT * FROM cte_ordered_reads\nwhere latest_consumption = 1"},"data-engineering-prod:product_andromeda_secure.tardis_tvr_decision_latest":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tardis_tvr_decision_latest","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_tvr_decision_latest","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tardis_tvr_decision_latest","table_id":"tardis_tvr_decision_latest","time_partitioning":null,"view_query":"\nwith cte_latest_decision as\n(\n  select tvr.*,\n         row_number() Over (partition by tvr.mpan, tvr.readDate order by flowDatetime desc, tvr.metadata.createdAt DESC) as decision_rownum\n  from `data-engineering-prod.raw_andromeda_secure.tardis_tvr_decision` tvr\n)\nselect * \nfrom cte_latest_decision \nwhere decision_rownum = 1"},"data-engineering-prod:product_andromeda_secure.tariff_payment_mismatch":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tariff_payment_mismatch","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tariff_payment_mismatch","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tariff_payment_mismatch","table_id":"tariff_payment_mismatch","time_partitioning":null,"view_query":"\/*\nName: Tariff_Payment_Mismatch\nDescription: Flags accounts with no DD setup on a DD tariff\nAuthor: Alex Ashford\nCreated Date: 2020-07-23\nReviewed By: Pete Diwell\n*\/\n\nWITH tariff_deats as (\n    SELECT DISTINCT ac.tariff.tariffId \n                   ,ac.tariff.paymentMethod \n                   ,ac.tariff.planName \n                   ,ac.tariff.planDisplayName \n                   ,ac.tariff.region \n                   ,ac.tariff.retailer \n    FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_supply_point_tariff_costs_v6` t\n    LEFT JOIN UNNEST(t.annualTariffCosts) ac\n)\n\nSELECT DISTINCT c.serviceAccountId as Account_No\n               ,c.mpxn as MPXN\n               ,c.fuel as Fuel\n               ,c.contractId as Contract_ID\n               ,c.tariffId as Tariff_ID\n               ,c.tariffType as Tariff_Type\n               ,COALESCE(t.planName,c.planName) as Tariff_Name\n               ,t.planDisplayName as Tariff_Display_Name\n               ,t.paymentMethod as Tariff_Payment_Method\n               ,c.endDate as Contract_End_Date\n               ,IFNULL(s.Is_Active_Subscription,0) Has_DD\n               #,s.Subscription_Created_Date \n               #,s.DD_Day_Of_Month \n               #,s.DD_Amount \nFROM `data-engineering-prod.product_andromeda_secure.contracts` c\nLEFT JOIN `data-engineering-prod.product_payments.subscriptions` s ON s.Account_No = c.serviceAccountId and s.Is_Active_Subscription = 1\nLEFT JOIN tariff_deats t on t.tariffId = c.tariffId\nWHERE c.contractStatus = 'active'\nAND (t.paymentMethod = 'Direct Debit' AND IFNULL(s.Is_Active_Subscription,0) = 0) #To filter DD contracts where account has not DD\nAND (c.tariffType = 'variable' OR c.endDate < '2020-10-01')\nORDER BY 1"},"data-engineering-prod:product_andromeda_secure.tariffs":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.tariffs","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tariffs","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/tariffs","table_id":"tariffs","time_partitioning":null,"view_query":"with cte_tariff_version_dedupe as\n(\n  select upserted_tariffId as tariffId,\n         upserted_versionId as versionId,\n         upserted_versionDescription as versionDescription,\n         upserted_activeFrom as activeFrom,\n         upserted_activeTo as activeTo,\n         -- Tariff key components\n         upserted_fuel as fuel,\n         upserted_planName as planName,\n         upserted_profileClass as profileClass,\n         upserted_region as region,\n         upserted_retailer as retailer,\n         upserted_payment_method as paymentMethod,\n         -- Other attributes\n         upserted_type as type,\n         upserted_length as `length`,\n         upserted_standingRate as standingRate,\n         upserted_unitRates as unitRates,\n         upserted_unitRate as unitRate,\n         upserted_exitFee as exitFee,\n         upserted_createdAt as latestCreatedAt,\n         row_number() over (partition by upserted_tariffId, upserted_versionId order by topic desc, upserted_createdAt desc, insertTime desc) as dedupe_rownum\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_tariff__no_dedupe` ups\n  where ups.upserted_eventId is not null\n),\ncte_cancelled as\n(\n  select cancelled_tariffId as tariffId,\n         cancelled_versionId as versionId,\n         max(cancelled_createdAt) as latestCancelledCreatedAt\n  from `data-engineering-prod.raw_andromeda_secure.energy_contracts_tariff__no_dedupe`\n  where cancelled_eventId is not NULL\n  group by cancelled_tariffId, cancelled_versionId\n)\nselect cr.*\nfrom cte_tariff_version_dedupe cr\nleft join cte_cancelled canc on cr.tariffId = canc.tariffId\n                            and cr.versionId = canc.versionId\n                            and canc.latestCancelledCreatedAt > cr.latestCreatedAt\nwhere cr.dedupe_rownum = 1\n  and canc.tariffId is null\n  "},"data-engineering-prod:product_andromeda_secure.temp_elec_disputes_to_reinitate_after_tdis_314":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.temp_elec_disputes_to_reinitate_after_tdis_314","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/temp_elec_disputes_to_reinitate_after_tdis_314","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/temp_elec_disputes_to_reinitate_after_tdis_314","table_id":"temp_elec_disputes_to_reinitate_after_tdis_314","time_partitioning":null,"view_query":"with cte as\n(\n  with cte_d300_order as\n  (\n    select init.mpxn, init.disputedReadDate, init.initiatedAt,\n           d300.metadata.rawSourcePath, d300.header.toMarketParticipantId, d300.record.MpanDetails.meteringPointAddressLine1, d300.record.MpanDetails.meteringPointAddressLine2,\n           agr.agreedAt, rej.rejectedAt, rej.rejectionCode, \n           row_number() over (partition by init.mpxn order by d300.metadata.createdAt) as d300_order\n    from `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_initiated` init\n    left join `data-engineering-prod.raw_andromeda_secure.flow_D0300001_split` d300 on init.mpxn = d300.record.MpanDetails.mpanCore\n                                                             and d300.metadata.createdAt > init.metadata.createdAt\n                                                             and d300.header.fromMarketParticipantId = 'OVOE'                                                           \n    left join `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_agreed` agr on init.mpxn = agr.mpxn\n    left join `data-engineering-prod.raw_andromeda_secure.tardis_elec_dispute_rejected` rej on init.mpxn = rej.mpxn\n  )\n  select distinct d1.*, d2.meteringPointAddressLine2 as line2_on_2nd_d300,\n         case when d1.agreedAt is not null then 1 else 0 end as agreedCount,\n         case when d1.rejectedAt is not null then 1 else 0 end as rejectedCount,\n         case when d2.meteringPointAddressLine2 is not null then 1 else 0 end as requiredNewFlow,\n         case\n          when d1.meteringPointAddressLine2 <> '' then 'Hopefully right first time'\n          when d1.agreedAt is not null and d2.meteringPointAddressLine2 is not null then 'Agreed after new flow sent'\n          when d1.agreedAt is not null and d2.meteringPointAddressLine2 is null then 'Agreed without the need for new flow'\n          when d2.meteringPointAddressLine2 is not null then 'Not yet agreed but new flow sent'\n          when d2.meteringPointAddressLine2 is null then 'Not yet agreed, no new flow sent'\n         end as status\n  from cte_d300_order d1\n  left join cte_d300_order d2 on d1.mpxn = d2.mpxn\n                             and d2.meteringPointAddressLine2 <> ''\n                             and d2.initiatedAt < '2019-11-25'\n  where d1.d300_order = 1\n  order by initiatedAt desc\n),\ncte_replacement_d86s as\n(\n  select d.mpxn, d.lossDate, d.sfeGainingSupplier, d.sfeCosLossReadingUnits, d.finalReadingUnits, d.d86ReadingUnits\n  from `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed` d\n  where d.serviceAccountId is not null\n  and d.fuel = 'electricity'\n  and d.finalReadingUnits <> d.d86ReadingUnits\n)\nselect c.*\nfrom cte c\nleft join cte_replacement_d86s as r on c.mpxn = r.mpxn\nwhere status = 'Not yet agreed, no new flow sent'\n  and rejectedAt is null\n  and initiatedAT > '2019-09-01'\n  and r.mpxn is null"},"data-engineering-prod:product_andromeda_secure.uncharged_supply_point_exceptions_extract":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.uncharged_supply_point_exceptions_extract","location":"EU","num_bytes":3324606,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/uncharged_supply_point_exceptions_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/uncharged_supply_point_exceptions_extract","table_id":"uncharged_supply_point_exceptions_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_andromeda_secure.uncharged_supply_point_snapshots":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.uncharged_supply_point_snapshots","location":"EU","num_bytes":31117674183,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/uncharged_supply_point_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/uncharged_supply_point_snapshots","table_id":"uncharged_supply_point_snapshots","time_partitioning":{"expiration_ms":null,"require_partition_filter":null,"type_":"DAY"},"view_query":null},"data-engineering-prod:product_andromeda_secure.uncharged_supply_point_staging":{"clustering_fields":null,"dataset_id":"product_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_andromeda_secure.uncharged_supply_point_staging","location":"EU","num_bytes":162890241,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/uncharged_supply_point_staging","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_andromeda_secure\/tables\/uncharged_supply_point_staging","table_id":"uncharged_supply_point_staging","time_partitioning":null,"view_query":null},"data-engineering-prod:product_identity_secure.identity_user":{"clustering_fields":null,"dataset_id":"product_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_identity_secure.identity_user","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_identity_secure\/tables\/identity_user","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_identity_secure\/tables\/identity_user","table_id":"identity_user","time_partitioning":null,"view_query":"\/*\nName: identity_user\nAuthor: Alex Ashford\nCreated Date Date: 2020-07-08\nDescription: Provides a view of the latest customer data from identity\nUpdated: 2020-08-24\nUpdate Desc: Move to identity users topic\nReviewed By: Amane Toda\n*\/\n\n#Get latest create event\nWITH created as (\n    SELECT u.event.CreatedOrUpdate.user.id as Customer_ID\n          ,u.event.CreatedOrUpdate.user.title as Title\n          ,u.event.CreatedOrUpdate.user.givenName as First_Name\n          ,u.event.CreatedOrUpdate.user.familyName as Last_Name\n          ,TRIM(CONCAT(IFNULL(u.event.CreatedOrUpdate.user.givenName,''),' ',IFNULL(u.event.CreatedOrUpdate.user.familyName,''))) as Full_Name\n          ,u.event.CreatedOrUpdate.user.birthdate as DOB\n          ,u.event.CreatedOrUpdate.user.emailAddress as Private_Email\n          ,CAST(NULL AS STRING) as Work_Email\n          ,CAST(NULL AS STRING) as Work_Phone\n          ,CAST(FLOOR(DATE_DIFF(CURRENT_DATE(), u.event.CreatedOrUpdate.user.birthdate, DAY) \/ 365.25) AS INT64) as Age\n          ,TRIM(CONCAT(IFNULL(u.event.CreatedOrUpdate.user.title,'') ,' ' ,IFNULL(u.event.CreatedOrUpdate.user.givenName,''),' ',IFNULL(u.event.CreatedOrUpdate.user.familyName,''))) as Mail_Merge_Name\n          ,TRIM(CONCAT(IFNULL(u.event.CreatedOrUpdate.user.title,'') ,' ',IFNULL(u.event.CreatedOrUpdate.user.familyName,''))) as Mail_Merge_Salutation\n          ,u.event.CreatedOrUpdate.user.enabled as User_Enabled\n          ,u.kafkaData.insertTime as Last_Updated\n          ,u.event.CreatedOrUpdate.user.phoneNumbers as Phone_Numbers\n          ,u.event.CreatedOrUpdate.user.marketingPreferences as Marketing_Preferences\n          # Extra fields in the table, could include later\n          #,u.event.CreatedOrUpdate.user.formattedAddresses\n          #,u.event.CreatedOrUpdate.user.postalAddress \n          #,u.event.CreatedOrUpdate.user.requiredActions \n          #,u.event.CreatedOrUpdate.user.permissions\n          #,u.event.CreatedOrUpdate.user.specialCommPreferences \n          #,u.realm --Think this will be brand\n         ,ROW_NUMBER() OVER(PARTITION BY u.event.CreatedOrUpdate.user.id ORDER BY u.kafkaData.insertTime DESC, u.kafkaData.offset DESC) Row_Num\n    FROM `data-engineering-prod.raw_identity_secure.identity_users` u\n    WHERE u.event.Deleted.id IS NULL\n),\n\n#Filter to latest event\nlatest as (\n    SELECT c.* EXCEPT(Row_Num)\n    FROM created c \n    WHERE c.Row_Num = 1\n),\n\n#Get delete events\ndeleted as (\n    SELECT u.event.Deleted.id as Customer_ID\n          ,u.kafkaData.insertTime as Last_Updated\n    FROM `data-engineering-prod.raw_identity_secure.identity_users` u\n    WHERE u.event.CreatedOrUpdate.user.id IS NULL\n)\n\n#Remove customers with a delete event\nSELECT c.* \nFROM latest c \nLEFT JOIN deleted d on d.Customer_ID = c.Customer_ID and d.Last_Updated > c.Last_Updated\nWHERE d.Customer_ID IS NULL"},"data-engineering-prod:product_orion.account_supply_points":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.account_supply_points","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/account_supply_points","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/account_supply_points","table_id":"account_supply_points","time_partitioning":null,"view_query":"\/*\nName: Account_Supply_Points\nDescription: View of Orion Supply Point Statuses\nAuthor: Alex Ashford\nCreated At: 2020-07-28\nCode outright stolen from: https:\/\/github.com\/ovotech\/Delta_Force_BQ_Data_Processing\/blob\/master\/alignment_orion\/consumer.sql\nReviewed By: Pete Diwell\n*\/\n\nWITH orionOnboardingSequencer as (\n    SELECT coalesce(event.AccountSupplyPointCreated.accountId,event.AccountSupplyPointCancelled.accountId) as Account_No,\n           coalesce(cast(cast(event.AccountSupplyPointCreated.supplyPoint as int64) as string),event.AccountSupplyPointCancelled.supplyPoint) as Meter_Point_No,\n           event.AccountSupplyPointCreated.supplyStartDate as Consumer_Supply_Start_Date,\n           first_value(event.AccountSupplyPointCreated.supplyStartDate ) over(partition by coalesce(event.AccountSupplyPointCreated.accountId, event.AccountSupplyPointCancelled.accountId),\n                                                                                          coalesce(cast(cast(event.AccountSupplyPointCreated.supplyPoint as int64) as string),event.AccountSupplyPointCancelled.supplyPoint)\n                                                                              order by metadata.createdAt ASC ) as Switch_Request_Date,\n           metadata.createdAt\tas Created_Datetime,\n           row_number() over(partition by coalesce(event.AccountSupplyPointCreated.accountId,event.AccountSupplyPointCancelled.accountId),\n                                          coalesce(cast(cast(event.AccountSupplyPointCreated.supplyPoint as int64) as string),event.AccountSupplyPointCancelled.supplyPoint)\n                             order by metadata.createdAt DESC) as Sequencer,\n           case when event.AccountSupplyPointCancelled.supplyPoint\t is not null then 1 else 0 end as Is_Cancelled\n    FROM `data-engineering-prod.landing_orion_onboarding_secure.orion_onboarding_supply_point_account_binding_v1`\n),\n\ncteOrionOnboarding as (\n    select oos.account_no,\n           CAST(cast(oos.meter_point_no as int64) AS STRING) AS meter_point_no,\n           oos.meter_point_no as Installation_No,\n           oos.consumer_supply_start_date,\n           oos.created_datetime,\n           signup.installation_signup_id as Ontrack_Installation_ID,\n           signup.signup_date as Sales_Date,\n           cast(NULL as date) AS Switch_Confirmed_Date,\n           cast(NULL as string) as Switch_New_Retailer,\n           oos.Switch_Request_Date,\n           cast(NULL as string) AS Tax_Class_Code,\n           signup.installation_signup_id as Consumer_Global_ID,\n           signup.installation_signup_id as Sales_System_Installation_ID,\n           signup.agent_code,\n           signup.campaign_code,\n           signup.agent as Sales_Agent,\n           signup.signup_channel as Sales_Channel,\n           cast(NULL as string) as Sales_Media_Code,\n           signup.external_signup_reference as Sales_Ref,\n           signup.external_signup_reference as External_Signup_Reference,\n           case when STRPOS(signup.agent,' ') <> 0 then trim(substr(signup.agent,STRPOS(signup.agent,' '),100)) end as Sales_Agent_Username,\n           signup.Broker_Partner_Code,\n           signup.How_Customer_Heard_Code,\n           signup.Is_Direct,\n           signup.Sales_Team,\n           signup.Sales_Agency,\n           signup.Broker_Name,\n           signup.Is_Initiated_By_Sales_Agent,\n           signup.Signup_Channel_Medium as Sales_Channel_Medium\n    from orionOnboardingSequencer oos\n    inner join (\n        select ins.*,\n               acc.account_no\n        from `data-engineering-prod.staging_reporting_sales.v_Installation_Signup` ins\n        inner join `data-engineering-prod.staging_reporting_sales.v_Account_Signup` acc on ins.account_signup_id = acc.account_signup_id\n    ) signup on oos.meter_point_no = signup.meter_point_no and oos.account_no = signup.account_no \n    where sequencer = 1\n    and is_cancelled = 0 --may want to reintroduce this if needs be.\n),\n\ncteOrionLifecycleStatusUpdates as (\n    select message.acquisitionId\tas acquisitionId,\n           message.accountId as account_no,\n           CAST(cast(message.mpxn as int64) AS STRING) as meter_point_no,\n           message.supplyStartDate,\n           message.status,\n           metadata.createdAt,\n           row_number() over(partition by message.accountId,CAST(cast(message.mpxn as int64) AS STRING) order by metadata.createdAt desc) as deduper -- we want the latest so in descending fashion\n    from `data-engineering-prod.landing_orion_onboarding_secure.orion_onboarding_registration_update_v1`\n),\n\nsupply_point_state AS (\n    select SPLIT(accountId,'-')[OFFSET(0)] as Account_No,\n           accountId as serviceAccountId,\n           CAST(safe_cast(mpxns.supplyPoint as INT64) AS STRING) as Meter_Point_No,\n           date(mpxns.start,'Europe\/London') as Supply_Start_Date,\n           date_add(date(mpxns.end,'Europe\/London'),interval -1 day) as Supply_End_Date, --BAST go up until the end of the day, so take a day off.\n           UPPER(SUBSTR(mpxns.fuel,1,1)) as Utility_Type_Code,\n           mpxns.fuel as Fuel_Type,\n           row_number() over(partition by accountId,CAST(safe_cast(mpxns.supplyPoint as INT64) AS STRING) order by kafkadata.inserttime desc) as Row_Num\n    from `data-engineering-prod.landing_bast.bast_account_supply_point_state_v1`\n    JOIN UNNEST(Ownership) mpxns\n),\n\nlosses AS (\n    SELECT mpxn,\n           serviceAccountId,\n           lossdate,\n           lossNotificationReceivedDate,\n           lossCancellationReceivedDate,\n           lossCompletionReceivedDate,\n           lossConfirmationReceivedDate,\n           lossJourneyStatus,\n           ROW_NUMBER() OVER (PARTITION BY serviceAccountId, mpxn ORDER BY lossdate DESC) AS row_num\n    FROM `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed`\n    WHERE serviceAccountId IS NOT NULL\n    AND lossCancellationReceivedDate IS NULL\n),\n\nfinal_statement as (\n    SELECT *,\n           ROW_NUMBER() OVER(PARTITION BY f.Account_No ORDER BY f.Created_Datetime DESC) Row_Num\n    FROM `data-engineering-prod.product_orion_secure.final_statements` f\n),\n\nlatest_migration as ( # PD 2020-07-09 - Added due to change in migration success view\n    SELECT *,\n           ROW_NUMBER() OVER(PARTITION BY Account_No ORDER BY migrated_date DESC) Row_Num\n    FROM `data-engineering-prod.raw_orion_migration.orion_migration_success`\n),\n\naccount_state AS (\n  select metadata.eventid,\n  accountId,\n  case when accountId like '%-%' then SUBSTR(accountId,1,STRPOS(accountId, '-')-1)\n       else accountId\n  end AS Account_No,\n  status,\n  accountStateTimestamp,\n  hasOnlineDiscount,\n  interestRewardStartDate,\n  interestRewardOptOut,\n  electricitySupplyStartDate,\n  gasSupplyStartDate,  \n  vacant,\n  ROW_NUMBER() OVER (PARTITION BY accountid ORDER BY accountStateTimestamp DESC) RN\nfrom `data-engineering-prod.raw_orex_secure.orex_account_state`\n)\n\nSELECT DISTINCT C.serviceAccountId,\n                C.Account_No,\n                C.Meter_Point_No,\n                C.Fuel_Type,\n       IF(M.Migrated_Date > C.Supply_Start_Date, M.Last_Statement_Date_In_Apollo, C.Supply_Start_Date) AS Start_Date, -- PG 23\/02\/2020, changing from Migration_Date to Last_Statement_Date_In_Apollo so we capture when the migration was effective from\n       C.Supply_End_Date AS End_Date,\n       C.Supply_Start_Date AS True_Supply_Start_Date,\n       M.Migrated_Date,\n       M.Reverse_Migrated_Date, # PD 2020-07-09 - Added\n       L.lossDate AS Loss_Date,\n       L.lossNotificationReceivedDate as Loss_Notification_Received_Date,\n       CASE WHEN M.Reverse_Migrated_Date IS NOT NULL THEN 'reverse migrated'\n            WHEN f.Account_No is not null then 'lost' --final statements\n       \t    when l.lossJourneyStatus  in ('Loss completed','Loss confirmed') and l.lossDate <= Current_date() then 'lost'\n       \t    WHEN c.Supply_End_Date <= current_date() then 'lost'\n       \t    when l.lossJourneyStatus  in ('Loss completed','Loss confirmed','Loss notification received', 'Loss notification received - Past Expected Loss Date') then 'live (pending loss)'\n       \t    when oob.meter_point_no is not null then CASE cols.status            \n       \t    \t                                             WHEN 'AregiSent' THEN 'registering'\n                                                           WHEN 'RegistrationAccepted' THEN 'registering'\n                                                           WHEN 'RegistrationRejected' THEN 'onboarding (in exception)'\n                                                           WHEN 'RegistrationObjected' THEN 'onboarding (in exception)'\n                                                           WHEN 'RegistrationCancellationRequested' THEN 'onboarding (in exception)'\n                                                           WHEN 'RegistrationCancelled' THEN 'onboarding (in exception)'\n                                                           WHEN 'SwitchCancelled' THEN 'transfer cancelled'\n                                                           WHEN 'OnSupply' THEN 'live (excluding loss)'\n       \t    \t\t                                           ELSE 'onboarding'\n                                                           END \n       \t    WHEN oracc.status = 'active' then 'live (excluding loss)'  \n       \t    else 'transfer cancelled' \n       END as Supply_Lifecycle      \nFROM supply_point_state C\nLEFT JOIN latest_migration M ON C.serviceAccountId = M.Account_No and M.Row_Num = 1\nLEFT JOIN losses L ON C.Meter_Point_No = L.mpxn AND C.serviceAccountId=L.serviceAccountId AND L.lossNotificationReceivedDate >= M.Migrated_Date AND L.ROW_NUM = 1\nLEFT JOIN final_statement f ON f.Account_No = C.serviceAccountId AND CAST(f.Created_Datetime AS DATE) > L.lossNotificationReceivedDate AND f.Row_Num = 1\nleft join cteOrionOnboarding oob on c.meter_point_no = oob.meter_point_no and c.account_no = oob.account_no\nleft join cteOrionLifecycleStatusUpdates cols on c.account_no = cols.account_no and c.meter_point_no = cols.meter_point_no and cols.deduper = 1\nLEFT JOIN account_state oracc on c.Account_No = oracc.Account_No and oracc.RN = 1\nWHERE C.Row_Num = 1"},"data-engineering-prod:product_orion.accounts":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.accounts","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/accounts","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/accounts","table_id":"accounts","time_partitioning":null,"view_query":"WITH account_state AS (\n  select metadata.eventid,\n  accountId,\n  case when accountId like '%-%' then SUBSTR(accountId,1,STRPOS(accountId, '-')-1)\n       else accountId\n  end AS Account_No,\n  status,\n  accountStateTimestamp,\n  hasOnlineDiscount,\n  interestRewardStartDate,\n  interestRewardOptOut,\n  electricitySupplyStartDate,\n  gasSupplyStartDate,  \n  vacant,\n  ROW_NUMBER() OVER (PARTITION BY accountid ORDER BY accountStateTimestamp DESC) RN\nfrom `data-engineering-prod.raw_orex_secure.orex_account_state`\n),\n\norex_account_state AS (\n  SELECT * \n  FROM account_state WHERE RN = 1\n),\n\nlatest_migration AS (\n  SELECT *,\n         row_number() over (partition by account_no order by migrated_date desc) as rn\n  FROM `data-engineering-prod.raw_orion_migration.orion_migration_success`\n)\n\nSELECT \n  O.accountId,\n  O.Account_No,\n  O.status                                          AS Status,\n  CAST(O.accountStateTimestamp AS DATE)             AS Account_State_Date,\n  O.hasOnlineDiscount                               AS Has_Online_Discount,\n  CAST(O.interestRewardStartDate AS DATE)           AS Interest_Reward_Start_Date,\n  ms.Migrated_Date,\n  MIN(C.Supply_Lifecycle)                           AS Account_Supply_Lifecycle,\n  CAST(O.electricitySupplyStartDate AS DATE)        AS Electricity_Supply_Start_Date,\n  CAST(O.gasSupplyStartDate AS DATE)                AS Gas_Supply_Start_Date,\n  ms.Reverse_Migrated_Date,\n  O.vacant                                          AS Is_Unknown_Occupier\nFROM orex_account_state O\nLEFT JOIN  `data-engineering-prod.product_orion.account_supply_points`      C ON O.Account_No = C.Account_No\nleft join latest_migration ms on ms.Account_No=o.account_no and ms.rn = 1\nGROUP BY O.accountId,\n  O.Account_No,                          \n  CAST(O.accountStateTimestamp AS DATE),\n  O.hasOnlineDiscount,                     \n  CAST(O.interestRewardStartDate AS DATE),\n  O.status,\n  ms.Migrated_Date,\n  O.electricitySupplyStartDate,\n  O.gasSupplyStartDate,\n  Reverse_Migrated_Date,\n  O.vacant"},"data-engineering-prod:product_orion.accounts_extract":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.accounts_extract","location":"EU","num_bytes":44399437,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/accounts_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/accounts_extract","table_id":"accounts_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.draft_touchpoints_account_count":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.draft_touchpoints_account_count","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/draft_touchpoints_account_count","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/draft_touchpoints_account_count","table_id":"draft_touchpoints_account_count","time_partitioning":null,"view_query":"with touchpoint_categories as (select  Description, \n                                    Touchpoint_Category,\n                                    min(Date_Occurred) as Start_Date\n                                  from `data-engineering-prod.product_orion.touchpoints`\n                                  group by Description, \n                                    Touchpoint_Category),\n\nover_65 as (SELECT cam.account_no  \n            FROM `data-engineering-prod.product_identity_secure.identity_user` iu\n            left join `data-engineering-prod.product_orion_secure.customer_to_account_mapping` cam on cam.customer_id = iu.customer_id\n            group by cam.account_no\n            having max(iu.age)>65), \n                  \ndebt_constraints as (SELECT distinct eh.account_no,\n                        exception\n                  FROM `data-engineering-prod.raw_ops_workstreams.Orion_tbl_Exception_History` eh\n                  inner join `data-engineering-prod.product_orion.accounts` a on a.account_no = eh.account_no\n                                                                          and a.migrated_date=eh.snapshot_date\n                  where eh.exception in ('Is Debt Risk Customer','Forecast \u00a3100 to \u00a3200 EOC Debt','Forecast \u00a3200 to \u00a3500 EOC Debt','Forecast \u00a350 to \u00a3100 EOC Debt')\n                  and eh.snapshot_date>='2018-11-01')\n\nSELECT  d.Calendar_Date,\n  d.Reporting_Week_Ending_Date,\n  tl.Description,\n  tl.Touchpoint_Category,\n  case when date_diff(d.calendar_date,a.Migrated_Date,Day)<28 then 'Recently Migrated'\n    else 'Not Recently Migrated' end as Is_Recently_Migrated,\n  case when o65.account_no is not null then 'Over 65' else 'Under 65' end as Is_Over_65,\n  case when v.serviceAccountId is not null then 'Variable' else 'Fixed' end as Is_Variable_At_Migration,\n  case when rw.account_no is not null then 'In Renewal Window' else 'Not in Renewal Window' end as Is_In_Renewal_Window,\n  case when dc.account_no is not null then 'Debt Risk' else 'Not a Debt Risk' end as Is_Debt_Risk_Customer_At_Migration, --can break down by specifics if needed later\n  count(distinct a.account_no) as Account_Count,\n  count(distinct alt.Account_no) as Touchpoint_Count\nfrom `data-engineering-prod.reference.tbl_Date` d\ninner join `data-engineering-prod.product_orion.accounts` a on d.calendar_date between Migrated_Date and ifnull(Reverse_Migrated_Date,current_Date()) --need to include losses and COTs at some point\ninner join touchpoint_categories tl on 1=1\n--left join `data-engineering-prod.product_orion.loss_journeys` lj on lj.account_no = a.account_no\n--left join `data-engineering-prod.raw_orion_migration_secure.move_out_requests` mor on mor.account_no = a.account_no\nleft join over_65 o65 on o65.account_no = a.account_no\nleft join `data-engineering-prod.product_andromeda_secure.contracts` v on v.serviceAccountId = a.account_no\n                                                                        and v.tariffType='variable'\n                                                                        and a.migrated_date between v.startdate and ifnull(v.enddate,'2999-01-01')\nleft join `data-engineering-prod.product_orion.upcoming_events` rw on rw.account_no = a.account_no\n                                                                    and rw.event_name = 'Renewal Window Opens'\n                                                                    and d.calendar_date between rw.event_date and date_add(rw.event_date, interval +49 day)\nleft join debt_constraints dc on dc.account_no = a.account_no\nleft join `data-engineering-prod.product_orion.touchpoints` alt on alt.account_no = a.account_no\n                                                                                  and alt.description=tl.description\n                                                                                  and alt.touchpoint_category= tl.touchpoint_category\n                                                                                  and alt.date_occurred = d.calendar_date                                                 \nwhere \n  a.status='active'\nand d.calendar_date between '2018-07-01' and date_add(current_date, interval -1 day)\ngroup by calendar_date,\n  Reporting_Week_Ending_Date,\n  description,\n  touchpoint_category,\n  Is_Recently_Migrated,\n  Is_Over_65,\n  Is_Variable_At_Migration,\n  Is_In_Renewal_Window,\n  Is_Debt_Risk_Customer_At_Migration"},"data-engineering-prod:product_orion.engagement":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.engagement","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/engagement","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/engagement","table_id":"engagement","time_partitioning":null,"view_query":"select\n\tMS.Account_No,\n  MS.Migrated_Date,\n  CASE \n\t\tWHEN IFNULL(EG.Number_Of_Distinct_Months,0) >=2 THEN 'Engaged'\n\t\tWHEN IFNULL(EG.Number_Of_Logins_In_Month_Prior_To_Migration,0) >= 2 THEN 'Engaged'\n\t\tELSE 'Disengaged'\n\tEND                                                                    AS Engagement_Pre_Migration\n#  CASE\n#    WHEN LG.Days_Since_Migration BETWEEN 0 AND 90 AND IFNULL(LG.Volume_Of_Successful_Logins,0)>=2   THEN 'Engaged'\n#    WHEN LG.Days_Since_Migration <= 30                                                              THEN 'Too Soon To Determine'\n#    ELSE 'Disengaged'\n#  END                                                                    AS Engagement_Post_Migration\nfrom \n\t           `data-engineering-prod.raw_orion_migration.orion_migration_success`        as MS\n\tLEFT JOIN  `data-engineering-prod.landing_orion_migration.pre_migration_engagement`   AS EG   ON MS.Account_No = EG.Account_No\n#  LEFT JOIN  `data-engineering-prod.product_orion.logins`                               AS LG   ON EC.Account_No = LG.Account_No\nORDER BY\n  MS.Account_No\n  \n  \n\n\n"},"data-engineering-prod:product_orion.exception_billing_gaps_or_overlaps":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.exception_billing_gaps_or_overlaps","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/exception_billing_gaps_or_overlaps","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/exception_billing_gaps_or_overlaps","table_id":"exception_billing_gaps_or_overlaps","time_partitioning":null,"view_query":"WITH crm_v_consumer AS\n(\nSELECT \n  C.Meter_Point_No,\n  C.Installation_No,\n  C.Consumer_No,\n  C.Account_No,\n  C.Consumer_Supply_Start_Date,\n  CASE\n    WHEN C.Account_No = A.serviceAccountId THEN 1\n    ELSE 0\n  END Account_In_Orion\nFROM \n              `data-engineering-prod.reporting_crm.v_Consumer`              C\n  INNER JOIN  `data-engineering-prod.product_andromeda_secure.contracts`   A ON C.Meter_Point_No = A.mpxn\nWHERE\n  C.Lifecycle_Category <> 'Transfer Cancelled'\n)\n,\nconsumer AS\n(\nSELECT\n  CON.*,\n  ROW_NUMBER() OVER (PARTITION BY CON.Meter_Point_No, CON.Account_In_Orion ORDER BY CON.Consumer_Supply_Start_Date ASC)    AS Apollo_Orion_Row_Number\nFROM\n              crm_v_consumer CON\n   INNER JOIN crm_v_consumer ORE ON CON.Meter_Point_No = ORE.Meter_Point_No AND ORE.Account_In_Orion = 1 AND CON.Consumer_Supply_Start_Date >= ORE.Consumer_Supply_Start_Date\n)\n,\ncot AS\n(\nSELECT\n  A.*,\n  O.Orion_Account_No\nFROM\n(\nselect \n  Meter_Point_No,\n  Installation_No,\n  Consumer_No                AS Apollo_Consumer_No,\n  Account_No                 AS Apollo_Account_No,\n  Consumer_Supply_Start_Date AS Apollo_Move_In_Date\nfrom \n  consumer \nWHERE \n  Apollo_Orion_Row_Number = 1 \n  and Account_In_Orion = 0\n) A\nLEFT JOIN\n(\nselect \n  Meter_Point_No,\n  Account_No AS Orion_Account_No\nfrom \n  consumer \nWHERE \n  Apollo_Orion_Row_Number = 1 \n  and Account_In_Orion = 1\n) O ON A.Meter_Point_No = O.Meter_Point_No\n)\n,\nregister_history AS\n(\nSELECT\n  Installation_No,\n  Register_ID,\n  Install_Date,\n  Install_Read,\n  MIN(Snapshot_Date) AS Min_Snapshot_Date\nFROM\n  `data-engineering-prod.staging_reporting_meters.v_Register_History`\nWHERE\n  Install_Read is not NULL\nGROUP BY\n  Installation_No,\n  Register_ID,\n  Install_Date,\n  Install_Read\n)\n,\nconsumption_charges AS\n(\nSELECT\n  c.supply_point,\n  MAX(CASE WHEN CAST(c.charge_to_Date AS DATE) < m.enddate THEN CAST(c.charge_to_Date AS DATE)  ELSE DATE_ADD(m.enddate, INTERVAL 1 DAY) END) AS Most_Recent_Consumption_Charge_To_Date,\n  m.enddate                           AS Charge_Mandate_End_Date, \n  m.startdate                         AS Charge_Mandate_Start_Date\nfrom\n              `data-engineering-prod.product_andromeda_secure.consumption_charges`    C\n  INNER JOIN  `data-engineering-prod.product_andromeda_secure.charge_mandates`        M ON C.mpxn = M.mpxn\nGROUP BY\n  c.supply_point,\n  m.enddate,\n  m.startdate \n)\n,\nconsumption_blocks AS\n(  \nSELECT\n  C.supply_point                                                      As Meter_Point_No,\n  C.Most_Recent_Consumption_Charge_To_Date AS Latest_Consumption_Charged_Date_In_Orion,\n  C.Charge_Mandate_End_Date,\n  C.Charge_Mandate_Start_Date,\n  B.tometerreading\nFROM\n                consumption_charges                                                 C\n  INNER JOIN  `data-engineering-prod.product_andromeda_secure.consumption_blocks`   B ON C.supply_point = B.mpxn and C.Most_Recent_Consumption_Charge_To_Date = B.toDate\n)\nselect\n  C.Meter_Point_No,\n  C.Apollo_Consumer_No,\n  C.Orion_Account_No,\n  C.Apollo_Account_No,\n  DM.Min_Snapshot_Date                                            AS Apollo_Consumer_Recognised_Date,\n  DATE_ADD(RH.Min_Snapshot_Date, INTERVAL 1 DAY)                  AS Apollo_Opening_Read_Recognised_Date,\n  B.Charge_Mandate_Start_Date,\n  B.Charge_Mandate_End_Date,\n  C.Apollo_Move_In_Date                                           AS Apollo_Supply_Start_Date,\n  CASE\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 = 0  THEN 'No Overlap Or Gap'\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 > 0  THEn 'Overlap'\n    ELSE 'Gap'\n  END                                                                                                 AS Days_Direction,\n  CASE\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 < 0 THEN 1\n    ELSE 0\n  END                                                                                                 AS Has_Gap_In_Days,\n  CASE\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 < 0 THEN ABS(DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1)\n    ELSE 0\n  END                                                                                                 AS Number_Of_Uncharged_Days,\n  CASE\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 > 0 THEN 1\n    ELSE 0\n  END                                                                                                 AS Has_Overlap_In_Days,\n  CASE\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 > 0 THEN ABS(DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1)\n    ELSE 0\n  END                                                                                                 AS Number_Of_Double_Charged_Days,\n  FLOOR(ROUND(B.tometerreading,4))                                                                    AS Read_Used_To_Generate_Latest_Consumption_Charge_In_Orion,\n  ROUND(RH.Install_Read,4)                                                                            AS Apollo_Opening_Read,\n  CASE\n    WHEN RH.Install_Read IS NULL THEN NULL\n    WHEN FLOOR(ROUND(B.tometerreading,4)) - ROUND(CAST(RH.Install_Read AS INT64),4) = 0  THEN 'No Overlap Or Gap'\n    WHEN FLOOR(ROUND(B.tometerreading,4)) - ROUND(CAST(RH.Install_Read AS INT64),4) > 0  THEn 'Overlap'\n    ELSE 'Gap'\n  END                                                                                                 AS Consumption_Direction,\n  CASE\n    WHEN RH.Install_Read IS NULL THEN NULL\n    WHEN FLOOR(ROUND(B.tometerreading,4)) < RH.Install_Read THEN 1\n    ELSE 0\n  END                                                                                                 AS Has_Gap_In_Consumption,\n  CASE\n    WHEN RH.Install_Read IS NULL THEN NULL\n    WHEN FLOOR(ROUND(B.tometerreading,4)) > RH.Install_Read THEN 1\n    ELSE 0\n  END                                                                                                 AS Has_Overlap_In_Consumption,\n  ABS(FLOOR(ROUND(B.tometerreading,4)) - ROUND(CAST(RH.Install_Read AS INT64),4))                     AS Consumption_Difference,\n  CASE\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 = 0 THEN 'No Overlap Or Gap Expected'\n    WHEN DATE_DIFF(B.Charge_Mandate_End_Date,C.Apollo_Move_In_Date,DAY)+1 > 0  THEN 'Overlap In Days Expected'\n    ELSE 'Gap In Days Expected'\n  END                                                                                                 AS Prediction_Based_On_Charge_Mandate_End_Date,\n  CASE\n    WHEN C.Apollo_Move_In_Date <= B.Charge_Mandate_Start_Date THEN 1\n    ELSE 0\n  END                                                                                                 AS Apollo_Move_In_Date_Before_Or_Equal_To_Charge_Mandate_Start_Date\nfrom\n              cot                                                               C\n  LEFT JOIN  `data-engineering-prod.reporting_meters.v_Register`                R ON c.Installation_No = R.Installation_No AND R.install_date = C.Apollo_Move_In_Date\n  LEFT JOIN   consumption_blocks                                                B ON c.Meter_Point_No = B.Meter_Point_No\n  LEFT JOIN   (\n              SELECT \n                Service_No,\n                MIN(Snapshot_Date) AS Min_Snapshot_Date\n              FROM\n               `data-engineering-prod.reporting_mart.v_Service_Snapshots_Data_Mart`       \n              WHERE\n               Lifecycle_Category <> 'Transfer Cancelled'\n              GROUP BY\n               Service_No\n            )                       DM on C.Apollo_Consumer_No = dm.Service_No\n LEFT JOIN  register_history        RH ON R.Register_ID = RH.Register_ID and RH.Install_Date = C.Apollo_Move_In_Date\nORDER BY\n  C.Orion_Account_No"},"data-engineering-prod:product_orion.fuel_region_mapping":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.fuel_region_mapping","location":"EU","num_bytes":1650,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/fuel_region_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/fuel_region_mapping","table_id":"fuel_region_mapping","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_charges":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_charges","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges","table_id":"health_check_charges","time_partitioning":null,"view_query":"WITH charges_final AS\n(\nSELECT\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Charge_Type,\n  MIN(Balance_Update_Triggered)               AS Balance_Update_Triggered,\n  MIN(Charge_Amount_And_Balance_Update_Match) AS Charge_Amount_And_Balance_Update_Match,\n  MIN(CASE\n        WHEN Balance_Update_Triggered = 1 AND Charge_Amount_And_Balance_Update_Match = 1 THEN 1\n        ELSE 0\n      END)                                     AS Healthy_On_Charges,\n  Migrated_Date,\n  Supply_Lifecycle\nFROM\n  `data-engineering-prod.product_orion.health_check_charges_detail_refreshed_hourly` \nGROUP BY\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Charge_Type,\n  Migrated_Date,\n  Supply_Lifecycle\n)\n\nSELECT\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Charge_Type,\n  Balance_Update_Triggered,\n  Charge_Amount_And_Balance_Update_Match,\n  CASE\n    WHEN Healthy_On_Charges = 1 THEN 'Healthy Supply Points'\n    ELSE 'Unhealthy Supply Points'\n  END Charges_Health_Category,\n  Migrated_Date,\n  Supply_Lifecycle\nFROM\n  charges_final"},"data-engineering-prod:product_orion.health_check_charges_detail_live":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_charges_detail_live","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges_detail_live","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges_detail_live","table_id":"health_check_charges_detail_live","time_partitioning":null,"view_query":"WITH balance_updates as\n (\n select\n transactionId,\n accountId,\n type AS transaction_type,\n amount AS transaction_amount,\n balance AS new_balance_amount,\n balanceUpdateTime\n from\n `data-engineering-prod.raw_orex_secure.orex_balance_updated` \n ),\n \n standing AS\n (\n sELECT\n a.Account_No,\n a.Meter_Point_No,\n b.fuel AS Fuel_Type,\n c.charge_id AS Charge_ID,\n 'standing' AS Charge_Type,\n CAST(c.Charge_From_Date AS DATE) AS Charge_From_Date,\n CAST(c.Charge_To_Date AS DATE) AS Charge_To_Date,\n CAST(c.Charge_Amount AS FLOAT64) AS Charge_Amount,\n CAST(d.transaction_amount AS FLOAT64) AS Transaction_Amount,\n CASE\n WHEN d.transactionId IS NOT NULL THEN 1\n ELSE 0\n END Balance_Update_Triggered,\n CASE\n WHEN d.transactionId IS NULL THEN 1\n WHEN CAST(c.Charge_Amount AS FLOAT64) = CAST(d.transaction_amount AS FLOAT64) THEN 1\n ELSE 0\n END Charge_Amount_And_Balance_Update_Match,\n a.Migrated_Date,\n a.Supply_Lifecycle\n FROM \n `data-engineering-prod.product_orion.account_supply_points` a\n INNER JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` cc ON a.Meter_Point_No = cc.mpxn AND a.Account_No = SUBSTR(cc.serviceaccountid,1,7)\n INNER JOIN `data-engineering-prod.product_andromeda_secure.charge_mandates` b ON cc.energyContractId = b.contractId\n INNER join `data-engineering-prod.product_andromeda_secure.standing_charges` c on b.contractId = c.contract_Id \n left join balance_updates d ON c.charge_id = d.transactionId and d.transaction_type = 'standing_charge'\n ),\n \n consumption AS\n (\n sELECT\n a.Account_No,\n a.Meter_Point_No,\n b.fuel AS Fuel_Type,\n c.charge_id AS Charge_ID,\n 'consumption' AS Charge_Type,\n CAST(c.Charge_From_Date AS DATE) AS Charge_From_Date,\n CAST(c.Charge_To_Date AS DATE) AS Charge_To_Date,\n CAST(c.Charge_Amount AS FLOAT64) AS Charge_Amount,\n CAST(d.transaction_amount AS FLOAT64) AS Transaction_Amount,\n CASE\n WHEN d.transactionId IS NOT NULL THEN 1\n ELSE 0\n END Balance_Update_Triggered,\n CASE\n WHEN d.transactionId IS NULL THEN 1\n WHEN CAST(c.Charge_Amount AS FLOAT64) = CAST(d.transaction_amount AS FLOAT64) THEN 1\n ELSE 0\n END Charge_Amount_And_Balance_Update_Match,\n a.Migrated_Date,\n a.Supply_Lifecycle\n FROM \n `data-engineering-prod.product_orion.account_supply_points` a\n INNER JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` cc ON a.Meter_Point_No = cc.mpxn AND a.Account_No = SUBSTR(cc.serviceaccountid,1,7)\n INNER JOIN `data-engineering-prod.product_andromeda_secure.charge_mandates` b ON cc.energyContractId = b.contractId\n INNER join `data-engineering-prod.product_andromeda_secure.consumption_charges` c on b.contractId = c.contract_Id \n left join balance_updates d ON c.charge_id = d.transactionId and d.transaction_type = 'consumption_charge'\n )\n \n SELECT\n *\n FROM\n standing\n UNION ALL\n SELECT\n *\n FROM\n consumption"},"data-engineering-prod:product_orion.health_check_charges_detail_refreshed_hourly":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_charges_detail_refreshed_hourly","location":"EU","num_bytes":5256528731,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges_detail_refreshed_hourly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges_detail_refreshed_hourly","table_id":"health_check_charges_detail_refreshed_hourly","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_charges_snapshots":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_charges_snapshots","location":"EU","num_bytes":7529431386,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_charges_snapshots","table_id":"health_check_charges_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_contracts":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_contracts","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts","table_id":"health_check_contracts","time_partitioning":null,"view_query":"SELECT\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  MIN(IFNULL(Exactly_1_Charge_Mandate_Present_On_Customer_Contract_Day,0))                    AS Exactly_1_Charge_Mandate_Present_On_Customer_Contract_Day,\n  MIN(IFNULL(Customer_Contract_End_Date_Matches_Charge_Mandate_End_Date,0))                   AS Customer_Contract_End_Date_Matches_Charge_Mandate_End_Date,\n  MIN(IFNULL(Customer_Contract_Unit_Rate_Matches_Charge_Mandate_Unit_Rate,0))                 AS Customer_Contract_Unit_Rate_Matches_Charge_Mandate_Unit_Rate,\n  MIN(IFNULL(Customer_Contract_Standing_Rate_Matches_Charge_Mandate_Standing_Rate,0))         AS Customer_Contract_Standing_Rate_Matches_Charge_Mandate_Standing_Rate,\n  MIN(IFNULL(Customer_Contracts_Do_Not_Overlap,0))                                            AS Customer_Contracts_Are_Non_Overlapping,\n  MIN(IFNULL(Charge_Mandate_Has_Customer_Contract,0))                                         AS Charge_Mandate_Has_Customer_Contract,\n  MIN(IFNULL(Active_Supply_Point_Has_Exactly_1_Customer_Contract,0))                          AS Active_Supply_Point_Has_Exactly_1_Customer_Contract,\n  MIN(IFNULL(Contracts_Are_Correct_Length,0))                                                 AS Contracts_Are_Correct_Length,\n  CASE \n      WHEN (CASE\n                WHEN MIN(IFNULL(Exactly_1_Charge_Mandate_Present_On_Customer_Contract_Day,0)) = 1 AND  \n                       MIN(IFNULL(Customer_Contract_End_Date_Matches_Charge_Mandate_End_Date,0)) = 1 AND\n                         MIN(IFNULL(Customer_Contract_Unit_Rate_Matches_Charge_Mandate_Unit_Rate,0))= 1 AND        \n                           MIN(IFNULL(Customer_Contract_Standing_Rate_Matches_Charge_Mandate_Standing_Rate,0)) = 1 AND \n                             MIN(IFNULL(Customer_Contracts_Do_Not_Overlap,0)) = 1 AND                          \n                               MIN(IFNULL(Charge_Mandate_Has_Customer_Contract,0)) = 1 AND \n                                  MIN(IFNULL(Active_Supply_Point_Has_Exactly_1_Customer_Contract,0)) = 1 AND \n                                     MIN(IFNULL(Contracts_Are_Correct_Length,0)) = 1 THEN 1\n                ELSE 0\n             END) = 1 THEN 'Healthy Supply Points'\n    ELSE 'Unhealthy Supply Points'\n  END Contracts_Health_Category,\n  Migrated_Date,\n  Supply_Lifecycle\nFROM\n  `data-engineering-prod.product_orion.health_check_contracts_detail_refreshed_hourly`\nGROUP BY\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Migrated_Date,\n  Supply_Lifecycle"},"data-engineering-prod:product_orion.health_check_contracts_detail_live":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_contracts_detail_live","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts_detail_live","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts_detail_live","table_id":"health_check_contracts_detail_live","time_partitioning":null,"view_query":"WITH orion_all_contracts AS\n (\n SELECT DISTINCT\n A.Account_No,\n A.Meter_Point_No,\n A.Fuel_Type,\n C.StartDate            AS Customer_Contract_Start_Date,\n C.ExpiryDate           AS Customer_Contract_End_Date,\n ROUND(C.unitRate,4)    AS Customer_Contract_Unit_Rate,\n C.standingRate         AS Customer_Contract_Standing_Rate,\n C.energyContractId     AS Contract_Id,\n A.Migrated_Date,\n A.Supply_Lifecycle\n FROM\n `data-engineering-prod.product_orion.account_supply_points` A\n INNER JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` C ON A.Account_No = SUBSTR(C.serviceAccountId,1,7) AND A.Meter_Point_No = C.mpxn\n ),\n \n pre_final AS\n (\n SELECT\n OA.Account_No,\n OA.Meter_Point_No,\n OA.Fuel_Type, \n OA.Contract_Id,\n OA.Migrated_Date,\n OA.Customer_Contract_Start_Date,\n OA.Customer_Contract_End_Date,\n OA.Customer_Contract_Unit_Rate,\n OA.Customer_Contract_Standing_Rate,\n EC.unitRate      AS Charge_Mandate_Unit_Rate,\n EC.standingRate  AS Charge_Mandate_Standing_Rate,\n EC.startDate     AS Charge_Mandate_Start_Date,\n EC.endDate       AS Charge_Mandate_End_Date,\n CASE\n WHEN (CASE\n WHEN OA.Customer_Contract_Start_Date > OA.Migrated_Date THEN OA.Customer_Contract_Start_Date\n ELSE OA.Migrated_Date\n END) >= EC.startdate AND (CASE\n WHEN LJ.Expected_Loss_Date < OA.Customer_Contract_End_Date THEN LJ.Expected_Loss_Date\n ELSE OA.Customer_Contract_End_Date\n END) <= EC.enddate THEN 1\n ELSE 0\n END AS Charge_Mandate_Present_On_Customer_Contract_Day,\n COUNT(DISTINCT EC.contractId) AS Number_Of_Active_Charge_Mandates,\n CASE\n WHEN EC.contractId IS NULL THEN 1\n WHEN (CASE\n WHEN LJ.Expected_Loss_Date < OA.Customer_Contract_End_Date THEN LJ.Expected_Loss_Date\n ELSE OA.Customer_Contract_End_Date\n END) = EC.endDate THEN 1\n ELSE 0\n END AS Customer_Contract_End_Date_Matches_Charge_Mandate_End_Date,\n CASE\n WHEN EC.contractId IS NULL THEN 1\n WHEN OA.Customer_Contract_Unit_Rate = EC.UnitRate THEN 1\n ELSE 0\n END AS Customer_Contract_Unit_Rate_Matches_Charge_Mandate_Unit_Rate,\n CASE\n WHEN EC.contractId IS NULL THEN 1\n WHEN OA.Customer_Contract_Standing_Rate = EC.StandingRate THEN 1\n ELSE 0\n END AS Customer_Contract_Standing_Rate_Matches_Charge_Mandate_Standing_Rate\n FROM\n orion_all_contracts OA\n LEFT JOIN `data-engineering-prod.product_andromeda_secure.charge_mandates` EC ON EC.contractId = OA.Contract_ID\n LEFT JOIN `data-engineering-prod.product_orion.loss_journeys` LJ ON OA.Meter_Point_No = LJ.Meter_Point_No\n GROUP BY\n OA.Account_No,\n OA.Meter_Point_No,\n OA.Fuel_Type,\n OA.Contract_ID,\n OA.Customer_Contract_Start_Date,\n OA.Customer_Contract_End_Date,\n OA.Customer_Contract_Unit_Rate,\n OA.Customer_Contract_Standing_Rate,\n OA.Migrated_Date, \n EC.unitRate,\n EC.standingRate,\n EC.startDate,\n EC.endDate,\n CASE\n WHEN (CASE\n WHEN OA.Customer_Contract_Start_Date > OA.Migrated_Date THEN OA.Customer_Contract_Start_Date\n ELSE OA.Migrated_Date\n END) >= EC.startdate AND (CASE\n WHEN LJ.Expected_Loss_Date < OA.Customer_Contract_End_Date THEN LJ.Expected_Loss_Date\n ELSE OA.Customer_Contract_End_Date\n END) <= EC.enddate THEN 1\n ELSE 0\n END,\n CASE\n WHEN EC.contractId IS NULL THEN 1\n WHEN (CASE\n WHEN LJ.Expected_Loss_Date < OA.Customer_Contract_End_Date THEN LJ.Expected_Loss_Date\n ELSE OA.Customer_Contract_End_Date\n END) = EC.endDate THEN 1\n ELSE 0\n END,\n CASE\n WHEN EC.contractId IS NULL THEN 1\n WHEN OA.Customer_Contract_Unit_Rate = EC.UnitRate THEN 1\n ELSE 0\n END,\nCASE\n WHEN EC.contractId IS NULL THEN 1\n WHEN OA.Customer_Contract_Standing_Rate = EC.StandingRate THEN 1\n ELSE 0\n END\n )\n  \n #check that only 1 OREX customer contract is active at any one time per customer per meter point\n ,\n non_overlapping AS\n (\n SELECT \n SUBSTR(OR1.serviceAccountId,1,7) AS Account_No,\n OR1.mpxn AS Meter_Point_No,\n OR1.fuel AS Fuel_Type,\n CASE\n WHEN SUBSTR(OR2.serviceAccountId,1,7) IS NULL THEN 1\n ELSE 0\n END AS Customer_Contracts_Do_Not_Overlap,\n OR1.energyContractId AS Contract_Id,\n MIN(OR2.energyContractId) AS Overlapping_Contract_Id\n FROM\n `data-engineering-prod.raw_orex_secure.orex_customer_contract` OR1\n LEFT JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` OR2 ON SUBSTR(OR1.serviceAccountId,1,7) = SUBSTR(OR2.serviceAccountId,1,7) \n AND OR1.mpxn = OR2.mpxn \n AND (OR2.StartDate BETWEEn OR1.StartDate AND OR1.expiryDate \n OR OR2.expiryDate BETWEEN OR1.StartDate AND OR1.expiryDate)\n AND OR2.energyContractId <> OR1.energyContractId \n GROUP BY\n SUBSTR(OR1.serviceAccountId,1,7),\n OR1.mpxn,\n OR1.fuel,\n CASE\n WHEN SUBSTR(OR2.serviceAccountId,1,7) IS NULL THEN 1\n ELSE 0\n END,\n OR1.energyContractId\n ),\n \n #check that there aren't any energy contracts without a corresponding orex customer contract\n \n orphan_energy_contract AS\n (\n SELECT\n dt.Calendar_Date,\n SUBSTR(o.serviceAccountId,1,7) AS Account_No,\n ec.mpxn AS Meter_Point_No,\n ec.fuel AS Fuel_Type,\n ec.startDate As Charge_Mandate_Start_Date,\n ec.endDate AS Charge_Mandate_End_Date,\n ec.contractID AS Contract_Id,\n CASE\n WHEN o.serviceAccountId IS NOT NULL THEN 1\n ELSE 0\n END Charge_Mandate_Is_Not_Orphaned\n FROM\n `data-engineering-prod.product_andromeda_secure.charge_mandates` ec\n INNER JOIN `data-engineering-prod.reference.tbl_Date` dt ON dt.Calendar_Date BETWEEN ec.startDate AND ec.endDate\n LEFT JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` o on ec.mpxn = o.mpxn \n AND ec.startDate BETWEEN o.startDate AND o.expiryDate\n ),\n \n orex_cust_contract AS\n (\n SELECT\n pf.Account_No,\n pf.Meter_Point_No,\n pf.Fuel_Type,\n pf.Contract_Id,\n n.Overlapping_Contract_Id,\n pf.Migrated_Date,\n pf.Customer_Contract_Start_Date,\n pf.Customer_Contract_End_Date,\n pf.Charge_Mandate_Start_Date,\n pf.Charge_Mandate_End_Date,\n pf.Customer_Contract_Unit_Rate,\n pf.Customer_Contract_Standing_Rate,\n pf.Charge_Mandate_Unit_Rate,\n pf.Charge_Mandate_Standing_Rate,\n CASE\n WHEN pf.Charge_Mandate_Present_On_Customer_Contract_Day = 1 AND pf.Number_Of_Active_Charge_Mandates = 1 THEN 1\n WHEN n.Customer_Contracts_Do_Not_Overlap = 0 THEN 1\n ELSE 0\n END AS Exactly_1_Charge_Mandate_Present_On_Customer_Contract_Day,\n pf.Customer_Contract_End_Date_Matches_Charge_Mandate_End_Date,\n pf.Customer_Contract_Unit_Rate_Matches_Charge_Mandate_Unit_Rate,\n pf.Customer_Contract_Standing_Rate_Matches_Charge_Mandate_Standing_Rate,\n n.Customer_Contracts_Do_Not_Overlap\n FROM\n pre_final pf\n LEFT JOIN non_overlapping n on pf.Contract_ID = n.Contract_ID\n ),\n \n active_acc_contract AS\n (\n SELECT \n O.Account_No,\n O.Migrated_Date,\n O.Meter_Point_No,\n O.Supply_Lifecycle,\n CASE\n WHEN COUNT(DISTINCT C.energycontractid) = 1 THEN 1 \n ELSE 0 \n END Active_Supply_Point_Has_Exactly_1_Customer_Contract\n FROM \n `data-engineering-prod.product_orion.account_supply_points` O\n LEFT JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` C ON O.Account_No = SUBSTR(C.serviceaccountid,1,7) AND O.Meter_Point_No = C.mpxn AND CURRENT_DATE() BETWEEN C.startDate AND C.expiryDate\n GROUP BY\n O.Account_No,\n O.Migrated_Date,\n O.Meter_Point_No,\n O.Supply_Lifecycle\n ),\n \n contract_length AS\n (\n SELECT \n SUBSTR(serviceaccountid,1,7) AS Account_No,\n mpxn,\n C.energycontractid AS Contract_ID,\n MIN(CASE\n WHEN LJ.Expected_Loss_Date IS NOT NULL THEN 1\n WHEN DATE_ADD(DATE_ADD(startdate,interval 2 year),interval -1 day) = expiryDate THEN 1\n WHEN DATE_ADD(DATE_ADD(startdate,interval 1 year),interval -1 day) = expiryDate THEN 1\n ELSE 0\n END) Contracts_Are_Correct_Length\n FROM\n `data-engineering-prod.raw_orex_secure.orex_customer_contract` C\n LEFT JOIN `data-engineering-prod.product_orion.loss_journeys` LJ ON C.mpxn = LJ.meter_point_no\n GROUP BY\n serviceaccountid,\n mpxn,\n C.energycontractid\n )\n \n SELECT DISTINCT\n   oa.Account_No,\n   oa.Meter_Point_No, \n   oa.Fuel_Type,\n   oa.Migrated_Date,\n   oa.Supply_Lifecycle,\n   oa.Contract_Id,\n   o.Overlapping_Contract_Id,\n   oa.Customer_Contract_Start_Date,\n   oa.Customer_Contract_End_Date,\n   o.Charge_Mandate_Start_Date,\n   o.Charge_Mandate_End_Date,\n   o.Exactly_1_Charge_Mandate_Present_On_Customer_Contract_Day,\n   o.Customer_Contract_End_Date_Matches_Charge_Mandate_End_Date,\n   o.Customer_Contract_Unit_Rate_Matches_Charge_Mandate_Unit_Rate,\n   o.Customer_Contract_Standing_Rate_Matches_Charge_Mandate_Standing_Rate,\n   o.Customer_Contracts_Do_Not_Overlap,\n   IFNULL(c.Charge_Mandate_Is_Not_Orphaned,1) AS Charge_Mandate_Has_Customer_Contract,\n   a.Active_Supply_Point_Has_Exactly_1_Customer_Contract,\n   l.Contracts_Are_Correct_Length\n FROM\n            orion_all_contracts     oa \n LEFT JOIN  orex_cust_contract      o ON oa.Contract_Id = o.Contract_Id\n LEFT JOIN  orphan_energy_contract  c ON oa.Contract_Id = c.Contract_Id \n LEFT JOIN  active_acc_contract     a ON oa.Account_No = a.Account_No \n LEFT JOIN  contract_length         l ON oa.Contract_Id = l.Contract_Id \n ORDER BY\n oa.Account_No"},"data-engineering-prod:product_orion.health_check_contracts_detail_refreshed_hourly":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_contracts_detail_refreshed_hourly","location":"EU","num_bytes":9277051,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts_detail_refreshed_hourly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts_detail_refreshed_hourly","table_id":"health_check_contracts_detail_refreshed_hourly","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_contracts_snapshots":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_contracts_snapshots","location":"EU","num_bytes":2354508635,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_contracts_snapshots","table_id":"health_check_contracts_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_online_discount":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_online_discount","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount","table_id":"health_check_online_discount","time_partitioning":null,"view_query":"WITH onlinedisc_final AS\n(\nSELECT\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Migrated_Date,\n  Supply_Lifecycle,\n  MIN(Online_Discount_Transaction_For_Each_Standing_Charge) AS Online_Discount_Transaction_For_Each_Standing_Charge,\n  MIN(Balance_Update_Triggered) AS Balance_Update_Triggered,\n  MIN(Online_Discount_Amount_And_Balance_Update_Match) AS Online_Discount_Amount_And_Balance_Update_Match,\n  MIN(CASE\n        WHEN Online_Discount_Transaction_For_Each_Standing_Charge = 1 AND Balance_Update_Triggered = 1 AND Online_Discount_Amount_And_Balance_Update_Match = 1 THEN 1\n        ELSE 0\n      END) Healthy_On_Online_Discount\nFROM\n  `data-engineering-prod.product_orion.health_check_online_discount_detail_refreshed_hourly` \nGROUP BY\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Migrated_Date,\n  Supply_Lifecycle\n)\n\nSELECT\n  Account_No,\n  Meter_Point_No,\n  Fuel_Type,\n  Online_Discount_Transaction_For_Each_Standing_Charge,\n  Balance_Update_Triggered,\n  Online_Discount_Amount_And_Balance_Update_Match,\n  CASE\n    WHEN Healthy_On_Online_Discount = 1 THEN 'Healthy Supply Points'\n    ELSE 'Unhealthy Supply Points'\n  END Online_Discount_Health_Category,\n  Migrated_Date,\n  Supply_Lifecycle\nFROM\n  onlinedisc_final"},"data-engineering-prod:product_orion.health_check_online_discount_detail_live":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_online_discount_detail_live","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount_detail_live","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount_detail_live","table_id":"health_check_online_discount_detail_live","time_partitioning":null,"view_query":"WITH balance_updates as\n (\n select\n transactionId,\n accountId,\n type AS transaction_type,\n amount AS transaction_amount,\n balance AS new_balance_amount,\n balanceUpdateTime\n from\n `data-engineering-prod.raw_orex_secure.orex_balance_updated` \n )\n \n SELECT\n A.Account_No,\n A.Meter_Point_No,\n A.Fuel_Type,\n CM.Charge_Id,\n OD.Date_Online_Discount_Applies_To,\n CAST(OD.Online_Discount_Amount AS FLOAT64)    AS Online_Discount_Amount,\n cast(BU.transaction_amount AS FLOAT64)        AS Transaction_Amount,\n CASE\n    WHEN OD.Account_No IS NOT NULL THEN 1\n    ELSE 0\n END AS Online_Discount_Transaction_For_Each_Standing_Charge,\n case \n    when OD.Account_No IS NULL THEN 1\n    WHEN BU.transactionId is NOT NULL THEN 1 \n    else 0\n end AS Balance_Update_Triggered,\n case \n    when OD.Account_No IS NULL THEN 1\n    when BU.transactionId is NULL THEN 1\n    ELSE (CASE \n              WHEN cast(BU.transaction_amount AS FLOAT64) = CAST(OD.Online_Discount_Amount AS FLOAT64) then 1 \n              else 0\n            end)\n END AS Online_Discount_Amount_And_Balance_Update_Match,\n A.Migrated_Date,\n A.Supply_Lifecycle\n FROM \n            `data-engineering-prod.product_orion.account_supply_points`       a\n INNER JOIN `data-engineering-prod.raw_orex_secure.orex_account_state`        O  ON A.Account_No = SUBSTR(O.accountid,1,7) AND O.hasOnlineDiscount = true\n INNER JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract`    cc ON a.Meter_Point_No = cc.mpxn AND a.Account_No = SUBSTR(cc.serviceaccountid,1,7)\n INNER JOIN `data-engineering-prod.product_andromeda_secure.standing_charges` CM ON CC.energyContractId = CM.contract_Id\n LEFT JOIN  `data-engineering-prod.product_orion.online_discount`             OD ON OD.Charge_Id = CM.Charge_Id\n LEFT JOIN  balance_updates                                                   BU ON OD.Charge_Id = BU.transactionId AND BU.transaction_type = 'online_discount'"},"data-engineering-prod:product_orion.health_check_online_discount_detail_refreshed_hourly":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_online_discount_detail_refreshed_hourly","location":"EU","num_bytes":6303633703,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount_detail_refreshed_hourly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount_detail_refreshed_hourly","table_id":"health_check_online_discount_detail_refreshed_hourly","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_online_discount_snapshots":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_online_discount_snapshots","location":"EU","num_bytes":2468850883,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_online_discount_snapshots","table_id":"health_check_online_discount_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_payments":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_payments","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments","table_id":"health_check_payments","time_partitioning":null,"view_query":"SELECT\n  Account_No,\n  MIN(Direct_Debit_Set_Up)                                AS Direct_Debit_Set_Up,\n  MIN(Latest_DD_Payment_Did_Not_Fail)                     AS Latest_DD_Payment_Did_Not_Fail,\n  MIN(Confirmed_DD_Payments_Match_Balance_Updates)        AS All_Confirmed_DD_Payments_Match_Balance_Updates,\n  MIN(Refund_Triggered_Balance_Update)                    AS All_Refunds_Have_Corresponding_Balance_Update,\n  MIN(Refund_Amount_Matches_Balance_Update_Amount)        AS All_Refund_Amounts_Match_Balance_Update_Amounts,\n  MIN(Card_Payment_Triggered_Balance_Update)              AS All_Card_Payments_Have_Corresponding_Balance_Update,\n  MIN(Card_Payment_Amount_Matches_Balance_Update_Amount)  AS All_Card_Payment_Amounts_Match_Balance_Update_Amounts,\n  CASE\n    WHEN MIN(Direct_Debit_Set_Up) = 1 \n      AND MIN(Latest_DD_Payment_Did_Not_Fail) = 1 \n        AND MIN(Confirmed_DD_Payments_Match_Balance_Updates) = 1 \n          AND MIN(Refund_Triggered_Balance_Update) = 1\n            AND MIN(Refund_Amount_Matches_Balance_Update_Amount) = 1\n              AND MIN(Card_Payment_Triggered_Balance_Update) = 1\n                AND MIN(Card_Payment_Amount_Matches_Balance_Update_Amount) = 1 THEN 'Healthy Accounts'\n    ELSE 'Unhealthy Accounts'\n  END Payment_Health_Category,\n  Migrated_Date,\n  Account_Supply_Lifecycle\nFROM\n  `data-engineering-prod.product_orion.health_check_payments_detail_refreshed_hourly`\nGROUP BY\n  Account_No,\n  Migrated_Date,\n  Account_Supply_Lifecycle"},"data-engineering-prod:product_orion.health_check_payments_detail_live":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_payments_detail_live","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments_detail_live","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments_detail_live","table_id":"health_check_payments_detail_live","time_partitioning":null,"view_query":"WITH latest_transaction AS\n (\n WITH latest_submitted AS\n (\n SELECT\n transactionid,\n SUBSTR(serviceaccountid,1,7) AS Account_No,\n chargedate,\n row_number() over (partition by serviceaccountid order by chargedate desc) RN\n FROM \n `data-engineering-prod.raw_payments_secure.payments_paymentEvent`\n where \n status = 'submitted'\n and chargeDate >= '2018-03-26'\n )\n SELECT \n transactionid,\n Account_No,\n chargedate\n FROM \n latest_submitted \n WHERE\n RN = 1\n ),\n \n#did the refund result in a balance update?\nrefunds AS \n(\nSELECT\n  SUBSTR(R.serviceaccountid,1,7)      as Account_No,\n  R.transactionId                     AS Refund_Transaction_Id,  \n  CAST(R.refundexpecteddate AS DATE)  AS Refund_Expected_Date,\n  R.amount\/100                        AS Refund_Amount,\n  CASE\n    WHEN B.transactionid IS NOT NULL THEN 1\n    ELSE 0\n  END                                 AS Refund_Triggered_Balance_Update,\n  CASE\n    WHEN B.transactionid IS NULL THEN 1\n    WHEN R.amount\/100 = B.amount THEN 1\n    ELSE 0\n  END                                 AS Refund_Amount_Matches_Balance_Update_Amount\nFROM\n            `data-engineering-prod.raw_payments_secure.payments_refund_statusUpdated` R\n  LEFT JOIN `data-engineering-prod.raw_orex_secure.orex_balance_updated`              B ON R.transactionId = B.transactionId\nwhere\n  R.status = 'submitted'\n)\n,\n#did the card payment result in a balance update?\ncard_payments AS\n(  \nSELECT\n  SUBSTR(C.serviceaccountid,1,7)        as Account_No,\n  C.transactionId                       AS Card_Payment_Transaction_Id,                    \n  C.amount\/100                          AS Card_Payment_Amount,\n  C.paymenttakendate                    AS Payment_Taken_Datetime,\n  CASE\n    WHEN B.transactionid IS NOT NULL THEN 1\n    ELSE 0\n  END                                   AS Card_Payment_Triggered_Balance_Update,\n  CASE\n    WHEN B.transactionid IS NULL THEN 1\n    WHEN C.amount\/100 = B.amount THEN 1\n    ELSE 0\n  END                                   AS Card_Payment_Amount_Matches_Balance_Update_Amount\nFROM\n            `data-engineering-prod.raw_payments_secure.payments_card_paymentExecuted` C\n  LEFT JOIN `data-engineering-prod.raw_orex_secure.orex_balance_updated`              B ON C.transactionId = B.transactionId\n)\n  \n \n SELECT DISTINCT\n  o.Account_No,\n  s.Subscription_ID,\n  c.transactionid               AS Confirmed_DD_Payment_Transaction_Id,\n  f.transactionid               AS Latest_Submitted_DD_Payment_Transaction_Id,\n  ref.Refund_Transaction_Id,\n  cp.Card_Payment_Transaction_Id,\n  CAST(c.amount\/100 AS FLOAT64) AS Confirmed_DD_Payment_Amount,\n  ref.Refund_Amount,\n  cp.Card_Payment_Amount,\n  CASE\n    WHEn s.Account_No IS NOT NULL THEN 1\n    ELSE 0\n  END                           AS Direct_Debit_Set_Up,\n  CASE\n    WHEn s.Account_No IS NULL THEN 1\n    WHEN f.transactionid IS NOT NULL THEN 0\n  ELSE 1\n  END                           AS Latest_DD_Payment_Did_Not_Fail,\n  CASE\n    WHEn s.Account_No IS NULL THEN 1\n    WHEN c.transactionid is null THEN 1\n    WHEN CAST(c.amount\/100 AS FLOAT64) = CAST(b.amount AS FLOAT64) THEN 1 \n  ELSE 0\n  END                           AS Confirmed_DD_Payments_Match_Balance_Updates,\n  CASE\n    WHEN ref.account_no is null THEN 1\n    ELSE ref.Refund_Triggered_Balance_Update\n  END                           AS Refund_Triggered_Balance_Update,\n  CASE\n    WHEN ref.account_no is null THEN 1\n    ELSE ref.Refund_Triggered_Balance_Update\n  END                           AS Refund_Amount_Matches_Balance_Update_Amount,\n  CASE\n    WHEN cp.account_no is null THEN 1\n    ELSE cp.Card_Payment_Triggered_Balance_Update\n  END                           AS Card_Payment_Triggered_Balance_Update,\n  CASE\n    WHEN cp.account_no is null THEN 1\n    ELSE cp.Card_Payment_Amount_Matches_Balance_Update_Amount\n  END                           AS Card_Payment_Amount_Matches_Balance_Update_Amount,\n  o.Migrated_Date,\n  o.Account_Supply_Lifecycle\n FROM\n            `data-engineering-prod.product_orion.accounts`                      o\n INNER JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract`      ct  ON O.Account_No = SUBSTR(ct.serviceaccountid,1,7)\n LEFT join  `data-engineering-prod.product_payments.subscriptions`              s   on s.Account_No = o.Account_No AND s.Is_Active_Subscription = 1\n LEFT JOIN  latest_transaction                                                  l   ON o.Account_No = l.Account_No \n LEFT JOIN  `data-engineering-prod.raw_payments_secure.payments_paymentEvent`   f   ON l.transactionid = f.transactionid and f.status = 'failed' and f.chargeDate >= '2018-03-26'\n LEFT JOIN  `data-engineering-prod.raw_payments_secure.payments_paymentEvent`   c   ON o.Account_No = SUBSTR(c.serviceaccountid,1,7) and c.status = 'confirmed' and c.chargeDate >= '2018-03-26'\n LEFT JOIN  `data-engineering-prod.raw_orex_secure.orex_balance_updated`        b   ON c.transactionid = b.transactionid \n LEFT JOIN  refunds                                                             ref ON o.Account_No = ref.Account_No\n LEFT JOIN  card_payments                                                       cp  ON o.Account_No = cp.Account_No\n WHERE\n  o.Migrated_Date IS NOT NULL\n ORDER BY\n  o.Account_No,\n  s.Subscription_ID,\n  c.transactionid"},"data-engineering-prod:product_orion.health_check_payments_detail_refreshed_hourly":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_payments_detail_refreshed_hourly","location":"EU","num_bytes":48093548,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments_detail_refreshed_hourly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments_detail_refreshed_hourly","table_id":"health_check_payments_detail_refreshed_hourly","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.health_check_payments_snapshots":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.health_check_payments_snapshots","location":"EU","num_bytes":2007451851,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/health_check_payments_snapshots","table_id":"health_check_payments_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.logins":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.logins","location":"EU","num_bytes":13610197,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/logins","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/logins","table_id":"logins","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.loss_journeys":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.loss_journeys","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/loss_journeys","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/loss_journeys","table_id":"loss_journeys","time_partitioning":null,"view_query":"SELECT\n  SP.Account_No,\n  L.mpxn                          AS Meter_Point_No,\n  SP.Fuel_Type,\n  SP.Migrated_Date,\n  L.lossNotificationReceivedDate  AS Loss_Notification_Received_Date,\n  L.lossDate                      AS Expected_Loss_Date,\n  L.lossConfirmationReceivedDate  AS Loss_Confirmation_Received_Date,\n  L.lossCompletionReceivedDate    AS Loss_Completion_Received_Date,\n  L.lossJourneyStatus             AS Loss_Journey_Status,\n  L.finalReadingType              as Final_Reading_Type,\n  L.finalReadingUnits             as Final_Reading_Units\nFROM\n             `data-engineering-prod.product_andromeda_secure.loss_journeys`          L\ninner join   `data-engineering-prod.product_orion.account_supply_points`             SP on l.mpxn = sp.Meter_Point_No\n                                                                                       and l.lossNotificationReceivedDate >= sp.Migrated_Date"},"data-engineering-prod:product_orion.migration_targets":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.migration_targets","location":"EU","num_bytes":96,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/migration_targets","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/migration_targets","table_id":"migration_targets","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.migration_volumes":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.migration_volumes","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/migration_volumes","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/migration_volumes","table_id":"migration_volumes","time_partitioning":null,"view_query":"with migrations as(select ms.Account_No,\n                        ms.Migrated_Date,\n                        cast(rs.ReverseMigrationActionedAt as Date) as Reverse_Migrated_Date,\n                        l.Account_Supply_End_Date\n                    from `data-engineering-prod.raw_orion_migration.orion_migration_success` ms\n                    left join `data-engineering-prod.landing_orion_migration_secure.orion_migration_reverse_success_v1` rs on rs.accountId = ms.Account_No\n                    inner join `data-engineering-prod.reporting_mart.v_Account_Snapshots_Data_Mart_Latest` l on l.account_no = ms.account_no),\n\ndate_totals as (SELECT d.calendar_date,\n  count(distinct a.account_no) as Migrated_Accounts,\n  count(Distinct case when ifnull(account_supply_end_date,'2999-01-01')>d.calendar_date then a.account_no else null end) as Live_Migrated_Accounts\n--  ,\n--  count(distinct case when Account_Supply_Lifecycle = 'live (excluding loss)' then a.account_no else null end) as Live_Accounts\nFROM `data-engineering-prod.reference.tbl_Date` d\ninner join migrations a on d.calendar_date between a.migrated_date and ifnull(date_add(a.reverse_migrated_date, interval -1 day) ,'2999-01-01')\nwhere d.calendar_date<=current_date()\ngroup by d.calendar_date)\n\nselect ifnull(dt.calendar_date, mt.date) as calendar_date,\n  Migrated_Accounts,\n  Live_Migrated_Accounts,\n  --Live_Accounts,\n  Target\nfrom date_totals dt\nfull outer join `data-engineering-prod.product_orion.migration_targets` mt on mt.date=dt.calendar_date"},"data-engineering-prod:product_orion.online_discount":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.online_discount","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/online_discount","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/online_discount","table_id":"online_discount","time_partitioning":null,"view_query":"WITH od_created AS\n  (\n  WITH dedupe AS\n  (\n  SELECT\n    CreatedOnlineDiscountAccountId                        AS Account_Id,\n    netDiscount\/100                                       AS Discount_Amount, \n    discountDay                                           AS Date_Online_Discount_Applies_To,\n    CreatedOnlineDiscountStandingChargeId                 AS Charge_Id,\n    createdat                                             AS Latest_Created_Event_Datetime,\n    ROW_NUMBER() OVER (PARTITION BY CreatedOnlineDiscountStandingChargeId  ORDER BY createdAt DESC) AS RN\n  FROM \n    `data-engineering-prod.raw_orex_secure.orex_online_discount`\n  WHERE\n    CreatedOnlineDiscountStandingChargeId IS NOT NULL\n  )\n  SELECT * EXCEPT (RN) FROM dedupe WHERE RN = 1\n  )\n,\n  \n  od_cancelled AS\n  (\n  SELECT\n    CancelledOnlineDiscountStandingChargeId               AS Charge_Id,\n    MAX(createdAt)                                        AS Latest_Cancelled_Event_Datetime\n  FROM \n    `data-engineering-prod.raw_orex_secure.orex_online_discount`\n  WHERE\n    CancelledOnlineDiscountStandingChargeId IS NOT NULL\n  GROUP BY\n    CancelledOnlineDiscountStandingChargeId\n  )\n  \nselect \n    od_created.Account_Id AS Account_No,\n    od_created.Charge_Id,\n    od_created.Discount_Amount AS Online_Discount_Amount,\n    od_created.Date_Online_Discount_Applies_To\nfrom    \n            od_created\nleft join   od_cancelled on od_cancelled.Charge_Id = od_created.Charge_Id\n                         and Latest_Cancelled_Event_Datetime > Latest_Created_Event_Datetime\nwhere \n    od_created.Charge_Id is not null\n    AND od_cancelled.Charge_Id is null"},"data-engineering-prod:product_orion.price_cap_rates":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.price_cap_rates","location":"EU","num_bytes":7920,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/price_cap_rates","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/price_cap_rates","table_id":"price_cap_rates","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.touchpoints":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.touchpoints","location":"EU","num_bytes":3507763,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/touchpoints","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/touchpoints","table_id":"touchpoints","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion.upcoming_events":{"clustering_fields":null,"dataset_id":"product_orion","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion.upcoming_events","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/upcoming_events","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion\/tables\/upcoming_events","table_id":"upcoming_events","time_partitioning":null,"view_query":"WITH annual_statement AS\n(\nSELECT\n  Account_No,\n  Migrated_Date,\n  CAST(Interest_Reward_Start_Date AS DATE) As Supply_Start_Date,\n  CASE\n\t\t\tWHEN CAST(CURRENT_DATE() AS DATE) > DATE_ADD(CAST(Interest_Reward_Start_Date AS DATE), INTERVAL DATE_DIFF(CAST(CURRENT_DATE() AS DATE),CAST(Interest_Reward_Start_Date AS DATE),YEAR) YEAR) THEN DATE_ADD(CAST(Interest_Reward_Start_Date AS DATE), INTERVAL DATE_DIFF(CAST(CURRENT_DATE() AS DATE),CAST(Interest_Reward_Start_Date AS DATE),YEAR)+1 YEAR)\n\t\t\tELSE DATE_ADD(CAST(Interest_Reward_Start_Date AS DATE),INTERVAL DATE_DIFF(CAST(CURRENT_DATE() AS DATE),CAST(Interest_Reward_Start_Date AS DATE),YEAR) YEAR)\n\tEND Next_Anniversary_Date\nfrom \n   `data-engineering-prod.product_orion.accounts` \nWHERE\n  status = 'active'\n),\n\nrenewal AS\n(\nSELECT DISTINCT\n    SUBSTR(serviceAccountID,1,7)            AS Account_No,\n    expiryDate                              AS Renewal_Due_Date\nFROM\n    `data-engineering-prod.raw_orex_secure.orex_customer_contract` \nWHERE\n    CURRENT_DATE() BETWEEN startDate AND expiryDate\n)\n\nSELECT\n  Account_No,\n  'Annual Statement Due' AS Event_Name,\n  Next_Anniversary_Date AS Event_Date,\n  DATE_DIFF(Next_Anniversary_Date,CURRENT_DATE(),DAY) AS Days_To_Event\nFROM\n  annual_statement\nUNION ALL\nSELECT\n  Account_No,\n  'Renewal Due' AS Event_Name,\n  Renewal_Due_Date AS Event_Date,\n  DATE_DIFF(Renewal_Due_Date,CURRENT_DATE(),DAY) AS Days_To_Event\nFROM\n  renewal\nUNION ALL\nSELECT\n  Account_No,\n  'Renewal Window Opens' AS Event_Name,\n  DATE_ADD(Renewal_Due_Date, INTERVAL -49 DAY) AS Event_Date,\n  DATE_DIFF(DATE_ADD(Renewal_Due_Date, INTERVAL -49 DAY),CURRENT_DATE(),DAY) AS Days_To_Event\nFROM\n  renewal\nORDER BY\n  Account_No\n  \n  "},"data-engineering-prod:product_orion_secure.DCC_EA_eligibility":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.DCC_EA_eligibility","location":"EU","num_bytes":638784,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/DCC_EA_eligibility","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/DCC_EA_eligibility","table_id":"DCC_EA_eligibility","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.DataConsumptionDateGaps":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.DataConsumptionDateGaps","location":"EU","num_bytes":27558459,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/DataConsumptionDateGaps","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/DataConsumptionDateGaps","table_id":"DataConsumptionDateGaps","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.DataConsumptionReadGaps":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.DataConsumptionReadGaps","location":"EU","num_bytes":2699652339,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/DataConsumptionReadGaps","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/DataConsumptionReadGaps","table_id":"DataConsumptionReadGaps","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.Data_Duplicate_Charges":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.Data_Duplicate_Charges","location":"EU","num_bytes":183292,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/Data_Duplicate_Charges","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/Data_Duplicate_Charges","table_id":"Data_Duplicate_Charges","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.Data_Uncharged_Supply_Points":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.Data_Uncharged_Supply_Points","location":"EU","num_bytes":2712370,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/Data_Uncharged_Supply_Points","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/Data_Uncharged_Supply_Points","table_id":"Data_Uncharged_Supply_Points","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.Reporting_Renewals":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.Reporting_Renewals","location":"EU","num_bytes":214708,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/Reporting_Renewals","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/Reporting_Renewals","table_id":"Reporting_Renewals","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.account_comms_preference":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.account_comms_preference","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_comms_preference","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_comms_preference","table_id":"account_comms_preference","time_partitioning":null,"view_query":"WITH commsPref AS (\n    SELECT DISTINCT accountId as Account_No\n    FROM `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated`\n    CROSS JOIN UNNEST(accountCommsPreference) as Comms\n    WHERE Comms = 'POST'\n)\n\nSELECT DISTINCT a.Account_No,\n       IF(cp.Account_No IS NOT NULL,'Post','Email') as commsPref,\nFROM `data-engineering-prod.product_orion.accounts` a\nLEFT JOIN commsPref cp USING (Account_No)"},"data-engineering-prod:product_orion_secure.account_primary_customer_details":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.account_primary_customer_details","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_primary_customer_details","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_primary_customer_details","table_id":"account_primary_customer_details","time_partitioning":null,"view_query":"WITH\n  cte_latest_address AS (\n  SELECT\n    user.id,\n    user.givenName,\n    user.familyName,\n    user.title,\n    user.address,\n    ROW_NUMBER() OVER(PARTITION BY user.id ORDER BY metadata.createdAt DESC) AS ROW\n  FROM\n    `data-engineering-prod.landing_identity_secure.identity_user_v1` )\nSELECT\n  accountId,\n  customerId,\n  title,\n  givenName,\n  familyName,\n  address\nFROM\n  `data-engineering-prod.product_orion_secure.active_account_customer_bindings` cb\nLEFT JOIN cte_latest_address add ON cb.customerId = add.id\nWHERE\n  isPrimaryCustomer = TRUE\n  AND ROW = 1"},"data-engineering-prod:product_orion_secure.account_renewal_window_journeys_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.account_renewal_window_journeys_extract","location":"EU","num_bytes":14929028,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_renewal_window_journeys_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_renewal_window_journeys_extract","table_id":"account_renewal_window_journeys_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.account_supply_point_contract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.account_supply_point_contract","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_supply_point_contract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/account_supply_point_contract","table_id":"account_supply_point_contract","time_partitioning":null,"view_query":"WITH\n  cte_orion_customer_contracts AS (\n  WITH\n    cte_contract_dedupe AS (\n    SELECT\n      *,\n      startDate AS contractStartDate,\n      expiryDate AS contractExpiryDate,\n      ROW_NUMBER() OVER (PARTITION BY energyContractId ORDER BY createdAt DESC) AS contract_dedupe_rownum\n    FROM\n      `data-engineering-prod.raw_orex_secure.orex_customer_contract` )\n  SELECT\n    *\n  FROM\n    cte_contract_dedupe\n  WHERE\n    contract_dedupe_rownum = 1 ),\n  cte_losses AS (\n  WITH\n    cte_loss_dedupe AS (\n    SELECT\n      mpxn,\n      lossDate,\n      lossNotificationReceivedDate,\n      ROW_NUMBER() OVER (PARTITION BY mpxn ORDER BY lossNotificationReceivedDate DESC) AS loss_dedupe_rownum\n    FROM\n      `data-engineering-prod.product_andromeda_secure.loss_journeys`\n    WHERE\n      lossJourneyStatus <> 'Loss notification received - Past Expected Loss Date' )\n  SELECT\n    *\n  FROM\n    cte_loss_dedupe\n  WHERE\n    loss_dedupe_rownum = 1 )\nSELECT\n  ctr.serviceAccountId,\n  cm.mpxn,\n  cm.fuel,\n  ctr.contractStartDate,\n  -- Andromeda only knows when we've been mandated to start charging from, not the true contract start date, so we need to get this from Orion\n  ctr.contractExpiryDate,\n  -- For consistency in case Orion is doing anything weird with the charge mandates we'll get the contract end date from Orion\n  -- Andromeda currently has no knowledge of future contracts \/ charge mandates, other than to know Orion doesn't do renewals yet so we can supply nulls to begin with!\n  l.lossDate\nFROM\n  `data-engineering-prod.product_andromeda_secure.charge_mandates` cm\nINNER JOIN\n  cte_orion_customer_contracts ctr\nON\n  cm.contractId = ctr.energyContractId\nLEFT JOIN\n  cte_orion_customer_contracts next_ctr\nON\n  next_ctr.mpxn = ctr.mpxn\n  AND next_ctr.contractStartDate = DATE_ADD(ctr.contractExpiryDate, INTERVAL 1 day)\nLEFT JOIN\n  `data-engineering-prod.product_andromeda_secure.supply_points` sp\nON\n  cm.mpxn = sp.mpxn\nLEFT JOIN\n  `data-engineering-prod.product_andromeda_secure.registers` r\nON\n  sp.mpxn = r.mpxn\nLEFT JOIN\n  cte_losses l\nON\n  cm.mpxn = l.mpxn\n  AND l.lossDate >= ctr.contractStartDate\nWHERE\n  CURRENT_DATE() BETWEEN ctr.contractStartDate\n  AND ctr.contractExpiryDate\nORDER BY\n  lossDate DESC"},"data-engineering-prod:product_orion_secure.accounts_for_renewal":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.accounts_for_renewal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/accounts_for_renewal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/accounts_for_renewal","table_id":"accounts_for_renewal","time_partitioning":null,"view_query":"WITH\n  data AS (\n  SELECT\n    t1.serviceAccountId,\n    t1.mpxn AS MPXN1,\n    t1.endDate AS END1,\n    t2.mpxn AS MPXN2,\n    t2.endDate AS END2,\n    CASE\n      WHEN t2.MPXN IS NULL THEN \"Single fuel\"\n      WHEN t1.endDate = t2.endDate THEN \"Same\"\n      ELSE \"Different\"\n    END AS Date_Check,\n    ROW_NUMBER() OVER (PARTITION BY t1.serviceAccountId) AS RN\n  FROM\n    `data-engineering-prod.product_orion_secure.draft_accounts_for_renewal` t1\n  LEFT JOIN\n    `data-engineering-prod.product_orion_secure.draft_accounts_for_renewal` t2\n  ON\n    t1.serviceAccountId = t2.serviceAccountId\n    AND t1.mpxn != t2.mpxn\n  ORDER BY\n    Date_Check ASC,\n    t1.endDate ASC )\nSELECT\n  serviceAccountId AS Account_No,\n  MPXN1 AS First_Fuel,\n  END1 AS First_Fuel_End_Date,\n  MPXN2 AS Second_Fuel,\n  END2 AS Second_Fuel_End_Date,\n  Date_Check,\n  b.Current_Balance\nFROM\n  data d\nLEFT JOIN\n  `data-engineering-prod.product_orion_secure.current_balances` b\nON\n  d.serviceAccountId = b.Account_No\nWHERE\n  RN = 1\nORDER BY\n  First_Fuel_End_Date ASC"},"data-engineering-prod:product_orion_secure.accounts_in_probate":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.accounts_in_probate","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/accounts_in_probate","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/accounts_in_probate","table_id":"accounts_in_probate","time_partitioning":null,"view_query":"SELECT DISTINCT ac.accountid as Account_No\nFROM  `data-engineering-prod.landing_identity_secure.identity_user_v1` i\nJOIN `data-engineering-prod.product_orion_secure.most_recent_account_customer_binding` ac ON ac.customerId = i.user.id AND ac.isPrimaryCustomer = TRUE AND ac.status = 'active'\nWHERE i.user.givenName like '%Executor%'\n\nUNION DISTINCT \n\nSELECT DISTINCT p.Account_No \nFROM `data-engineering-prod.raw_orion_migration_secure.probate_responses` p"},"data-engineering-prod:product_orion_secure.active_account_customer_bindings":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.active_account_customer_bindings","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/active_account_customer_bindings","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/active_account_customer_bindings","table_id":"active_account_customer_bindings","time_partitioning":null,"view_query":"WITH binding AS (\n  SELECT *,\n         ROW_NUMBER() OVER (PARTITION BY accountId, customerId ORDER BY metadata.createdAt DESC) AS binding_row\n  FROM `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated`\n),\n\nusers AS (\n  SELECT user.id AS customerId,\n         user.enabled AS userEnabled,\n          metadata.createdAt,\n         ROW_NUMBER() OVER (PARTITION BY user.id ORDER BY metadata.createdAt DESC) AS user_row\n  FROM `data-engineering-prod.raw_identity_secure.identity_user`\n)\n\nSELECT b.accountId,\n       b.customerId,\n       CONCAT(\"ovo-energy:\",b.customerID) AS commPlatformCustomerId,\n       b.status,\n       b.isPrimaryCustomer,\n       b.isFinanciallyLiable,\n       u.customerId AS user_check,\n       u.userEnabled\nFROM  binding b\nJOIN users u ON b.customerId = u.customerId AND u.user_row = 1 #AND u.userEnabled = TRUE\nWHERE binding_row = 1\nAND (b.status = 'active' OR b.status IS NULL)"},"data-engineering-prod:product_orion_secure.active_final_statements":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.active_final_statements","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/active_final_statements","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/active_final_statements","table_id":"active_final_statements","time_partitioning":null,"view_query":"with final_statements as (\n  select\n    unionRecord.FinalAccountStatementUploaded.metadata.createdAt,\n    unionRecord.FinalAccountStatementUploaded.accountId,\n    unionRecord.FinalAccountStatementUploaded.statementId,\n    unionRecord.FinalAccountStatementUploaded.closingBalance\n  from\n    `data-engineering-prod.landing_orex_secure.orex_statement_uploaded_v1`\n  where\n    unionRecord.FinalAccountStatementUploaded.accountId is not null\n  union all \n  select \n    unionRecord.FinalAccountStatementUploaded.metadata.createdAt,\n    unionRecord.FinalAccountStatementUploaded.accountId,\n    unionRecord.FinalAccountStatementUploaded.statementId,\n    unionRecord.FinalAccountStatementUploaded.closingBalance\n  from `data-engineering-prod.raw_bast_secure.bast_statement_uploaded`\n  where unionRecord.FinalAccountStatementUploaded.accountId is not null\n),\narchived_statements as (\n  select \n    unionRecord.StatementArchived.metadata.createdAt,\n    unionRecord.StatementArchived.accountId,\n    unionRecord.StatementArchived.statementId\n  from `data-engineering-prod.raw_bast_secure.bast_statement_uploaded`\n  where unionRecord.FinalAccountStatementUploaded.accountId is not null\n)\n\nselect fs.* from final_statements fs left join archived_statements a on a.accountId = fs.accountId and a.statementId = fs.statementId\n  where a.statementId is null"},"data-engineering-prod:product_orion_secure.bast_move_out_copy":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.bast_move_out_copy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/bast_move_out_copy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/bast_move_out_copy","table_id":"bast_move_out_copy","time_partitioning":null,"view_query":"select * from `billing-and-statements-prod.public_bast.move_outs`;"},"data-engineering-prod:product_orion_secure.billing_case_coverage_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_case_coverage_snapshots","location":"EU","num_bytes":3541739,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_case_coverage_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_case_coverage_snapshots","table_id":"billing_case_coverage_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.billing_controls_work_item_status_changes":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_item_status_changes","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_item_status_changes","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_item_status_changes","table_id":"billing_controls_work_item_status_changes","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n)\nselect wi_c.workItemId,\n       wi_c.entityUri,\n       wi_c.statusChangeDateTime as exceptionDateTime,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       wi_all.status,\n       wi_all.statusChangeDateTime,\n       wi_all.statusChangeAuthor,\n       wi_all.statusNote\nfrom cte_row_number wi_c\ninner join cte_row_number wi_all on wi_c.workItemId = wi_all.workItemId\nwhere wi_c.created_row_num = 1\n  and JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') like 'billing-controls%'"},"data-engineering-prod:product_orion_secure.billing_controls_work_items":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items","table_id":"billing_controls_work_items","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n)\nselect wi_c.workItemId,\n       wi_c.entityUri,\n       wi_c.statusChangeDateTime as exceptionDateTime,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1\n  and JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') like 'billing-controls%'"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_bad_usage_projection":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_bad_usage_projection","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_bad_usage_projection","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_bad_usage_projection","table_id":"billing_controls_work_items_bad_usage_projection","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'usage-projection-alerts:\/\/%bad-usage-projection'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.timeOfUseLabel') as timeOfUseLabel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.BadProjectionCategory') as BadProjectionCategory,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.EffectiveFromDate') as EffectiveFromDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.PersonalProjectionGeneratedDate') as PersonalProjectionGeneratedDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.PersonalProjection') as PersonalProjection,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.ProjectionBasedOn') as ProjectionBasedOn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.IndustryEacOrAq') as IndustryEacOrAq,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_gap_in_charges_during_billing_period":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_gap_in_charges_during_billing_period","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_gap_in_charges_during_billing_period","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_gap_in_charges_during_billing_period","table_id":"billing_controls_work_items_gap_in_charges_during_billing_period","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'supply-point-billing-period-alerts:\/\/%gap-in-charges-during-billing-period'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.billingPeriodEndDate') as billingPeriodEndDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.chargingStoppedDate') as chargingStoppedDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.chargingResumedDate') as chargingResumedDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.totalMissedDays') as totalMissedDays,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.gapInChargesCategory') as gapInChargesCategory,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_high_consumption_between_actual_reads":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_high_consumption_between_actual_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_high_consumption_between_actual_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_high_consumption_between_actual_reads","table_id":"billing_controls_work_items_high_consumption_between_actual_reads","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'register-consumption-alerts:\/\/%high-consumption-between-actual-reads'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.orionMeterType') as orionMeterType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.tier') as tier,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.timeOfUseLabel') as timeOfUseLabel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReadingDate') as fromReadingDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReading') as fromReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReadingType') as fromReadingType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReadingDate') as toReadingDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReading') as toReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReadingType') as toReadingType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.usage') as usage,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.blockLength') as blockLength,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.usagePerDay') as usagePerDay,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.latestProjectedConsumption') as latestProjectedConsumption,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_high_usage_projection":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_high_usage_projection","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_high_usage_projection","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_high_usage_projection","table_id":"billing_controls_work_items_high_usage_projection","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'usage-projection-alerts:\/\/%high-usage-projection'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.timeOfUseLabel') as timeOfUseLabel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.BadProjectionCategory') as BadProjectionCategory,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.EffectiveFromDate') as EffectiveFromDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.PersonalProjectionGeneratedDate') as PersonalProjectionGeneratedDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.PersonalProjection') as PersonalProjection,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.ProjectionBasedOn') as ProjectionBasedOn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.IndustryEacOrAq') as IndustryEacOrAq,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_incomplete_charges_for_billing_period":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_incomplete_charges_for_billing_period","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_incomplete_charges_for_billing_period","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_incomplete_charges_for_billing_period","table_id":"billing_controls_work_items_incomplete_charges_for_billing_period","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'supply-point-billing-period-alerts:\/\/%incomplete-charges-for-billing-period'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.migrationDate') as migrationDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.BillStartDate') as BillStartDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.BillEndDate') as BillEndDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.MinFromDateCharge') as MinFromDateCharge,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.MaxToDateCharge') as MaxToDateCharge,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.ChargedDays') as ChargedDays,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.UnbilledDays') as UnbilledDays,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_more_than_1_year_between_actual_reads":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_more_than_1_year_between_actual_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_more_than_1_year_between_actual_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_more_than_1_year_between_actual_reads","table_id":"billing_controls_work_items_more_than_1_year_between_actual_reads","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select wi.*,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where wi.entityUri like 'register-consumption-alerts:\/\/%more-than-1-year-between-actual-reads'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.clockingTimeId') as clockingTimeId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReadingDate') as fromReadingDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReading') as fromReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReadingDate') as toReadingDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReading') as toReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.blockLength') as blockLength,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.usage') as usage,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.PreReadPP') as PreReadPP,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.PostReadPP') as PostReadPP,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.ChangeRatio') as ChangeRatio,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_negative_consumption_between_actual_reads":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_negative_consumption_between_actual_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_negative_consumption_between_actual_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_negative_consumption_between_actual_reads","table_id":"billing_controls_work_items_negative_consumption_between_actual_reads","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'register-consumption-alerts:\/\/%negative-consumption-between-actual-reads'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.timeOfUseLabel') as timeOfUseLabel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.msn') as msn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromDate') as fromDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReading') as fromReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toDate') as toDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReading') as toReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.consumption') as consumption,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.billing_controls_work_items_negative_consumption_from_migration_estimate":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.billing_controls_work_items_negative_consumption_from_migration_estimate","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_negative_consumption_from_migration_estimate","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/billing_controls_work_items_negative_consumption_from_migration_estimate","table_id":"billing_controls_work_items_negative_consumption_from_migration_estimate","time_partitioning":null,"view_query":"with cte_row_number as\n(\n  select *,\n         row_number() over (partition by workItemId order by metadata.createdAt asc) as created_row_num,\n         row_number() over (partition by workItemId order by metadata.createdAt desc) as latest_row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item`\n  where entityUri like 'register-consumption-alerts:\/\/%negative-consumption-from-migration-estimate'\n)\nselect wi_c.workItemId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.serviceAccountId') as serviceAccountId,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.mpxn') as mpxn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionType') as exceptionType,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fuel') as fuel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.timeOfUseLabel') as timeOfUseLabel,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.msn') as msn,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromDate') as fromDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.fromReading') as fromReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toDate') as toDate,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.toReading') as toReading,\n       JSON_EXTRACT_SCALAR(wi_c.statusNote, '$.exceptionDetail.consumption') as consumption,\n       wi_l.status,\n       wi_l.statusChangeDateTime,\n       wi_l.statusChangeAuthor\nfrom cte_row_number wi_c\ninner join cte_row_number wi_l on wi_c.workItemId = wi_l.workItemId\n                              and wi_l.latest_row_num = 1\nwhere wi_c.created_row_num = 1"},"data-engineering-prod:product_orion_secure.charges_outside_supply_period_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.charges_outside_supply_period_snapshots","location":"EU","num_bytes":219290845,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/charges_outside_supply_period_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/charges_outside_supply_period_snapshots","table_id":"charges_outside_supply_period_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.charging_issues_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.charging_issues_snapshots","location":"EU","num_bytes":827657882,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/charging_issues_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/charging_issues_snapshots","table_id":"charging_issues_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.charging_issues_snapshots_copy":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.charging_issues_snapshots_copy","location":"EU","num_bytes":35256189,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/charging_issues_snapshots_copy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/charging_issues_snapshots_copy","table_id":"charging_issues_snapshots_copy","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.collections_account":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_account","location":"EU","num_bytes":162709011,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_account","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_account","table_id":"collections_account","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.collections_account_staging":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_account_staging","location":"EU","num_bytes":95996059,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_account_staging","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_account_staging","table_id":"collections_account_staging","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.collections_credit_codes":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_credit_codes","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_credit_codes","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_credit_codes","table_id":"collections_credit_codes","time_partitioning":null,"view_query":"WITH latest_event as (\nSELECT *\n      ,ROW_NUMBER() OVER(PARTITION BY serviceAccountId ORDER BY kafkaData.insertTime DESC, kafkaData.offset DESC) Row_Num\nFROM `data-engineering-prod.landing_pace.pace_cms_flags_v2` \n)\n\nSELECT e.serviceAccountId as Account_No\n      ,f.value as Credit_Code\n      ,f.description as Credit_Code_Description\nFROM latest_event e\nLEFT JOIN UNNEST(e.activeFlags) f\nWHERE e.Row_Num = 1"},"data-engineering-prod:product_orion_secure.collections_customer":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_customer","location":"EU","num_bytes":95980478,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_customer","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_customer","table_id":"collections_customer","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.collections_memos":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_memos","location":"EU","num_bytes":281339,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_memos","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_memos","table_id":"collections_memos","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.collections_payment":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_payment","location":"EU","num_bytes":919446,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_payment","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_payment","table_id":"collections_payment","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.collections_supply":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.collections_supply","location":"EU","num_bytes":180561552,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_supply","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/collections_supply","table_id":"collections_supply","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.comms_performance_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.comms_performance_extract","location":"EU","num_bytes":863358498,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/comms_performance_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/comms_performance_extract","table_id":"comms_performance_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.contract_renewal_window_journeys":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.contract_renewal_window_journeys","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/contract_renewal_window_journeys","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/contract_renewal_window_journeys","table_id":"contract_renewal_window_journeys","time_partitioning":null,"view_query":"with cte_eoc1 as\n(\n  select cam.Account_No,\n         cast(min(cf.metadata.createdAt) as datetime) as EOC1_Triggered_Datetime,\n         cast(min(case when cf.status = 'Delivered' then cf.metadata.createdAt end) as datetime) as EOC1_Delivered_Datetime,\n         sum(case when description = 'The comms has been successfully delivered.' then 1 end) as delivered_count,\n         sum(case when description = 'The email was opened by the customer.' then 1 end) as opened_count,\n         sum(case when description = 'The link https:\/\/my.ovoenergy.com\/ was clicked by the customer.' then 1 end) as went_to_myovo_count,\n         -- Not passing through these more niche interactions but they're available if needed!\n         sum(case when description = 'The link http:\/\/www.ovoenergy.com\/terms was clicked by the customer.' then 1 end) as went_to_terms_and_conds_count,\n         sum(case when description = 'The link https:\/\/www.ovoenergy.com\/ovo-answers was clicked by the customer.' then 1 end) as went_to_ovo_answers_count,\n         sum(case when description = 'The link http:\/\/www.ovoenergy.com was clicked by the customer.' then 1 end) as went_to_ovo_homepage_count,\n         sum(case when description = 'The link www.citizensadvice.org.uk\/energy was clicked by the customer.' then 1 end) as went_to_citizens_advice_count\n  from `data-engineering-prod.landing_comms_secure.comms_feedback_v5` cf\n  inner join `data-engineering-prod.product_orion_secure.customer_to_account_mapping` cam on replace(cf.customer.customerId, 'ovo-energy:', '') = cam.Customer_Id\n  where commDescription = 'Contract about to expire'\n  group by cam.Account_No\n)\n\nselect distinct \n       ctr.contractId as Expiring_Contract_ID,\n       ctr.serviceAccountId as Account_No,\n       ctr.mpxn as Meter_Point_No,\n       ctr.fuel as Fuel,\n       ctr.planName as Expiring_Contract_Plan_Name,\n       ctr.customerContractStartDate as Expiring_Contract_Start_Date,\n       ctr.customerContractExpiryDate as Contract_Expiry_Date, -- TODO: Flag that we're relying on this to be able to do renewal window reporting\n       date_add(ctr.customerContractExpiryDate, interval -49 day) as Renewal_Window_Opened_Date,\n       eoc1.EOC1_Triggered_Datetime,\n       eoc1.EOC1_Delivered_Datetime,\n       case when eoc1.opened_count > 1 or went_to_myovo_count > 1 then 1 else 0 end as Opened_EOC1, -- sometimes we get the interaction event without the opened event\n       case when went_to_myovo_count > 1 then 1 else 0 end AS Clicked_Through_To_MyOVO_From_EOC1,\n       case when ctr_28.startDate <= date_add(ctr.customerContractExpiryDate, interval 28 day) then case when ctr_28.startDate < cast(ctr_28.createdDate as date) then ctr_28.startDate else cast(ctr_28.createdDate as date) end END as Renewal_Date, -- Use the start date if it's before the creation date as it's probably due to lag in manual process for refixing\n       case when ctr_28.startDate <= date_add(ctr.customerContractExpiryDate, interval 28 day) then case when ctr_28.startDate < cast(ctr_28.createdDate as date) then cast(ctr_28.startDate as timestamp) else ctr_28.createdDate end END as Renewal_Datetime,\n       ctr_28.startDate as Renewal_Contract_Start_Date,\n       ctr_28.planName as Renewal_Plan_Name,\n       ctr_28.contractId as Renewal_Contract_ID,\n       lj.lossNotificationReceivedDate as Loss_Notification_Date,\n       lj.lossDate as Loss_Date,\n       case\n        when lj.lossDate <= ctr.customerContractExpiryDate then 'Lost'\n        when moj.Account_No is not null then 'Change of Tenancy'\n        when lj.lossNotificationReceivedDate <= ctr.customerContractExpiryDate then 'Loss Notified'\n        when cast(new_ctr.createdDate as date) <= ctr.customerContractExpiryDate or new_ctr.tariffType = 'fixed' then 'Renewed Before Expiry' -- If the new contract after renewal window then will be backdated renewal done manually so need to include this\n        when new_ctr.tariffType = 'variable' then 'Variable'\n        else 'In Process'\n       END as Action_Before_Contract_Expiry,\n       case\n        when lj.lossDate <= date_add(ctr.customerContractExpiryDate, interval 28 day) then 'Lost'\n        when moj.Account_No is not null then 'Change of Tenancy'\n        when lj.lossNotificationReceivedDate <= date_add(ctr.customerContractExpiryDate, interval 28 day) then 'Loss Notified'\n        when cast(new_ctr.createdDate as date) <= ctr.customerContractExpiryDate or new_ctr.tariffType = 'fixed' then 'Renewed Before Expiry'\n        when ctr_28.tariffType = 'fixed' then 'Refixed Within 28 Days'\n        when ctr_28.tariffType = 'variable' then 'Variable'\n        else 'In Process'\n       END as Action_At_28_Days_After_Contract_Expiry\nfrom `data-engineering-prod.product_andromeda_secure.contracts` ctr\nleft join cte_eoc1 eoc1 on ctr.serviceAccountId = eoc1.Account_No\nleft join `data-engineering-prod.product_andromeda_secure.contracts` new_ctr on ctr.mpxn = new_ctr.mpxn\n                                                      and new_ctr.startDate = date_add(ctr.endDate, interval 1 day)\nleft join `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed` lj on ctr.mpxn = lj.mpxn\n                                                     and lj.lossNotificationReceivedDate >= date_add(ctr.customerContractExpiryDate, interval -49 day)\n                                                     and lj.lossCancellationReceivedDate is null\nleft join `data-engineering-prod.product_orion_secure.move_out_journeys` moj on ctr.serviceAccountId = moj.Account_No\n                                                      and cast(moj.Request_Timestamp as date) >= date_add(ctr.customerContractExpiryDate, interval -49 day)\nleft join `data-engineering-prod.product_andromeda_secure.contracts` ctr_28 on ctr.mpxn = ctr_28.mpxn\n                                                                           and date_add(ctr.customerContractExpiryDate, interval 28 day) between ctr_28.startDate and coalesce(ctr_28.endDate, '2999-01-01')\nwhere date_add(ctr.customerContractExpiryDate, interval -49 day) < current_date()\n  and ctr.endDate >= date_add(ctr.customerContractExpiryDate, interval -49 day) -- Exclude anyone already lost or moved out by time window would have opened"},"data-engineering-prod:product_orion_secure.contracts_on_incorrect_regions":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.contracts_on_incorrect_regions","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/contracts_on_incorrect_regions","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/contracts_on_incorrect_regions","table_id":"contracts_on_incorrect_regions","time_partitioning":null,"view_query":"# Reporting for tariffs over the cap post-April VPC\n\n# Get caps for most recent cap date for DD only\nWITH priceCapRates AS (\n  SELECT region_name,\n         GSP,\n         GSP_Id as mpanPrefix,\n         case when GSP_Id='10' then 'EA'\n              when GSP_Id='11' then 'EM'\n              when GSP_Id='12' then 'NT'\n              when GSP_Id='13' then 'NW'\n              when GSP_Id='14' then 'WM'\n              when GSP_Id='15' then 'NO'\n              when GSP_Id='16' then 'NW'\n              when GSP_Id='17' then 'SC'\n              when GSP_Id='18' then 'SC'\n              when GSP_Id='19' then 'SE'\n              when GSP_Id='20' then 'SO'\n              when GSP_Id='21' then 'WA'\n              when GSP_Id='22' then 'SW'\n              when GSP_Id='23' then 'NE'\n         end as LDZ, # Align gas region notation\n         case when fuel='E' then 'electricity'\n              when fuel='G' then 'gas'\n         end as fuel, # Align fuel notation\n         case when profile_class='Gas' then '00'\n              when profile_class='PC1' then '01'\n              when profile_class='PC2' then '02'\n         end as profileclass, # Align profile class notation\n         standing_charge\/100 as VPCstandingRateCap, # Convert pence to pounds\n         rate\/100 as VPCunitRateCap, # Convert pence to pounds\n         effective_from_date as VPCcapStart,\n         effective_to_date as VPCcapEnd\n  FROM `data-engineering-prod.custom_regulatory.tbl_Price_Cap_Rates_v2`\n  WHERE tariff_cap='SVT' # Standard Variable Tariffs - only applies to variable contracts\n    AND payment_type='D' # DD payments\n    AND effective_from_date='2020-04-01' # April caps only\n),\n# Get all contracts that are currently live\nallContracts AS (\n  SELECT DISTINCT c.serviceAccountId,\n                  c.mpxn,\n                  c.fuel,\n                  c.contractId,\n                  c.startDate,\n                  c.endDate,\n                  c.tariffId,\n                  c.tariffType,\n                  c.planName,\n                  t.profileClass,\n                  IF(t.profileClass='02' and t.planName not like '%Economy 7', '01', t.profileClass) as tariffProfileClass,\n                  c.contractStatus,\n                  t.region as currentRegion\n  FROM `data-engineering-prod.product_andromeda_secure.contracts` c\n  INNER JOIN `data-engineering-prod.product_andromeda_secure.tariffs` t # Only need current tariff region and profile class here\n    ON c.tariffId=t.tariffId\n  WHERE c.endDate>=current_date()\n     OR c.endDate IS NULL\n),\ncorrectRegion AS (\n  SELECT ac.*,\n         if(ac.fuel='electricity',pcr.GSP,pcr.LDZ) as correctRegion, # Gas and elec regions have different notation\n         pcr.mpanprefix as correctRegionMpanPrefix,\n         pcr.VPCunitRateCap,\n         pcr.VPCstandingRateCap,\n         pcr.VPCcapStart\n  FROM allContracts ac\n  LEFT JOIN (select distinct account_no, utility_type_code, mpan_prefix from `data-science-retail.pricing_programme_solution.purified_alignment_gas_and_elec`) pp # Correct region data for account\n    ON pp.account_no=ac.serviceAccountID\n    AND pp.Utility_Type_Code=upper(substr(ac.fuel,1,1))\n  LEFT JOIN priceCapRates pcr # Bring in price cap rates\n    ON pp.mpan_prefix=pcr.mpanprefix\n    AND ac.tariffProfileClass=pcr.profileClass\n),\n# Join everything above on to PP region data for all accounts\nfinal_data as (\nSELECT cr.*,\n       asp.loss_date as lossDate,\n       asp.supply_lifecycle as supplyLifecycle,\n       asp.migrated_date as migratedDate,\n       case when (cr.currentRegion<>cr.correctRegion) then 'Incorrect region'\n            else 'Correct region'\n       end as regionComparison\nFROM correctRegion cr\nLEFT JOIN `data-engineering-prod.product_orion.account_supply_points` asp # Bring in account data\n  ON cr.serviceAccountId=asp.account_no\n  AND cr.mpxn=asp.meter_point_no\n)\n# Filter out accounts where the region is correct or rate is under the cap\nSELECT *\nFROM final_data\nWHERE regionComparison='Incorrect region' # Keep accounts with region mismatch\nORDER BY serviceAccountId,\n         fuel"},"data-engineering-prod:product_orion_secure.current_balances":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.current_balances","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/current_balances","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/current_balances","table_id":"current_balances","time_partitioning":null,"view_query":"WITH deleted_accounts as (\n    SELECT *\n          ,ROW_NUMBER() OVER(PARTITION BY accountID ORDER BY accountStateTimestamp DESC) Row_Num\n    FROM `data-engineering-prod.raw_orex_secure.orex_account_state`\n),\n\nCTE_Balance as (\n    SELECT b.accountId as Account_No\n          ,b.balance \/ 100 as Balance\n          ,b.balanceUpdateTime  as Balance_Update_Time\n          ,ROW_NUMBER() OVER(PARTITION BY b.accountId ORDER BY b.balanceUpdateTime  DESC) row_num\n    FROM `data-engineering-prod.raw_bast_secure.bast_balance_update` b\n    LEFT JOIN `data-engineering-prod.raw_orion_migration.orion_migration_success` r on r.account_no = b.accountId\n    LEFT JOIN deleted_accounts s on s.accountId = b.accountId and s.status = 'deleted' and s.Row_Num = 1\n    WHERE r.reverse_migrated_date IS NULL\n      AND s.accountId IS NULL\n)\n\nSELECT * EXCEPT(row_num)\nFROM CTE_Balance\nWHERE row_num = 1\nORDER BY 1"},"data-engineering-prod:product_orion_secure.customer_account_contract_mapping":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.customer_account_contract_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/customer_account_contract_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/customer_account_contract_mapping","table_id":"customer_account_contract_mapping","time_partitioning":null,"view_query":"SELECT\n  DISTINCT accountId AS Account_No,\n  customerId AS Customer_Id,\n  isPrimaryCUstomer AS Currently_Primary_Customer,\n  isFinanciallyLiable AS Currently_Financially_Liable,\n  fuel AS Fuel_Type,\n  mpxn AS Meter_Point_No,\n  startDate AS OREX_Contract_Start_Date,\n  expiryDate AS OREX_Contract_End_Date,\n  CASE\n    WHEN expiryDate > CURRENT_DATE() AND startDate < CURRENT_DATE THEN \"Active\"\n    WHEN expiryDate < CURRENT_DATE() THEN \"Previous\"\n    WHEN startDate > CURRENT_DATE() THEN \"Future\"\n    ELSE \"Inactive\"\n  END Contract_Status\nFROM\n  `data-engineering-prod.product_orion_secure.active_account_customer_bindings` a\nLEFT JOIN\n  `data-engineering-prod.raw_orex_secure.orex_customer_contract` b\nON\n  a.accountId = b.serviceAccountId"},"data-engineering-prod:product_orion_secure.customer_comms_preference":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.customer_comms_preference","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/customer_comms_preference","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/customer_comms_preference","table_id":"customer_comms_preference","time_partitioning":null,"view_query":"WITH commsPref AS (\n    SELECT DISTINCT customerId, accountId  as Account_No\n    FROM `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated`\n    CROSS JOIN UNNEST(accountCommsPreference) as Comms\n    WHERE Comms = 'POST'\n)\n\nSELECT DISTINCT a.Account_No\n              ,cp.customerId \n             ,IF(cp.customerId IS NOT NULL,'Post','Email') as commsPref\nFROM `data-engineering-prod.product_orion.accounts` a\nLEFT JOIN commsPref cp USING (Account_No)"},"data-engineering-prod:product_orion_secure.customer_to_account_mapping":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.customer_to_account_mapping","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/customer_to_account_mapping","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/customer_to_account_mapping","table_id":"customer_to_account_mapping","time_partitioning":null,"view_query":"select cam.accountId as Account_No,\n       cam.customerId as Customer_Id\nfrom `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated` cam\nleft join `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated` del on cam.accountId = del.accountId\n                                                                                           and cam.customerId = del.customerId\n                                                                                           and del.status = 'deleted'\nwhere (cam.status = 'active' or cam.status is null)\n  and del.accountId is null"},"data-engineering-prod:product_orion_secure.debt_risk_data":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data","table_id":"debt_risk_data","time_partitioning":null,"view_query":"WITH\n  cte_recommended_dds AS (\n  SELECT\n    rdd.accountId,\n    rdd.amount,\n    rdd.predictedFinalBalance,\n    rdd.isVariable,\n    rdd.remainingDirectDebits,\n    ROW_NUMBER() OVER (PARTITION BY rdd.accountId ORDER BY rdd.metadata.createdAt DESC) AS row_num\n  FROM\n    `data-engineering-prod.public.orex_recommended_direct_debit_generated_v1` rdd ),\n  cte_combined AS (\n  SELECT\n    cb.*,\n    s.DD_Day_Of_Month,\n    s.DD_Amount,\n    rdd.isVariable,\n    rdd.remainingDirectDebits,\n    FLOOR((rdd.amount \/ 100)) - s.DD_Amount AS Payment_Shortfall,\n    FLOOR((rdd.amount \/ 100)) AS Recommended_Amount,\n    FLOOR((rdd.predictedFinalBalance \/ 100)) AS Predicted_EOC_Balance\n  FROM\n    `data-engineering-prod.product_orion.accounts_extract` a\n  LEFT JOIN\n    `data-engineering-prod.product_orion_secure.move_out_journeys` moj\n  ON\n    a.Account_No = moj.Account_No\n  LEFT JOIN\n    `data-engineering-prod.product_orion_secure.current_balances` cb\n  ON\n    a.Account_No = cb.Account_No\n  LEFT JOIN\n    `data-engineering-prod.product_payments.subscriptions` s\n  ON\n    cb.Account_No = s.Account_No\n    AND s.Is_Active_Subscription = 1\n  LEFT JOIN\n    cte_recommended_dds rdd\n  ON\n    cb.Account_No = rdd.accountId\n    AND rdd.row_num = 1\n  WHERE\n    a.Status = 'active'\n    AND a.Account_Supply_Lifecycle = 'live (excluding loss)'\n    AND moj.Account_No IS NULL )\nSELECT\n  *,\n  CASE\n    WHEN DD_Amount >= Recommended_Amount THEN 'Paying recommended amount'\n    WHEN DD_Day_Of_Month IS NULL THEN 'No DD set up'\n    WHEN DD_Amount < Recommended_Amount AND Predicted_EOC_Balance >= 0 THEN 'Direct Debit reduced since recommendation'\n    WHEN Recommended_Amount IS NULL THEN 'Yet to generate recommendation'\n    WHEN Predicted_EOC_Balance < -50 THEN 'Predicted EOC debt > \u00a350'\n    WHEN Predicted_EOC_Balance < 0 THEN 'Predicted EOC Debt <= \u00a350'\n    ELSE 'Uncategorised'\n  END AS Paying_Right_Amount_Status,\n  CASE\n    WHEN isVariable = true THEN 'Variable'\n    WHEN isVariable = false THEN 'Fixed'\n  END AS Contract_Type,\n  CASE\n    WHEN remainingDirectDebits = 0 THEN 'No Direct Debit payments remaining'\n    WHEN remainingDirectDebits <= 3 THEN '3 or fewer payments remaining'\n    WHEN remainingDirectDebits > 6 THEN '7 or more payments remaining'\n    ELSE '4 to 6 payments remaining'\n  END AS Payments_Remaining,\n  CASE\n    WHEN Payment_Shortfall <= 0 THEN 'Paying recommended amount or greater'\n    WHEN Payment_Shortfall <= 5 THEN 'Paying within \u00a35'\n    WHEN Payment_Shortfall <= 10 THEN 'Paying within \u00a310'\n    WHEN Payment_Shortfall <= 20 THEN 'Paying within \u00a320'\n    ELSE 'Payment greater than \u00a320 than recommended amount'\n  END AS Payment_Shortfall_Status\nFROM\n  cte_combined"},"data-engineering-prod:product_orion_secure.debt_risk_data_historical":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_historical","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical","table_id":"debt_risk_data_historical","time_partitioning":null,"view_query":"WITH\n  data AS (\n  WITH\n    rdd AS (\n    SELECT\n      metadata.createdAt AS Created_Datetime,\n      rdd.accountId AS Account_No,\n      rdd.amount\/100 AS Recommended_Amount,\n      rdd.isVariable,\n      ROUND(rdd.predictedFinalBalance\/100,2) AS Predicted_EOC_Balance\n    FROM\n      `data-engineering-prod.public.orex_recommended_direct_debit_generated_v1` rdd )\n  SELECT\n    rdd.Account_No,\n    rdd.Predicted_EOC_Balance,\n    rdd.Recommended_Amount,\n    rdd.isVariable,\n    s.DD_Amount,\n    rdd.Created_Datetime,\n    s.Subscription_Created_Datetime,\n    ROW_NUMBER() OVER (PARTITION BY rdd.Account_No, CAST(rdd.Recommended_Amount AS STRING) ORDER BY rdd.Created_Datetime ASC, s.Subscription_Created_Datetime DESC) AS row_num\n  FROM\n    rdd\n  LEFT JOIN\n    `data-engineering-prod.product_payments.subscriptions` s\n  ON\n    rdd.Account_No = s.Account_No\n  WHERE\n    s.Subscription_Created_Datetime < rdd.Created_Datetime\n  ORDER BY\n    Account_No ASC,\n    rdd.Created_Datetime DESC,\n    s.Subscription_Created_Datetime DESC )\nSELECT\n  *,\n  CASE\n    WHEN DD_Amount >= Recommended_Amount THEN 'Paying recommended amount'\n    WHEN DD_Amount < Recommended_Amount AND Predicted_EOC_Balance >= 0 THEN 'Direct Debit reduced since recommendation'\n    WHEN Recommended_Amount IS NULL THEN 'Yet to generate recommendation'\n    WHEN Predicted_EOC_Balance < -50 THEN 'Predicted EOC debt > \u00a350'\n    WHEN Predicted_EOC_Balance < 0 THEN 'Predicted EOC Debt <= \u00a350'\n    ELSE 'Uncategorised'\n  END AS Paying_Right_Amount_Status\nFROM\n  data\nWHERE\n  row_num = 1"},"data-engineering-prod:product_orion_secure.debt_risk_data_historical_snapshot":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_historical_snapshot","location":"EU","num_bytes":1809935651,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical_snapshot","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical_snapshot","table_id":"debt_risk_data_historical_snapshot","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.debt_risk_data_historical_snapshot_summary":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_historical_snapshot_summary","location":"EU","num_bytes":1108117061,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical_snapshot_summary","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical_snapshot_summary","table_id":"debt_risk_data_historical_snapshot_summary","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.debt_risk_data_historical_summaries":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_historical_summaries","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical_summaries","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_historical_summaries","table_id":"debt_risk_data_historical_summaries","time_partitioning":null,"view_query":"WITH\n  cte_data_one AS (\n  SELECT\n      DISTINCT(First_Reporting_Date),\n      Paying_Right_Amount_Status\n  FROM\n    `data-engineering-prod.product_orion_secure.debt_risk_data_historical_snapshot_summary` ),\n  cte_data_two AS (\n  SELECT\n    *\n  FROM\n    `data-engineering-prod.product_orion_secure.debt_risk_data_historical_snapshot_summary` )\nSELECT\n  one.First_Reporting_Date,\n  one.Paying_Right_Amount_Status,\n  (\n  SELECT\n    COUNT(DISTINCT(Account_No))\n      FROM\n        cte_data_two\n      WHERE\n        one.Paying_Right_Amount_Status = Paying_Right_Amount_Status\n        AND one.First_Reporting_Date >= First_Reporting_Date\n        AND one.First_Reporting_Date < Last_Reporting_Date) AS Count\n    FROM\n      cte_data_one one\n    ORDER BY\n      one.First_Reporting_Date ASC"},"data-engineering-prod:product_orion_secure.debt_risk_data_summary":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_summary","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_summary","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_summary","table_id":"debt_risk_data_summary","time_partitioning":null,"view_query":"SELECT\n  COUNT(*) AS Count,\n  Paying_Right_Amount_Status,\n  Contract_Type,\n  Payments_Remaining,\n  Payment_Shortfall_Status\nFROM\n  `data-engineering-prod.product_orion_secure.debt_risk_data_today_snapshot`\nGROUP BY\n  Paying_Right_Amount_Status,\n  Contract_Type,\n  Payments_Remaining,\n  Payment_Shortfall_Status"},"data-engineering-prod:product_orion_secure.debt_risk_data_summary_snapshot":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_summary_snapshot","location":"EU","num_bytes":3735100,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_summary_snapshot","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_summary_snapshot","table_id":"debt_risk_data_summary_snapshot","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.debt_risk_data_today_snapshot":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_data_today_snapshot","location":"EU","num_bytes":80136057,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_today_snapshot","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_data_today_snapshot","table_id":"debt_risk_data_today_snapshot","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.debt_risk_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.debt_risk_snapshots","location":"EU","num_bytes":8507065675,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/debt_risk_snapshots","table_id":"debt_risk_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.delete_final_statement_work_items":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.delete_final_statement_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/delete_final_statement_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/delete_final_statement_work_items","table_id":"delete_final_statement_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array,\n         row_number() over (partition by wi.entityUri order by wi.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where entityUri like 'accounts%delete-final-statement%'\n),\ncte_final_statements as\n(\n  select fs.*\n  from `product_orion_secure.final_statements` fs\n)\nselect wi.key_array[offset(2)] as serviceAccountId,\n       wi.* except(key_array, row_num),\n       fs.Statement_No,\n       fs.Closing_Balance,\n       fs.Created_Datetime\nfrom cte_work_items wi\ninner join cte_final_statements fs on wi.key_array[offset(2)] = fs.Account_No\n                                  and wi.key_array[offset(4)] = fs.Statement_No"},"data-engineering-prod:product_orion_secure.draft_accounts_for_renewal":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.draft_accounts_for_renewal","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/draft_accounts_for_renewal","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/draft_accounts_for_renewal","table_id":"draft_accounts_for_renewal","time_partitioning":null,"view_query":"SELECT m.serviceAccountId, m.mpxn, m.startDate, m.endDate, cc.planName, sp.supplyStatus, mo.Move_Out_Date FROM `data-engineering-prod.product_andromeda_secure.charge_mandates` m\nLEFT JOIN `data-engineering-prod.raw_orex_secure.orex_customer_contract` cc ON m.mpxn = cc.mpxn\nLEFT JOIN `data-engineering-prod.product_andromeda_secure.supply_points` sp ON m.mpxn = sp.mpxn\nLEFT JOIN `data-engineering-prod.product_orion_secure.move_out_journeys` mo ON m.serviceAccountId = mo.Account_No\nWHERE mo.Move_Out_Date IS NULL AND m.endDate >= '2018-12-30'\nORDER BY m.serviceAccountId asc, m.mpxn asc, m.endDate asc"},"data-engineering-prod:product_orion_secure.final_and_current_balances":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_and_current_balances","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_and_current_balances","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_and_current_balances","table_id":"final_and_current_balances","time_partitioning":null,"view_query":"WITH Data AS (\n  SELECT\n    *,\n    ROW_NUMBER() OVER(PARTITION BY Account_No ORDER BY Created_Datetime DESC) AS ROW,\n  FROM\n    `data-engineering-prod.product_orion_secure.final_statements`\n  ORDER BY\n    Created_Datetime DESC\n)\nSELECT\n  d.Created_Datetime,\n  d.Account_No,\n  d.Closing_Balance,\n  ROUND(cb.balance, 2) AS Current_Balance\nFROM Data d\nLEFT JOIN `data-engineering-prod.product_orion_secure.current_balances` cb ON d.Account_No = cb.Account_No\nWHERE d.ROW = 1"},"data-engineering-prod:product_orion_secure.final_statement_delay_reasons_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_statement_delay_reasons_extract","location":"EU","num_bytes":503735,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statement_delay_reasons_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statement_delay_reasons_extract","table_id":"final_statement_delay_reasons_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.final_statement_transaction_snapshot_v1":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_statement_transaction_snapshot_v1","location":"EU","num_bytes":313090983,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statement_transaction_snapshot_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statement_transaction_snapshot_v1","table_id":"final_statement_transaction_snapshot_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.final_statement_work_items":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_statement_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statement_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statement_work_items","table_id":"final_statement_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array,\n         row_number() over (partition by wi.entityUri order by wi.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where entityUri like 'accounts%'\n),\ncte_final_statements as\n(\n  select fs.*,\n         row_number() over (partition by fs.Account_No order by fs.Created_Datetime desc) as row_num\n  from `product_orion_secure.final_statements` fs\n)\nselect wi.key_array[offset(2)] as serviceAccountId,\n       wi.* except(key_array, row_num),\n       fs.Statement_No,\n       fs.Closing_Balance,\n       fs.Created_Datetime\nfrom cte_work_items wi\ninner join cte_final_statements fs on wi.key_array[offset(2)] = fs.Account_No\n                                  and wi.row_num = fs.row_num\nwhere array_length(wi.key_array) = 3 -- final statements don't have anything to tag the action"},"data-engineering-prod:product_orion_secure.final_statements":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_statements","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statements","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statements","table_id":"final_statements","time_partitioning":null,"view_query":"WITH\n  cte_final_account_statements AS (\n  SELECT\n    unionRecord.FinalAccountStatementUploaded.metadata.createdAt,\n    unionRecord.FinalAccountStatementUploaded.accountId,\n    unionRecord.FinalAccountStatementUploaded.statementId,\n    unionRecord.FinalAccountStatementUploaded.closingBalance,\n    'Final account statement' AS statementType\n  FROM\n    `data-engineering-prod.landing_orex_secure.orex_statement_uploaded_v1`\n  WHERE\n    unionRecord.FinalAccountStatementUploaded.accountId IS NOT NULL\n  union all\n  select\n    Task_Completed_Date as createdAt,\n    Account_No as accountId,\n    null as statementId,\n    null as closingBalance,\n    'Final account statement' as statementType\n  from `data-engineering-prod.landing_bast_secure.completed_final_statement_tasks_with_missed_statement_uploaded`\n  union all\n  select \n    unionRecord.FinalAccountStatementUploaded.metadata.createdAt,\n    unionRecord.FinalAccountStatementUploaded.accountId,\n    unionRecord.FinalAccountStatementUploaded.statementId,\n    unionRecord.FinalAccountStatementUploaded.closingBalance,\n    'Final account statement' AS statementType\n  from `data-engineering-prod.raw_bast_secure.bast_statement_uploaded`\n  where unionRecord.FinalAccountStatementUploaded.accountId is not null\n )\nSELECT\n  createdAt AS Created_Datetime,\n  accountId AS Account_No,\n  statementId AS Statement_No,\n  statementType AS Statement_Type,\n  ROUND(closingBalance\/100,2) AS Closing_Balance\nFROM\n  cte_final_account_statements"},"data-engineering-prod:product_orion_secure.final_statements_generated_vs_deadline":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_statements_generated_vs_deadline","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statements_generated_vs_deadline","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statements_generated_vs_deadline","table_id":"final_statements_generated_vs_deadline","time_partitioning":null,"view_query":"-- TODO the window for loss final statements is larger for read disputes. Do we need to account for this here?\nwith account_supplies as (\n  -- subquery to find latest account supply point state event for an account\n  select *, row_number() over (partition by accountId order by kafkaData.insertTime desc) as row_number from `data-engineering-prod.auto_capture_v2.bast_account_supply_point_state_v1` order by accountId\n)\n-- Move out final statements\n-- Find any move outs that have an associated final statement. The deadline is determined by adding 4 weeks to the latest between the day the account moved out and the day we were told about the move out. We then report on how many days outside of that window the final statement was created.\nselect\n      move_outs.account_id as AccountId,\n      move_outs.move_out_date as AccountCloseDate,\n      f.statementId as StatementId,\n      extract(date from f.createdAt) as StatementCreatedDate, --TODO should we fix this to be the statementDate (currently not visible in bigquery) rather than the kafka create time\n      date_diff(extract(date from f.createdAt), greatest(move_outs.move_out_date, move_outs.created_date), day) as DaysBeforeStatement,\n      date_diff(extract(date from f.createdAt), greatest(move_outs.move_out_date, move_outs.created_date), day) <= 28 as WithinWindow,\n      \"Move out\" as AccountCloseReason\n      from `data-engineering-prod.product_orion_secure.bast_move_outs` move_outs\n      join `data-engineering-prod.product_orion_secure.active_final_statements` f on move_outs.account_id = f.accountId\nunion all\n-- Loss final statements\n-- Find any account losses that have an associated final statement AND have no active supplies after the loss. The deadline is determined by adding 6 weeks to the loss date. We then report on how many days outside of that window the final statement was created.\nselect\n      losses.account_id as AccountId,\n      losses.loss_date as AccountCloseDate,\n      f.statementId as StatementId,\n      extract(date from f.createdAt) as StatementCreatedDate, --TODO should we fix this to be the statementDate (currently not visible in bigquery) rather than the kafka create time\n      date_diff(extract(date from f.createdAt), losses.loss_date, day) as DaysBeforeStatement,\n      date_diff(extract(date from f.createdAt), losses.loss_date, day) <= 42 as WithinWindow,\n      \"Loss\" as AccountCloseReason\n      from `data-engineering-prod.product_orion_secure.bast_losses` losses\n      join account_supplies supplies on supplies.accountId = losses.account_id and supplies.row_number = 1 -- The account supply point is ordered by insert time so the row with number 1 is the latest row\n      join `data-engineering-prod.product_orion_secure.active_final_statements` f on losses.account_id = f.accountId\n      where not exists (select * from unnest(supplies.ownership) o where o.end is null or o.end > timestamp(losses.loss_timestamp)) -- A supply is active after the loss if it has a later end time or no end time\n"},"data-engineering-prod:product_orion_secure.final_statements_upcoming":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.final_statements_upcoming","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statements_upcoming","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/final_statements_upcoming","table_id":"final_statements_upcoming","time_partitioning":null,"view_query":"-- TODO the window for loss final statements is larger for read disputes. Do we need to account for this here?\nwith account_supplies as (\n  -- subquery to find latest account supply point state event for an account\n  select *, row_number() over (partition by accountId order by kafkaData.insertTime desc) as row_number from `data-engineering-prod.auto_capture_v2.bast_account_supply_point_state_v1` order by accountId\n)\n-- Move out final statements\n-- Find any move outs that have no associated final statement. The deadline is determined by adding 4 weeks to the latest between the day the account moved out and the day we were told about the move out\nselect\n      move_outs.account_id as AccountId,\n      move_outs.move_out_date as AccountCloseDate,\n      date_add(greatest(move_outs.move_out_date, move_outs.created_date), interval 28 day) as FinalStatementDeadline,\n      date_diff(date_add(greatest(move_outs.move_out_date, move_outs.created_date), interval 28 day), CURRENT_DATE(), day) as DaysRemaining,\n      \"Move out\" as AccountCloseReason\n      from `data-engineering-prod.product_orion_secure.bast_move_outs` move_outs\n      left join `data-engineering-prod.product_orion_secure.active_final_statements` f on move_outs.account_id = f.accountId\n      where f.accountId is null\nunion all\n-- Loss final statements\n-- Find any account losses that have no associated final statement AND have no active supplies after the loss. The deadline is determined by adding 6 weeks to the loss date\nselect\n      losses.account_id as AccountId,\n      losses.loss_date as AccountCloseDate,\n      date_add(losses.loss_date, interval 42 day) as FinalStatementDeadline,\n      date_diff(date_add(losses.loss_date, interval 42 day), CURRENT_DATE(), day) as DaysRemaining,\n      \"Loss\" as AccountCloseReason\n      from `data-engineering-prod.product_orion_secure.bast_losses` losses\n      join account_supplies supplies on supplies.accountId = losses.account_id and supplies.row_number = 1 -- The account supply point is ordered by insert time so the row with number 1 is the latest row\n      left join `data-engineering-prod.product_orion_secure.active_final_statements` f on losses.account_id = f.accountId\n      where f.accountId is null\n      and not exists (select * from unnest(supplies.ownership) o where o.end is null or o.end > timestamp(losses.loss_timestamp)) -- A supply is active after the loss if it has a later end time or no end time\n"},"data-engineering-prod:product_orion_secure.finalled_account_balances":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.finalled_account_balances","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/finalled_account_balances","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/finalled_account_balances","table_id":"finalled_account_balances","time_partitioning":null,"view_query":"WITH\n  cte_most_recent_subscription AS (\n  SELECT\n    *,\n    ROW_NUMBER() OVER(PARTITION BY Account_No ORDER BY Subscription_Created_Date DESC) AS ROW\n  FROM\n    `data-engineering-prod.product_payments.subscriptions` ),\n  cte_final_statements AS (\n  SELECT\n    unionRecord.FinalAccountStatementUploaded.accountId,\n    unionRecord.FinalAccountStatementUploaded.metadata.createdAt,\n    unionRecord.FinalAccountStatementUploaded.closingBalance,\n    ROW_NUMBER() OVER(PARTITION BY unionRecord.FinalAccountStatementUploaded.accountId ORDER BY unionRecord.FinalAccountStatementUploaded.metadata.createdAt DESC) AS ROW\n  FROM\n    `data-engineering-prod.raw_bast_secure.bast_statement_uploaded`\n  WHERE\n    unionRecord.FinalAccountStatementUploaded.accountId IS NOT NULL \n    \n  UNION ALL\n    \n  SELECT\n    unionRecord.FinalAccountStatementUploaded.accountId,\n    unionRecord.FinalAccountStatementUploaded.metadata.createdAt,\n    unionRecord.FinalAccountStatementUploaded.closingBalance,\n    ROW_NUMBER() OVER(PARTITION BY unionRecord.FinalAccountStatementUploaded.accountId ORDER BY unionRecord.FinalAccountStatementUploaded.metadata.createdAt DESC) AS ROW\n  FROM\n    `data-engineering-prod.raw_orex_secure.orex_statement_uploaded`\n  WHERE\n    unionRecord.FinalAccountStatementUploaded.accountId IS NOT NULL ),\n  cte_data AS (\n  SELECT\n    b.Account_No AS accountId,\n    b.Current_Balance AS currentBalance,\n    fs.createdAt AS finalStatementUploadTime,\n    ROUND(fs.closingBalance\/100,2) AS finalClosingBalance,\n    sub.Is_Active_Subscription,\n    sub.DD_Amount,\n    sub.DD_Day_Of_Month\n  FROM\n    cte_final_statements AS fs\n  LEFT JOIN\n    `data-engineering-prod.product_orion_secure.current_balances` AS b\n  ON\n    fs.accountId = b.Account_No\n  LEFT JOIN\n    cte_most_recent_subscription sub\n  ON\n    b.Account_No = sub.Account_No\n  WHERE\n    sub.ROW = 1\n    AND fs.ROW = 1),\n  final_refund_data AS (\n  SELECT\n    *,\n    ROW_NUMBER() OVER(PARTITION BY serviceAccountId, amount ORDER BY metadata.createdAt DESC) AS refund_account_amount_row\n  FROM\n    `data-engineering-prod.raw_payments_secure.payments_refund_statusUpdated`\n  WHERE status != 'requested'\n  ORDER BY\n    metadata.createdAt DESC)\nSELECT\n  cte_data.*,\n  acc.status,\n  CASE\n    WHEN DATE_DIFF(CURRENT_DATE(), DATE(finalStatementUploadTime), DAY) < 13 THEN \"In previous 12 days\"\n    ELSE \"Older than 12 days\"\n  END AS isLast12Days,\n  CASE\n    WHEN finalClosingBalance = 0 THEN \"Zero balance\"\n    WHEN finalClosingBalance > 0 THEN \"Positive closing balance\"\n    WHEN finalClosingBalance < 0 THEN \"Negative closing balance\"\n  END AS finalBalanceStatus,\n  CASE\n    WHEN currentBalance = 0 THEN \"Zero balance\"\n    WHEN currentBalance > 0 THEN \"Positive balance\"\n    WHEN currentBalance < 0 THEN \"Negative balance\"\n  END AS currentBalanceStatus,\n  frd.status AS finalRefundStatus,\n  ROUND(frd.amount\/100,2) AS finalRefundAmount,\n  frd.refundExpectedDate,\n  frd.metadata.createdAt AS refundEventCreation,\n  ARRAY_TO_STRING(frd.reason, '--') AS refundFailureReason,\n  CASE\n    WHEN finalClosingBalance <= 0 THEN \"Final balance zero or negative\"\n    WHEN finalClosingBalance = ROUND(frd.amount\/100,2) THEN \"Refund matches final balance\"\n    WHEN finalClosingBalance != ROUND(frd.amount\/100,2) THEN \"Refund doesn't matches final balance\"\n  END AS finalRefundCheck\nFROM\n  cte_data\nLEFT JOIN\n  `data-engineering-prod.product_orion.accounts_extract` acc\nON\n  cte_data.accountId = acc.Account_No\nLEFT JOIN\n  final_refund_data frd\nON\n  cte_data.accountId = frd.serviceAccountId AND cte_data.finalClosingBalance = ROUND(frd.amount\/100,2)\nWHERE\n  acc.status = 'active'\n  AND (frd.refund_account_amount_row = 1 OR frd.refund_account_amount_row IS NULL)\nORDER BY\n  finalStatementUploadTime DESC"},"data-engineering-prod:product_orion_secure.finalled_account_failed_refunds":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.finalled_account_failed_refunds","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/finalled_account_failed_refunds","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/finalled_account_failed_refunds","table_id":"finalled_account_failed_refunds","time_partitioning":null,"view_query":"SELECT * FROM `data-engineering-prod.product_orion_secure.finalled_account_balances` where refundFailureReason is not null"},"data-engineering-prod:product_orion_secure.finalled_account_non_zero_balance_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.finalled_account_non_zero_balance_snapshots","location":"EU","num_bytes":137665714,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/finalled_account_non_zero_balance_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/finalled_account_non_zero_balance_snapshots","table_id":"finalled_account_non_zero_balance_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.forecast_EOC_balance_v2":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.forecast_EOC_balance_v2","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/forecast_EOC_balance_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/forecast_EOC_balance_v2","table_id":"forecast_EOC_balance_v2","time_partitioning":null,"view_query":"WITH base as (SELECT acc.account_no,\n                    s.DD_Amount,\n                    s.DD_Day_Of_Month,\n                    c.startDate as Customer_Contract_Start_Date,\n                    c.endDate as Customer_Contract_End_Date,\n                    CAST(CB.current_balance AS FLOAT64) AS Current_Balance,\n                    case when s.account_no is not null then 1 else 0 end as Has_Active_DD,\n                    count(distinct d.calendar_date) as Number_Of_Payments_Remaining,\n                    ifnull(s.DD_Amount,0)*count(d.calendar_date) as Forecast_Payments\n              FROM `data-engineering-prod.product_orion.accounts` acc\n              left join `data-engineering-prod.product_payments.subscriptions` s on s.account_no=acc.account_no\n                                                                                        and s.is_active_subscription=1         \n              left JOIN  `data-engineering-prod.product_orion_secure.current_balances`  AS CB ON acc.Account_No = CB.Account_No                 \n             INNER JOIN `data-engineering-prod.product_andromeda_secure.contracts` c on c.serviceAccountID = acc.account_no\n                                                                                       and current_Date between c.startDate and c.EndDate\n              LEFT JOIN  `data-engineering-prod.raw_mis.Reference_dim_Date`                   D ON D.Calendar_Date BETWEEN CURRENT_DATE() AND c.enddate\n                                                                                             and EXTRACT(DAY FROM D.calendar_date) = s.DD_Day_Of_Month\n             group by account_no,\n               s.DD_Amount,\n               DD_Day_Of_Month,\n               Customer_Contract_Start_Date,\n               Customer_Contract_End_Date,\n               Has_Active_DD,\n               Current_Balance),\n\nlatest_forecast_consumption_cte AS (\n                              SELECT\n                                mpxn,\n                                forecastedAnnualConsumption\n                              FROM \n                                    (SELECT\n                                        mpxn,\n                                        forecastedAnnualConsumption,\n                                        row_number() over (partition by mpxn order by forecastedAnnualConsumptionEffectiveFrom desc) as seq \n                                      FROM \n                                          `data-engineering-prod.product_andromeda_secure.supply_points`)\n                              where seq=1),\n                                                   \nprojected_consumption_cte as ( select fc.mpxn, \n                                      fc.forecastedAnnualConsumption,\n                                      pp.projectedConsumption\n                            from latest_forecast_consumption_cte fc\n                            left join (\n                                  SELECT event.ElectricityAnnualProjectionEvent.mpan as MPXN,  \n                                        event.ElectricityAnnualProjectionEvent.effectiveFrom,\n                                        event.ElectricityAnnualProjectionEvent.projectedConsumption,\n                                        row_number() over (partition by event.ElectricityAnnualProjectionEvent.mpan order by event.ElectricityAnnualProjectionEvent.effectiveFrom desc) as seq\n                                  FROM `data-engineering-prod.landing_andromeda.rac_personal_projections_calculated_v3`\n\n                                  union all \n\n                                  SELECT event.GasAnnualProjectionEvent.mprn as MPXN,  \n                                        event.GasAnnualProjectionEvent.effectiveFrom,\n                                        event.GasAnnualProjectionEvent.projectedConsumption,\n                                        row_number() over (partition by event.GasAnnualProjectionEvent.mprn order by event.GasAnnualProjectionEvent.effectiveFrom desc) as seq\n                                  FROM `data-engineering-prod.landing_andromeda.rac_personal_projections_calculated_v3`\n                                  ) pp on pp.mpxn=fc.mpxn \n                                        and pp.seq=1),\n      \nforecast_charges_cte AS (SELECT con.serviceAccountId as Account_No,\n                             sum(currentstandingRate + daily_coefficient*forecastedAnnualConsumption*currentunitRate) as Forecast_Charges,\n                             sum(currentstandingRate + daily_coefficient*projectedConsumption*currentunitRate) as Forecast_Charges_Personal_Projection\n                            FROM        projected_consumption_cte                                   AS pc\n                            INNER JOIN `data-engineering-prod.product_andromeda_secure.contracts` AS con   on pc.mpxn=con.mpxn \n                                                                                            and current_Date between con.startDate and con.EndDate\n                            inner join  `data-engineering-prod.landing_payments_secure.static_billing_coefficients_for_payments_use_only` AS bc ON LOWER(bc.fuel) = LOWER(con.fuel) \n                            WHERE\n                            bc.SettlementDate >= Current_date\n                            AND bc.SettlementDate <= con.EndDate\n                            group by con.serviceAccountId\n                            )\n \nSELECT DISTINCT\n  base.Account_No,\n  base.Customer_Contract_Start_Date,\n  base.Customer_Contract_End_Date,\n  base.Number_Of_Payments_Remaining,\n  base.DD_Amount AS Current_DD_Amount,\n  base.Current_Balance,\n  B.Forecast_Charges,\n  base.Forecast_Payments,\n  base.Current_Balance\n    -B.Forecast_Charges\n      +base.Forecast_Payments AS Forecast_Balance,\n  base.Current_Balance\n    -B.Forecast_Charges_Personal_Projection\n      +base.Forecast_Payments AS Forecast_Balance_Personal_Projection,\n      B.Forecast_Charges_Personal_Projection,\n      base.Has_Active_DD\nFROM\n            base\nleft JOIN  forecast_charges_cte  AS B ON base.Account_No = B.Account_No"},"data-engineering-prod:product_orion_secure.gap_in_charge_exceptions_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.gap_in_charge_exceptions_extract","location":"EU","num_bytes":20902111,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/gap_in_charge_exceptions_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/gap_in_charge_exceptions_extract","table_id":"gap_in_charge_exceptions_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.gap_in_charges_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.gap_in_charges_snapshots","location":"EU","num_bytes":305363086,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/gap_in_charges_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/gap_in_charges_snapshots","table_id":"gap_in_charges_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.gas_settlement_gap_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.gas_settlement_gap_snapshots","location":"EU","num_bytes":430637771,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/gas_settlement_gap_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/gas_settlement_gap_snapshots","table_id":"gas_settlement_gap_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.manual_exceptions_performance_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.manual_exceptions_performance_extract","location":"EU","num_bytes":365633,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/manual_exceptions_performance_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/manual_exceptions_performance_extract","table_id":"manual_exceptions_performance_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.manual_process_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.manual_process_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/manual_process_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/manual_process_snapshots","table_id":"manual_process_snapshots","time_partitioning":null,"view_query":"with cte_first_snapshots as\n(\n  select Task_ID,\n         Snapshot_Date as First_Snapshot_Date,\n         Time_Taken,\n         Proportion_Required_For,\n         row_number() over (partition by Task_ID order by Snapshot_Date asc) as first_snapshot_rownum\n  from `data-engineering-prod.raw_orion_migration_secure.manual_process_snapshots`\n)\n-- Data for everything once it's being snapshotted\nselect snap.Snapshot_Date,\n       stat.* except(Weekly_Volume),\n       cast(stat.Weekly_Volume as float64) as Weekly_Volume,\n       cast(snap.Time_Taken as float64) as Time_Taken,\n       cast(snap.Proportion_Required_For as float64) as Proportion_Required_For,\n       cast((stat.Weekly_Volume * snap.Proportion_Required_For * snap.Time_Taken) \/ 60 as float64) as Total_Hours_Per_Week\nfrom `data-engineering-prod.raw_orion_migration_secure.manual_process_snapshots` snap\nINNER join `data-engineering-prod.raw_orion_migration_secure.manual_processes_static_data` stat on snap.Task_ID = stat.Task_ID\nunion all\n-- Processes we've added retrospectively need to have their first snapshot timings applied for all dates back to when the process was applied\nselect d.Calendar_Date as Snapshot_Date,\n       stat.* except(Weekly_Volume),\n       cast(stat.Weekly_Volume as float64) as Weekly_Volume,\n       cast(fs.Time_Taken as float64) as Time_Taken,\n       cast(fs.Proportion_Required_For as float64) as Proportion_Required_For,\n       cast((stat.Weekly_Volume * fs.Proportion_Required_For * fs.Time_Taken) \/ 60 as float64) as Total_Hours_Per_Week\nfrom cte_first_snapshots fs\ninner join `data-engineering-prod.raw_orion_migration_secure.manual_processes_static_data` stat on fs.Task_ID = stat.Task_ID\ninner join `data-engineering-prod.reference.tbl_Date` d on d.Calendar_Date between stat.First_Applied_Date and date_add(fs.First_Snapshot_Date, interval -1 DAY)\nwhere fs.first_snapshot_rownum = 1\norder by Snapshot_Date, Total_Hours_Per_Week desc"},"data-engineering-prod:product_orion_secure.manual_tasks_performance_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.manual_tasks_performance_extract","location":"EU","num_bytes":14873062,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/manual_tasks_performance_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/manual_tasks_performance_extract","table_id":"manual_tasks_performance_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.migrated_accounts_counts_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.migrated_accounts_counts_extract","location":"EU","num_bytes":22520,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/migrated_accounts_counts_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/migrated_accounts_counts_extract","table_id":"migrated_accounts_counts_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.migrated_accounts_counts_hourly":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.migrated_accounts_counts_hourly","location":"EU","num_bytes":40,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/migrated_accounts_counts_hourly","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/migrated_accounts_counts_hourly","table_id":"migrated_accounts_counts_hourly","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.most_recent_account_customer_binding":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.most_recent_account_customer_binding","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/most_recent_account_customer_binding","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/most_recent_account_customer_binding","table_id":"most_recent_account_customer_binding","time_partitioning":null,"view_query":"WITH binding AS (\n  SELECT *,\n         ROW_NUMBER() OVER (PARTITION BY accountId, customerId ORDER BY metadata.createdAt DESC, commsPreference) AS RN\n  FROM `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated`,\n  UNNEST (accountCommsPreference) AS commsPreference\n  )\nSELECT accountId,\n       customerId,\n       status,\n       isPrimaryCustomer,\n       isFinanciallyLiable,\n       commsPreference\nFROM binding\nWHERE RN = 1"},"data-engineering-prod:product_orion_secure.most_recent_ddMandate_status":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.most_recent_ddMandate_status","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/most_recent_ddMandate_status","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/most_recent_ddMandate_status","table_id":"most_recent_ddMandate_status","time_partitioning":null,"view_query":"WITH\n  binding AS (\n  SELECT\n    *,\n    ROW_NUMBER() OVER (PARTITION BY serviceAccountId ORDER BY statusDateTime DESC) AS RN\n  FROM\n    `data-engineering-prod.landing_payments_secure.payments_mandateEvent_updated_v2`)\nSELECT\n  *\nFROM\n  binding\nWHERE\n  RN = 1"},"data-engineering-prod:product_orion_secure.move_out_journeys":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.move_out_journeys","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys","table_id":"move_out_journeys","time_partitioning":null,"view_query":"with cte as\n(\nwith cte_latest_contract as\n(\n  select ctr.*,\n  row_number() over (partition by serviceAccountId order by startDate desc) as row_num\n  from `data-engineering-prod.product_andromeda_secure.contracts` ctr\n),\ncte_requests_union as\n(\n  select coalesce(max(sheet.Request_Timestamp), cast(bmo.created_date as datetime)) as Request_Timestamp,\n         bmo.account_id as Account_No,\n         max(sheet.Past_or_Future) as Past_or_Future,\n         bmo.move_out_date as Move_Out_Date,\n         bmo.move_out_date as Tenancy_End_Date,\n         bmo.cancelled as Move_Out_Cancelled\n  from  `data-engineering-prod.product_orion_secure.bast_move_out_copy` bmo\n  left join `data-engineering-prod.raw_orion_migration_secure.move_out_requests` sheet on bmo.account_id = sheet.Account_No\n                                                                                      and bmo.Move_Out_Date = sheet.Tenancy_End_Date\n  group by bmo.account_id, bmo.move_out_date, bmo.created_date, bmo.cancelled \n)\nselect mo.*,\n       cm.mpxn as Meter_Point_No,\n       cm.endDate as Contract_End_Date,\n       case\n        when cm.endDate = mo.tenancy_end_date then 'Updated correctly'\n        when cm.endDate = date_add(mo.tenancy_end_date, interval -1 day) then 'Updated correctly'\n        WHEN cm.endDate > mo.tenancy_end_date THEN 'Needs updating'\n        WHEN cm.endDate < mo.tenancy_end_date THEN 'Ends before move out'\n       END as Contract_Status,\n       lj.lossDate\nfrom cte_requests_union mo\nleft join cte_latest_contract cm on mo.Account_No = cm.serviceAccountId\n                                and cm.row_num = 1\nleft join `data-engineering-prod.product_andromeda_secure.loss_journeys_detailed` lj on mo.Account_No = lj.serviceAccountId # PJD - changed from loss_journeys to cut down query size\nleft join `data-engineering-prod.raw_orion_migration_secure.probate_responses` p on mo.Account_No = p.Account_No\nwhere (lj.lossDate is null or lj.lossDate > mo.Tenancy_End_Date)\n  and p.Account_No is null\n)\nselect *\nfrom cte\nwhere Contract_Status is not null"},"data-engineering-prod:product_orion_secure.move_out_journeys_detailed":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.move_out_journeys_detailed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys_detailed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys_detailed","table_id":"move_out_journeys_detailed","time_partitioning":null,"view_query":"with cte_final_account_statements as\n(\n  select unionRecord.FinalAccountStatementUploaded.accountId,\n         min(universal_metadata.createdAt) as Final_Statement_Created_Datetime\n  from `data-engineering-prod.raw_orex_secure.orex_statement_uploaded`\n  where unionRecord.FinalAccountStatementUploaded.accountId is not null\n  group by unionRecord.FinalAccountStatementUploaded.accountId\n),\ncte_balances as\n(\n  select bu.accountId,\n         bu.balance,\n         row_number() Over (partition by bu.accountId order by bu.balanceUpdateTime desc) as account_rownum\n  from `data-engineering-prod.raw_orex_secure.orex_balance_updated` bu\n)\nselect mo.*,\n       case\n        when s.Account_No is not null then 'Has Active DD'\n        ELSE 'No DD Set Up'\n       END as DD_Status,\n       fs.Final_Statement_Created_Datetime,\n       cast(b.balance as FLOAT64) as Current_Balance,\n       case\n        when mi.Consumer_No is not null then 'Move In Found'\n        ELSE 'No Move In'\n       END Has_Associated_Move_In\nfrom `data-engineering-prod.product_orion_secure.move_out_journeys` mo\nleft join `data-engineering-prod.reporting_crm.v_Consumer` mi on mo.Meter_Point_No = mi.Meter_Point_No\n                                       and mi.Consumer_Supply_Start_Date >= mo.Tenancy_End_Date\nleft join cte_balances b on mo.Account_No = b.accountId\n                        and b.account_rownum = 1\nleft join `data-engineering-prod.product_payments.subscriptions` s on mo.Account_No = s.Account_No\n                                            and s.Is_Active_Subscription = 1\nleft join cte_final_account_statements fs on mo.Account_No = fs.accountId"},"data-engineering-prod:product_orion_secure.move_out_journeys_for_hugh":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.move_out_journeys_for_hugh","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys_for_hugh","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys_for_hugh","table_id":"move_out_journeys_for_hugh","time_partitioning":null,"view_query":"select mo.*,\n       cm.mpxn as Meter_Point_No,\n       cm.endDate as Contract_End_Date,\n       case\n        when cm.endDate = mo.tenancy_end_date then 'Updated correctly'\n        WHEN cm.endDate > mo.tenancy_end_date THEN 'Needs updating'\n        WHEN cm.endDate < mo.tenancy_end_date THEN 'Ends before move out'\n       END as Contract_Status,\n       cm.endDate as Charge_Mandate_End_Date,\n       case\n        when cm.endDate = mo.tenancy_end_date then 'Updated correctly'\n        WHEN cm.endDate > mo.tenancy_end_date THEN 'Needs updating'\n        WHEN cm.endDate < mo.tenancy_end_date THEN 'Ends before move out'\n       END as Charge_Mandate_Status\nfrom `data-engineering-prod.raw_orion_migration_secure.move_out_requests` mo\nleft join `data-engineering-prod.product_andromeda_secure.contracts` cm on mo.Account_No = cm.serviceAccountId"},"data-engineering-prod:product_orion_secure.move_out_journeys_old":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.move_out_journeys_old","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys_old","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_journeys_old","table_id":"move_out_journeys_old","time_partitioning":null,"view_query":"with cte as\n(\nwith cte_latest_contract as\n(\n  select ctr.*,\n  row_number() over (partition by serviceAccountId order by startDate desc) as row_num\n  from `data-engineering-prod.product_andromeda_secure.contracts` ctr\n),\ncte_requests_union as\n(\n  select Request_Timestamp,\n         Account_No,\n         Past_or_Future,\n         Move_Out_Date,\n         Tenancy_End_Date\n  from `data-engineering-prod.raw_orion_migration_secure.move_out_requests`\n  union all\n  select cast(bast.Move_Out_Date as datetime) as Request_Timestamp,\n         cast(bast.Account_No as string) as Account_No,\n         null as Past_or_Future,\n         bast.Move_Out_Date,\n         bast.Move_Out_Date as Tenancy_End_Date\n  from `data-engineering-prod.u_peter_grace.move_outs_from_bast_20191011` bast\n  left join `data-engineering-prod.raw_orion_migration_secure.move_out_requests` sheet on cast(bast.Account_No as string) = sheet.Account_No\n  where sheet.Account_No is null\n)\nselect mo.*,\n       cm.mpxn as Meter_Point_No,\n       cm.endDate as Contract_End_Date,\n       case\n        when cm.endDate = mo.tenancy_end_date then 'Updated correctly'\n        when cm.endDate = date_add(mo.tenancy_end_date, interval -1 day) then 'Updated correctly'\n        WHEN cm.endDate > mo.tenancy_end_date THEN 'Needs updating'\n        WHEN cm.endDate < mo.tenancy_end_date THEN 'Ends before move out'\n       END as Contract_Status,\n       lj.lossDate\nfrom cte_requests_union mo\nleft join cte_latest_contract cm on mo.Account_No = cm.serviceAccountId\n                                and cm.row_num = 1\nleft join `data-engineering-prod.product_andromeda_secure.loss_journeys` lj on mo.Account_No = lj.serviceAccountId\nwhere (lj.lossDate is null or lj.lossDate > mo.Tenancy_End_Date)\n)\nselect *\nfrom cte\nwhere Contract_Status is not null"},"data-engineering-prod:product_orion_secure.move_out_work_items":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.move_out_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/move_out_work_items","table_id":"move_out_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array,\n         row_number() over (partition by wi.entityUri order by wi.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where entityUri like 'accounts%cancel-move-out%'\n)\nselect wi.key_array[offset(2)] as serviceAccountId,\n       wi.key_array[offset(3)] as action,\n       wi.* except(key_array, row_num)\nfrom cte_work_items wi"},"data-engineering-prod:product_orion_secure.oep_reporting_contractTariff_draft":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.oep_reporting_contractTariff_draft","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/oep_reporting_contractTariff_draft","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/oep_reporting_contractTariff_draft","table_id":"oep_reporting_contractTariff_draft","time_partitioning":null,"view_query":"WITH tariffRates AS (SELECT\n  DISTINCT(tariffId),\n  planName,\n  profileClass,\n  CASE\n    WHEN unitRateData.clockingTimeLabel != 'anytime' THEN \"Multi-rate\"\n    WHEN unitRateData.clockingTimeLabel = 'anytime' THEN \"Single-rate\"\n    ELSE \"Unknown\"\n  END AS tariffRates\nFROM\n  `data-engineering-prod.product_andromeda_secure.tariffs`, UNNEST(unitRates) AS unitRateData\n), data AS (\nSELECT \n  fuel, \n  tariffRates,\n--  COUNT(*) AS count,\n  CASE\n    WHEN c.startDate <= CURRENT_DATE() AND c.endDate >= CURRENT_DATE() THEN \"Active today (fixed)\"\n    WHEN c.startDate <= CURRENT_DATE() AND c.endDate IS NULL THEN \"Active today (variable)\"\n    WHEN c.startDate > CURRENT_DATE() THEN \"Future contract\"\n    WHEN c.endDate < CURRENT_DATE() THEN \"Expired contract\"\n    ELSE \"Unknown\"\n  END AS status\nFROM `data-engineering-prod.product_andromeda_secure.contracts` c \nLEFT JOIN tariffRates t ON c.tariffId = t.tariffId\n)\nSELECT *  FROM data GROUP BY fuel, tariffRates, status ORDER BY fuel ASC, tariffRates DESC, status ASC\n"},"data-engineering-prod:product_orion_secure.oep_reporting_customerGroupLogins_draft":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.oep_reporting_customerGroupLogins_draft","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/oep_reporting_customerGroupLogins_draft","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/oep_reporting_customerGroupLogins_draft","table_id":"oep_reporting_customerGroupLogins_draft","time_partitioning":null,"view_query":"WITH\n  customerData AS (\n  SELECT\n    accountId,\n    customerId,\n    accountCommsPreference,\n    isPrimaryCustomer,\n    isFinanciallyLiable,\n    metadata.createdAt AS lastUpdated,\n    ROW_NUMBER() OVER(PARTITION BY customerId, accountId ORDER BY metadata.createdAt DESC) AS ROW\n  FROM\n    `data-engineering-prod.raw_orex_secure.orex_account_customer_binding_updated`\n  WHERE status = 'active'\n  ORDER BY\n    ROW DESC ),\n  loginData AS (\n    SELECT userId as customerId, COUNT(*) as loginCount\n    FROM `data-engineering-prod.landing_identity.identity_loginlogout_v1`\n    WHERE eventType = \"LoggedIn\" GROUP BY customerId ),\n  data AS (\n  SELECT\n    c.accountId,\n    c.customerId,\n    commsPreference,\n    c.isPrimaryCustomer,\n    c.isFinanciallyLiable,\n    c.lastUpdated AS lastUpdated,\n    l.loginCount,\n    ROW_NUMBER() OVER(PARTITION BY c.customerId ORDER BY commsPreference DESC) AS prefRow\n  FROM\n    customerData c, UNNEST(accountCommsPreference) AS commsPreference\n  LEFT JOIN loginData l ON c.customerId = l.customerId\n  WHERE\n    c.row = 1\n  )\n\n  SELECT \n    isPrimaryCustomer,\n    isFinanciallyLiable,\n    commsPreference,\n    SUM(loginCount) AS loginSum,\n    count(*) as count,\n    CAST(ROUND(AVG(loginCount),0) AS INT64) AS averageLogins\nFROM data \n  WHERE prefRow = 1\n  GROUP BY isPrimaryCustomer, isFinanciallyLiable, commsPreference\n  ORDER BY isPrimaryCustomer DESC, isFinanciallyLiable DESC, commsPreference ASC, count DESC\n"},"data-engineering-prod:product_orion_secure.online_logins_extract":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.online_logins_extract","location":"EU","num_bytes":24696,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/online_logins_extract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/online_logins_extract","table_id":"online_logins_extract","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.orion_comms_sent":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.orion_comms_sent","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/orion_comms_sent","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/orion_comms_sent","table_id":"orion_comms_sent","time_partitioning":null,"view_query":"WITH\n  cte_orion_comms AS (\n  SELECT\n    metadata.createdAt AS Datetime,\n    commId AS Comm_ID,\n    customer.customerId AS Customer_ID,\n    status,\n    description,\n    channel AS Channel,\n    templateManifest.id AS Template_ID,\n    templateManifest.version AS Template_Version,\n    commDescription\n  FROM\n    `data-engineering-prod.landing_comms_secure.comms_feedback`\n  WHERE\n    customer.customerId LIKE 'ovo-energy:%'),\n  cte_triggered_comms AS (\n  SELECT\n    *\n  FROM\n    cte_orion_comms\n  WHERE\n    status = 'Pending'\n    AND description = 'Trigger for communication accepted' ),\n  cte_delivered_comms AS (\n  SELECT\n    Datetime,\n    Comm_ID\n  FROM\n    cte_orion_comms\n  WHERE\n    status = 'Delivered'\n    AND description = 'The comms has been successfully delivered.' ),\n  cte_opened_comms AS (\n  SELECT\n    Datetime,\n    Comm_ID\n  FROM\n    cte_orion_comms\n  WHERE\n    status = 'Delivered'\n    AND description = 'The email was opened by the customer.' )\nSELECT\n  t.Comm_ID,\n  t.Datetime AS Triggered_Datetime,\n  d.Datetime AS Delivered_Datetime,\n  o.Datetime AS Opened_Datetime,\n  Template_ID,\n  Template_Version,\n  Channel,\n  Customer_ID\nFROM\n  cte_triggered_comms t\nLEFT JOIN\n  cte_delivered_comms d\nON\n  t.Comm_ID = d.Comm_ID\nLEFT JOIN\n  cte_opened_comms o\nON\n  t.Comm_ID = o.Comm_ID"},"data-engineering-prod:product_orion_secure.pause_billing_work_items":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.pause_billing_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/pause_billing_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/pause_billing_work_items","table_id":"pause_billing_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array,\n         row_number() over (partition by wi.entityUri order by wi.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where entityUri like 'accounts%billing-control%'\n),\ncte_billing_actions as\n(\n  select ba.*,\n         row_number() over (partition by ba.accountId order by metadata.createdAt desc) as row_num\n  from `data-engineering-prod.landing_bast_secure.bast_account_billing_action_v1`  ba\n)\nselect wi.key_array[offset(2)] as serviceAccountId,\n       wi.* except(key_array, row_num),\n       ba.action,\n       ba.actionTimestamp\nfrom cte_work_items wi\ninner join cte_billing_actions ba on wi.key_array[offset(2)] = ba.accountId\n                                  and wi.row_num = ba.row_num"},"data-engineering-prod:product_orion_secure.potentially_incorrect_meter_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.potentially_incorrect_meter_snapshots","location":"EU","num_bytes":364724,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/potentially_incorrect_meter_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/potentially_incorrect_meter_snapshots","table_id":"potentially_incorrect_meter_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.report_payments_transactions_v1":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.report_payments_transactions_v1","location":"EU","num_bytes":272824693,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/report_payments_transactions_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/report_payments_transactions_v1","table_id":"report_payments_transactions_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.report_transactions_v1":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.report_transactions_v1","location":"EU","num_bytes":1990580411,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/report_transactions_v1","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/report_transactions_v1","table_id":"report_transactions_v1","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.report_transactions_v2":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.report_transactions_v2","location":"EU","num_bytes":1535151478,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/report_transactions_v2","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/report_transactions_v2","table_id":"report_transactions_v2","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.reporting_billed":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.reporting_billed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/reporting_billed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/reporting_billed","table_id":"reporting_billed","time_partitioning":null,"view_query":"SELECT\n  CONCAT(t.id,'-',t.type,'-',CAST(t.year AS STRING),'-',FORMAT(\"%02d\",t.month)) AS Transaction_ID,\n  NULL AS Account_Balance,\n  t.id AS Account_No,\n  NULL AS Amount_Paid,\n  NULL AS Client_Process,\n  NULL AS Consumer_No,\n  CONCAT(CAST(t.year AS STRING), FORMAT(\"%02d\",t.month+1)) AS Created_YYYYMM,\n  NULL AS End_Use_ID,\n  NULL AS Extra_Description,\n  NULL AS File_ID_Reference,\n  NULL AS Invoice_Number,\n  NULL AS Ledger_Type_Code,\n  NULL AS Statement_Number,\n  CASE\n    WHEN t.type = \"vat\" THEN t.amount\n    ELSE 0\n  END AS Tax_Amount,\n  CASE\n    WHEN t.type <> \"vat\" THEN t.amount\n    ELSE 0\n  END AS Transaction_Amount,\n  DATE_ADD(DATE_ADD(CAST(CONCAT(CAST(t.year AS STRING),'-',FORMAT(\"%02d\",t.month+1),'-','01') AS date),INTERVAL 1 MONTH),INTERVAL -1 DAY) AS Transaction_Date,\n  DATETIME(t.year ,CAST(FORMAT(\"%02d\",t.month+1) AS INT64),1, 23, 59, 59) AS Transaction_Datetime,\n  NULL AS Transaction_Description,\n  CASE\n    WHEN t.type IN ('standing', 'consumption') THEN CAST(CONCAT(CAST(t.year AS STRING),'-',FORMAT(\"%02d\",t.month+1),'-','01') AS date)\n  END AS Transaction_Period_Start,\n  CASE\n    WHEN t.type IN ('standing', 'consumption') THEN DATE_ADD(DATE_ADD(CAST(CONCAT(CAST(t.year AS STRING),'-',FORMAT(\"%02d\",t.month+1),'-','01') AS date),INTERVAL 1 MONTH),INTERVAL -1 DAY)\n  END AS Transaction_Period_End,\n  NULL AS Transaction_Status_ID,\n  t.type AS Transaction_Type_Code,\n  UPPER(IFNULL(SUBSTR(t.fuel,1,1),\n      'Z')) AS Utility_Type,\n  \"ORION\" AS Billing_System,\n  NULL AS Meter_Point_No,\n  t.type AS Transaction_Type_Description,\n  t.type AS Transaction_Type_Category\nFROM\n  `data-engineering-prod.raw_orex_secure.report_transactions` t\nWHERE\n  t.amount != 0"},"data-engineering-prod:product_orion_secure.statements_uploaded":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.statements_uploaded","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/statements_uploaded","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/statements_uploaded","table_id":"statements_uploaded","time_partitioning":null,"view_query":"WITH statementData AS (\n  --OREX Data\n  SELECT universal_metadata.createdAt,\n         unionRecord.StatementUploaded.accountId AS accountID,\n         NULL AS supplyPoint,\n         \"Regular statement\" AS statementType\n  FROM `data-engineering-prod.raw_orex_secure.orex_statement_uploaded`\n  WHERE unionRecord.StatementUploaded.accountId IS NOT NULL\n  \n  UNION ALL\n  \n  SELECT universal_metadata.createdAt,\n         unionRecord.FinalAccountStatementUploaded.accountId AS accountID,\n         NULL AS supplyPoint,\n         \"Final statement\" AS statementType\n  FROM `data-engineering-prod.raw_orex_secure.orex_statement_uploaded`\n  WHERE unionRecord.FinalAccountStatementUploaded.accountId IS NOT NULL\n  \n  UNION ALL\n  \n  SELECT universal_metadata.createdAt,\n         unionRecord.FinalSupplyPointStatementUploaded.accountId AS accountID,\n         unionRecord.FinalSupplyPointStatementUploaded.supplyPoint AS supplyPoint,\n         \"Final supply statement\" AS statementType\n  FROM `data-engineering-prod.raw_orex_secure.orex_statement_uploaded`\n  WHERE unionRecord.FinalSupplyPointStatementUploaded.accountId IS NOT NULL\n  \n  UNION ALL\n  \n  --BAST DATA\n  SELECT kafkaData.insertTime,\n         unionRecord.StatementUploaded.accountId AS accountID,\n         NULL AS supplyPoint,\n         \"Regular statement\" AS statementType\n  FROM `data-engineering-prod.raw_bast_secure.bast_statement_uploaded`\n  WHERE unionRecord.StatementUploaded.accountId IS NOT NULL\n  \n  UNION ALL\n  \n  SELECT kafkaData.insertTime,\n         unionRecord.FinalAccountStatementUploaded.accountId AS accountID,\n         NULL AS supplyPoint,\n         \"Final statement\" AS statementType\n  FROM `data-engineering-prod.raw_bast_secure.bast_statement_uploaded`\n  WHERE unionRecord.FinalAccountStatementUploaded.accountId IS NOT NULL\n),\n\nlatestDate AS (\n  SELECT u.createdAt,\n         u.accountId,\n         ROW_NUMBER() OVER(PARTITION BY u.accountId ORDER BY u.createdAt desc) AS Row_No\n  FROM statementData u \n)\n\nSELECT u.createdAt AS Statement_Uploaded_DateTime,\n       u.accountId AS Account_No,\n       u.statementType AS Statement_Type,\n       u.supplyPoint AS Meter_Point_No,\n       CAST(d.createdAt AS DATE) AS Statements_Up_To\nFROM statementData u\nLEFT JOIN latestDate d on u.accountId = d.accountId WHERE d.Row_No = 1"},"data-engineering-prod:product_orion_secure.transaction_type_count_by_serviceAccount":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.transaction_type_count_by_serviceAccount","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/transaction_type_count_by_serviceAccount","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/transaction_type_count_by_serviceAccount","table_id":"transaction_type_count_by_serviceAccount","time_partitioning":null,"view_query":"WITH uniqueTransactions AS\n(\n  SELECT \n    *,    \n    ROW_NUMBER() OVER (PARTITION BY transaction.transactionId, transaction.type ORDER BY balanceUpdateTime desc) AS RN\n    FROM `data-engineering-prod.landing_orex.orex_balance_updated_v2`\n)\nSELECT \n  accountId AS serviceAccountID, \n  transaction.type AS transactionType, \n  COUNT(*) AS count \nFROM uniqueTransactions\nGROUP BY accountId, transaction.type"},"data-engineering-prod:product_orion_secure.transaction_work_items":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.transaction_work_items","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/transaction_work_items","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/transaction_work_items","table_id":"transaction_work_items","time_partitioning":null,"view_query":"with cte_work_items as\n(\n  select wi.workItemId,\n         wi.status,\n         wi.statusChangeDateTime,\n         wi.statusNote,\n         wi.statusDueDate,\n         wi.statusChangeAuthor,\n         split(wi.entityUri, '\/') as key_array,\n         row_number() over (partition by wi.entityUri order by wi.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.raw_oot_secure.oot_work_item` wi\n  where entityUri like 'transactions%'\n),\ncte_transactions as\n(\n  select t.*,\n         row_number() over (partition by t.serviceAccountId, t.transactionType, t.transactionTimestamp order by t.metadata.createdAt desc) as row_num\n  from `data-engineering-prod.landing_orex_secure.orex_generic_transactions_v1` t\n)\nselect wi.key_array[offset(2)] as serviceAccountId, wi.key_array[offset(3)] as transactionType, timestamp_millis(cast(wi.key_array[offset(4)] as int64)) as transactionTimestamp,\n       t.amount, wi.* except(key_array)\nfrom cte_work_items wi\nleft join cte_transactions t on t.serviceAccountId = wi.key_array[offset(2)]\n                            and t.transactionType = wi.key_array[offset(3)]\n                            and t.transactionTimestamp = timestamp_millis(cast(wi.key_array[offset(4)] as int64))\n                            and t.row_num = wi.row_num"},"data-engineering-prod:product_orion_secure.unexpected_contract_length_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.unexpected_contract_length_snapshots","location":"EU","num_bytes":5087654,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/unexpected_contract_length_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/unexpected_contract_length_snapshots","table_id":"unexpected_contract_length_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.vpc_EC_region_correction":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.vpc_EC_region_correction","location":"EU","num_bytes":18971117,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_EC_region_correction","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_EC_region_correction","table_id":"vpc_EC_region_correction","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.vpc_apr20_region_mismatch":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.vpc_apr20_region_mismatch","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_apr20_region_mismatch","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_apr20_region_mismatch","table_id":"vpc_apr20_region_mismatch","time_partitioning":null,"view_query":"# Reporting for tariffs over the cap post-April VPC\n\n# Get caps for most recent cap date for DD only\nWITH priceCapRates AS (\n  SELECT region_name,\n         GSP,\n         GSP_Id as mpanPrefix,\n         case when GSP_Id='10' then 'EA'\n              when GSP_Id='11' then 'EM'\n              when GSP_Id='12' then 'NT'\n              when GSP_Id='13' then 'NW'\n              when GSP_Id='14' then 'WM'\n              when GSP_Id='15' then 'NO'\n              when GSP_Id='16' then 'NW'\n              when GSP_Id='17' then 'SC'\n              when GSP_Id='18' then 'SC'\n              when GSP_Id='19' then 'SE'\n              when GSP_Id='20' then 'SO'\n              when GSP_Id='21' then 'WA'\n              when GSP_Id='22' then 'SW'\n              when GSP_Id='23' then 'NE'\n         end as LDZ, # Align gas region notation\n         case when fuel='E' then 'electricity'\n              when fuel='G' then 'gas'\n         end as fuel, # Align fuel notation\n         case when profile_class='Gas' then '00'\n              when profile_class='PC1' then '01'\n              when profile_class='PC2' then '02'\n         end as profileclass, # Align profile class notation\n         standing_charge\/100 as standingRateCap, # Convert pence to pounds\n         rate\/100 as unitRateCap, # Convert pence to pounds\n         effective_from_date as capStart,\n         effective_to_date as capEnd\n  FROM `data-engineering-prod.custom_regulatory.tbl_Price_Cap_Rates_v2`\n  WHERE tariff_cap='SVT' # Standard Variable Tariffs - only applies to variable contracts\n    AND payment_type='D' # DD payments\n    AND effective_from_date='2020-04-01' # April caps only\n),\n# Get all contracts that are currently live\nallContracts AS (\n  SELECT DISTINCT c.serviceAccountId,\n                  c.mpxn,\n                  c.fuel,\n                  c.contractId,\n                  c.startDate,\n                  c.endDate,\n                  c.tariffId,\n                  c.tariffType,\n                  c.planName,\n                  t.region,\n                  t.profileClass\n  FROM `data-engineering-prod.product_andromeda_secure.contracts` c\n  INNER JOIN `data-engineering-prod.product_andromeda_secure.tariffs` t # Only need current tariff region and profile class here\n    ON c.tariffId=t.tariffId\n  WHERE c.endDate >= current_date()\n     OR c.endDate IS NULL\n),\n# Get all tariffs for Apr20 VPC\nallTariffs AS (\n  SELECT DISTINCT tariffId,\n                  type,\n                  fuel,\n                  planName,\n                  profileClass,\n                  region,\n                  exitFee,\n                  versionDescription,\n                  activeFrom,\n                  activeTo,\n                  # Split out day and night rates - if anytime, put for both\n                  IF(array_length(unitRates)=2,IF(unitRates[offset(0)].clockingTimeLabel='day',unitRates[offset(0)].unitRate,unitRates[offset(1)].unitRate),unitRates[offset(0)].unitRate) AS unitRateDay,\n                  IF(array_length(unitRates)=2,IF(unitRates[offset(0)].clockingTimeLabel='night',unitRates[offset(0)].unitRate,unitRates[offset(1)].unitRate),unitRates[offset(0)].unitRate) AS unitRateNight,\n                  standingRate\n  FROM `data-engineering-prod.product_andromeda_secure.tariffs` t\n  WHERE type='variable'\n    AND (versionDescription='01 Apr 2020' OR # Standard variable tariffs for Apr20 VPC\n         versionDescription='Switching overcharge VPC 1 Apr 2020' # Switching Overcharge rates for Apr20\n         )\n),\n# Get post VPC tariffs for the contract\nallContractsAndTariffs AS (\n  SELECT c.serviceAccountId,\n         c.mpxn,\n         c.fuel,\n         c.contractId,\n         c.startDate,\n         c.endDate,\n         c.tariffId as oldTariffId,\n         c.tariffType as oldTariffType,\n         c.planName as oldPlanName,\n         t.tariffId as newTariffId,\n         t.type as newTariffType,\n         t.planName as newPlanName,\n         t.versionDescription,\n         t.activeFrom,\n         t.activeTo,\n         t.profileClass as meterProfileClass,\n         IF(t.profileClass='02' and t.planName not like '%Economy 7', '01', t.profileClass) as tariffProfileClass, # PC2 accounts not on a PC2 tariff should compare to PC1 rates\n         t.region,\n         round(t.unitRateDay*0.58 + t.unitRateNight*0.42,5) as unitRate, # Multipliers for day\/night rates - will match up for anytime too\n         t.standingRate\n  FROM allContracts c\n  LEFT JOIN allTariffs t\n    ON (c.tariffId = t.tariffId) # Variable tariff IDs will remain the same post-VPC\n    OR (c.fuel=t.fuel AND # Need to find a variable tariff for fixed tariffs to roll on to\n        c.region=t.region AND\n        c.profileClass=t.profileClass AND\n        substr(c.planName,-1,1)=substr(t.planName,-1,1) # Economy7 -> Economy7\n        )\n  WHERE t.versionDescription='01 Apr 2020' AND # Only want standard tariffs\n        t.planName like '%Simpler%' # Cannot predict if customer would have warm home discount        \n),\n# Join everything above on to PP region data for all accounts\nfinal_data as (\nSELECT ac.*,\n       if(ac.fuel='electricity',pcr.GSP,pcr.LDZ) as correctRegion, # Gas and elec regions have different notation\n       pcr.mpanprefix as correctRegionMpanPrefix,\n       asp.loss_date as lossDate,\n       asp.supply_lifecycle as supplyLifecycle,\n       asp.migrated_date as migratedDate,\n       pcr.unitRateCap,\n       pcr.standingRateCap,\n       pcr.capStart,\n       case when ac.unitRate>pcr.unitRateCap or ac.standingRate>pcr.standingRateCap then 'Over the cap'\n            else 'Under the cap'\n       end as capComparison,\n       case when (ac.fuel='electricity' AND ac.region<>pcr.GSP) OR (ac.fuel='gas' AND ac.region<>pcr.LDZ) then 'Incorrect region'\n            else 'Correct region'\n       end as regionComparison\nFROM allContractsAndTariffs ac\nLEFT JOIN (select distinct account_no, utility_type_code, mpan_prefix from `data-science-retail.pricing_programme_solution.purified_alignment_gas_and_elec`) pp # Correct region data for account\n  ON pp.account_no=ac.serviceAccountID\n  AND pp.Utility_Type_Code=upper(substr(ac.fuel,1,1))\nLEFT JOIN priceCapRates pcr # Bring in price cap rates\n  ON pp.mpan_prefix=pcr.mpanprefix\n  AND ac.tariffProfileClass=pcr.profileClass\nLEFT JOIN `data-engineering-prod.product_orion.account_supply_points` asp # Bring in account data\n  ON ac.serviceAccountId=asp.account_no\n  AND ac.mpxn=asp.meter_point_no\n)\n# Filter out accounts where the region is correct or rate is under the cap\nSELECT *\nFROM final_data\nWHERE region<>correctRegion # Keep accounts with region mismatch\n   OR unitRate>unitRateCap # Keep accounts over cap\n   OR standingRate>standingRateCap\nORDER BY serviceAccountId,\n         fuel"},"data-engineering-prod:product_orion_secure.vpc_apr20_region_mismatch_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.vpc_apr20_region_mismatch_snapshots","location":"EU","num_bytes":20459714,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_apr20_region_mismatch_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_apr20_region_mismatch_snapshots","table_id":"vpc_apr20_region_mismatch_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_orion_secure.vpc_region_mismatch":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.vpc_region_mismatch","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_region_mismatch","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_region_mismatch","table_id":"vpc_region_mismatch","time_partitioning":null,"view_query":"# PROJECT PURIFY ALIGNMENT\n\n# Get caps for most recent cap date for DD only\nWITH priceCapRates AS (\n  SELECT *\n  FROM `data-engineering-prod.product_orion.price_cap_rates` r\n  WHERE Payment <> \"Standard\"\n--     AND capStart='2019-10-01'\n),\n# Get all contracts\nallContracts AS (\n  SELECT *\n  FROM `data-engineering-prod.product_andromeda_secure.contracts`\n),\n# Get all tariffs and add a row number by activeFrom date for each tariff ID\nallTariffs AS (\n  SELECT *,\n         ROW_NUMBER() OVER(PARTITION BY tariffId ORDER BY activeFrom DESC) as row\n  FROM `data-engineering-prod.product_andromeda_secure.tariffs`\n),\n# Get all tariffs for the contract (variable will change over time)\nallContractsAndTariffs AS (\n  SELECT c.serviceAccountId,\n         c.mpxn,\n         c.fuel,\n         c.contractId,\n         c.tariffId,\n         c.startDate,\n         c.endDate,\n         ROW_NUMBER() OVER(PARTITION BY contractId ORDER BY startDate DESC, COALESCE(activeFrom, '1970-01-01') DESC) as descRow,\n         ROW_NUMBER() OVER(PARTITION BY contractId ORDER BY startDate ASC, COALESCE(activeFrom, '1970-01-01') ASC) as ascRow,\n         t.type,\n         t.planName,\n         t.versionDescription,\n         t.activeFrom,\n         t.activeTo,\n         t.profileClass,\n         t.region,\n         t.standingRate,\n         t.unitRates\n  FROM allContracts c\n  LEFT JOIN allTariffs t ON c.tariffId = t.tariffId \n  WHERE (t.type = 'variable' AND ((t.activeFrom <= c.startDate AND COALESCE(t.activeTo, '2999-01-01') >= c.startDate)\n                              OR (t.activeFrom >= c.startDate AND t.activeFrom <= COALESCE(c.endDate, '2999-01-01'))))\n     OR t.type = 'fixed'\n),\n# ascRow and descRow will get the start and end of the contracts, even over tariff changes\ncontractsPricePaid AS (\n  SELECT serviceAccountId,\n         mpxn,\n         fuel,\n         contractId,\n         tariffId,\n         CASE WHEN ascRow = 1 THEN startDate\n              ELSE activeFrom\n         END AS priceStartDate,\n         CASE WHEN descRow = 1 THEN COALESCE(endDate, CURRENT_DATE())\n              ELSE activeTo\n         END AS priceEndDate,\n         type,\n         planName,\n         versionDescription,\n         profileClass,\n         region,\n         standingRate,\n         unitRates[offset(0)].unitRate AS unitRate\n  FROM allContractsandTariffs\n),\n# Join everything above on to PP region data for all accounts and filter out where the region doesn't match\naccounts AS (\nSELECT ac.*,\n       pp.correctRegion,\n       pcr.mpanprefix as correct_region_mpanprefix,\n       date_diff(if(current_date()>ac.priceEndDate,ac.priceEndDate,current_date()),ac.priceStartDate,DAY) as daysWrongRegion,\n       asp.loss_date,\n       asp.supply_lifecycle,\n       asp.migrated_date,\n       case when ac.type='variable' then pcr.unitratecap end as unitratecap,\n       pcr.capstart,\n       if(current_date() BETWEEN ac.priceStartDate and ac.priceEndDate,'Live','Historic') as tariffcurrentlylive\nFROM contractsPricePaid ac\nLEFT JOIN `data-science-retail.pricing_programme_solution.project_purify_gas_alignment` pp\n  ON pp.account_no=ac.serviceAccountID\nLEFT JOIN priceCapRates pcr\n  ON pp.account_gas_mpan_prefix=cast(pcr.mpanprefix as string)\n--   AND ac.type='variable'\nLEFT JOIN `data-engineering-prod.product_orion.account_supply_points` asp\n  ON ac.serviceAccountId=asp.account_no\n  AND ac.mpxn=asp.meter_point_no\nWHERE ((ac.priceStartDate BETWEEN pcr.capStart AND pcr.capEnd) \n       OR (pcr.capStart BETWEEN ac.priceStartDate AND COALESCE(ac.priceEndDate, CURRENT_DATE()))\n      )\n  AND correctregion<>ac.region\n  AND ac.fuel='gas'\n  AND capStart<=coalesce(asp.loss_date,'2999-01-01')\n)\n# Add on correct tariff and fix\nSELECT acc.*,\n       case when t.unitRate<acc.unitRate then 'Overcharged'\n            when t.unitRate=acc.unitRate then 'Charged correctly'\n            when t.unitRate>acc.unitRate then 'Undercharged'\n            else 'No current lookup tariff'\n       end as overCharged,\n       case when acc.type='fixed' then 'Fixed, no cap'\n            when unitratecap<acc.unitRate then 'Over cap'\n            when unitratecap>=acc.unitRate then 'Under cap'\n       end as overCap,\n       t.tariffId as correctTariff,\n       t.unitRates[offset(0)].unitRate AS correctUnitRate,\n       t.standingRate AS correctStandingRate,\n       case when acc.type='variable' and acc.unitRate>UnitRateCap and acc.priceStartDate>current_date() then 'Future variable tariff, will start over cap'\n            when acc.type='variable' and acc.unitRate>UnitRateCap and loss_date<=current_date() then 'Historic variable tariff, lost, was over cap'\n            when acc.type='variable' and acc.unitRate>UnitRateCap and acc.priceEndDate<current_date() then 'Historic variable tariff, was over cap'\n            when acc.type='variable' and acc.unitRate>UnitRateCap and loss_date>current_date() then 'Current variable tariff, pending loss, over cap'\n            when acc.type='variable' and acc.unitRate>UnitRateCap and acc.priceEndDate=current_date() then 'Current variable tariff, over cap'\n            when acc.type='variable' and acc.unitRate>UnitRateCap and acc.priceEndDate>current_date() then 'Current variable tariff, over cap, refixing'\n            when acc.type='variable' and acc.unitRate<=UnitRateCap and acc.priceStartDate>current_date() then 'Future variable tariff, will start under cap'\n            when acc.type='variable' and acc.unitRate<=UnitRateCap and loss_date<=current_date() then 'Historic variable tariff, lost, was under cap'\n            when acc.type='variable' and acc.unitRate<=UnitRateCap and acc.priceEndDate<current_date() then 'Historic variable tariff, was under cap'\n            when acc.type='variable' and acc.unitRate<=UnitRateCap and loss_date>current_date() then 'Current variable tariff, pending loss, under cap'\n            when acc.type='variable' and acc.unitRate<=UnitRateCap and acc.priceEndDate=current_date() then 'Current variable tariff, under cap'\n            when acc.type='variable' and acc.unitRate<=UnitRateCap and acc.priceEndDate>current_date() then 'Current variable tariff, under cap, refixing'\n            when acc.type='fixed' and loss_date>current_date() and acc.priceEndDate<loss_date then 'Fixed tariff, pending loss, rolls variable before loss date'\n            when acc.type='fixed' and loss_date>current_date() and acc.priceEndDate>=loss_date then 'Fixed tariff, pending loss'\n            when acc.type='fixed' and acc.priceEndDate<'2020-04-01' then 'Fixed tariff, may roll variable before April'\n            when acc.type='fixed' and acc.priceEndDate>='2020-04-01' then 'Fixed tariff, may roll variable after April'\n       end as fixCategory\nFROM accounts acc\nLEFT JOIN alltariffs t ON acc.correctRegion=t.region\n                       AND acc.fuel=t.fuel\n                       AND acc.planName=t.planName\n                       AND acc.type=t.type\n                       AND acc.profileClass=t.profileClass\n                       AND acc.versionDescription=t.versionDescription\n                       AND substr(t.tariffId,-2,2)='=='"},"data-engineering-prod:product_orion_secure.vpc_region_mismatch_snapshots":{"clustering_fields":null,"dataset_id":"product_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_orion_secure.vpc_region_mismatch_snapshots","location":"EU","num_bytes":1090518449,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_region_mismatch_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_orion_secure\/tables\/vpc_region_mismatch_snapshots","table_id":"vpc_region_mismatch_snapshots","time_partitioning":null,"view_query":null},"data-engineering-prod:product_payments_secure.direct_debit_payments":{"clustering_fields":null,"dataset_id":"product_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:product_payments_secure.direct_debit_payments","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/product_payments_secure\/tables\/direct_debit_payments","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/product_payments_secure\/tables\/direct_debit_payments","table_id":"direct_debit_payments","time_partitioning":null,"view_query":"\/*\nCreated by: Alex Ashford\nCreated Date: 26\/03\/2020\nReviewed by: Pete Diwell\n*\/\n\nWITH Resolved_Payments as (\n    SELECT transactionId\n          ,status\n          ,statusDatetime\n    FROM `data-engineering-prod.raw_payments_secure.payments_paymentEvent` \n    WHERE status in ('chargeback_cancelled','late_failure_settled')\n),\n\nFailed_Payments as (\n    SELECT f.transactionId\n          ,f.status\n          ,f.statusDatetime\n    FROM `data-engineering-prod.raw_payments_secure.payments_paymentEvent` f\n    LEFT JOIN Resolved_Payments r on r.transactionId = f.transactionId and r.statusDateTime > f.statusDateTime\n    WHERE f.status in ('failed','cancelled','chargeback_settled')\n    and r.transactionId IS NULL\n),\n\nRequested_Date as (\n    SELECT f.transactionId\n          ,f.status\n          ,f.statusDatetime\n    FROM `data-engineering-prod.raw_payments_secure.payments_paymentEvent` f\n    WHERE f.status in ('created')\n)\n\nSELECT p.serviceAccountID  as Account_No\n      ,p.transactionId as Transaction_ID\n      ,p.chargeDate as Transaction_Date\n      ,CAST(d.statusDateTime AS DATE) as Requested_Date\n      ,p.amount as Transaction_Amount_In_Pence\n      ,p.subscriptionID as Subscription_ID\n      ,p.mandateID as Mandate_ID\nFROM `data-engineering-prod.raw_payments_secure.payments_paymentEvent` p \nLEFT JOIN Failed_Payments f on p.transactionId = f.transactionId and p.statusDateTime < f.statusDatetime\nJOIN Requested_Date d on d.transactionId = p.transactionId \nWHERE p.status = 'confirmed'\nand f.transactionId IS NULL"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_consumption_charge_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_consumption_charge_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated","table_id":"energy_contracts_consumption_charge_generated","time_partitioning":null,"view_query":"WITH cte_consumption_charge_generated_union as\n(\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         unionRecord.ConsumptionChargeCreated.charges               as created_charges,\n         -- Continue to populate the single-rate columns we had before if there's only 1 charge in the array\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].amount, null)                as created_amount,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].unitRate, null)              as created_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].consumption, null)           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.charges               as updated_charges,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].amount, null)                as updated_amount,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].unitRate, null)              as updated_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].consumption, null)           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         unionRecord.ConsumptionChargeFinal.charges                 as final_charges,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].consumptionAdjustment, null)   as final_consumptionAdjustment,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].unitRate, null)                as final_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].amount, null)                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda.energy_contracts_consumption_charge_generated_v8`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeCreated.charges) c\n              ) as created_charges,\n         -- Continue to populate the single-rate columns we had before if there's only 1 charge in the array\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].amount, null)                as created_amount,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].unitRate, null)              as created_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].consumption, null)           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeUpdated.charges) c\n              ) as updated_charges,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].amount, null)                as updated_amount,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].unitRate, null)              as updated_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].consumption, null)           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         unionRecord.ConsumptionChargeFinal.charges as final_charges,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].consumptionAdjustment, null)   as final_consumptionAdjustment,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].unitRate, null)                as final_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].amount, null)                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda.energy_contracts_consumption_charge_generated_v7`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeCreated.charges) c\n              ) as created_charges,\n         -- Continue to populate the single-rate columns we had before if there's only 1 charge in the array\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].amount, null)                as created_amount,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].unitRate, null)              as created_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].consumption, null)           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeUpdated.charges) c\n              ) as updated_charges,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].amount, null)                as updated_amount,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].unitRate, null)              as updated_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].consumption, null)           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumptionAdjustment,\n                             c.unitRate,\n                             c.amount,\n                             cast(null as float64) as lossRead)\n                 from unnest(unionRecord.ConsumptionChargeFinal.charges) c\n              ) as final_charges,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].consumptionAdjustment, null)   as final_consumptionAdjustment,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].unitRate, null)                as final_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].amount, null)                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda.energy_contracts_consumption_charge_generated_v6`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeCreated.consumption,\n                            unionRecord.ConsumptionChargeCreated.unitRate,\n                            unionRecord.ConsumptionChargeCreated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as created_charges,\n         unionRecord.ConsumptionChargeCreated.amount                as created_amount,\n         unionRecord.ConsumptionChargeCreated.unitRate              as created_unitRate,\n         unionRecord.ConsumptionChargeCreated.consumption           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeUpdated.consumption,\n                            unionRecord.ConsumptionChargeUpdated.unitRate,\n                            unionRecord.ConsumptionChargeUpdated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as updated_charges,\n         unionRecord.ConsumptionChargeUpdated.amount                as updated_amount,\n         unionRecord.ConsumptionChargeUpdated.unitRate              as updated_unitRate,\n         unionRecord.ConsumptionChargeUpdated.consumption           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeFinal.consumptionAdjustment,\n                            unionRecord.ConsumptionChargeFinal.unitRate,\n                            unionRecord.ConsumptionChargeFinal.amount,\n                            cast(null as float64) as lossRead)\n              )                                                          as final_charges,\n         unionRecord.ConsumptionChargeFinal.consumptionAdjustment   as final_consumptionAdjustment,\n         unionRecord.ConsumptionChargeFinal.unitRate                as final_unitRate,\n         unionRecord.ConsumptionChargeFinal.amount                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda_secure.energy_contracts_consumption_charge_generated_v5`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeCreated.consumption,\n                            unionRecord.ConsumptionChargeCreated.unitRate,\n                            unionRecord.ConsumptionChargeCreated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as created_charges,\n         unionRecord.ConsumptionChargeCreated.amount                as created_amount,\n         unionRecord.ConsumptionChargeCreated.unitRate              as created_unitRate,\n         unionRecord.ConsumptionChargeCreated.consumption           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeUpdated.consumption,\n                            unionRecord.ConsumptionChargeUpdated.unitRate,\n                            unionRecord.ConsumptionChargeUpdated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as updated_charges,\n         unionRecord.ConsumptionChargeUpdated.amount                as updated_amount,\n         unionRecord.ConsumptionChargeUpdated.unitRate              as updated_unitRate,\n         unionRecord.ConsumptionChargeUpdated.consumption           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeFinal.consumptionAdjustment,\n                            unionRecord.ConsumptionChargeFinal.unitRate,\n                            unionRecord.ConsumptionChargeFinal.amount,\n                            cast(null as float64) as lossRead)\n              )                                                          as final_charges,\n         unionRecord.ConsumptionChargeFinal.consumptionAdjustment   as final_consumptionAdjustment,\n         unionRecord.ConsumptionChargeFinal.unitRate                as final_unitRate,\n         unionRecord.ConsumptionChargeFinal.amount                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda_secure.energy_contracts_consumption_charge_generated_v4`\n),\ncte_consumption_charge_generated_dedupe as\n(\n  select *,\n         row_number() over (partition by universal_eventId order by topic desc, insertTime desc, universal_createdAt desc) as event_dedupe_rownum\n  from cte_consumption_charge_generated_union\n)\nselect *\nfrom cte_consumption_charge_generated_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_consumption_charge_generated__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_consumption_charge_generated__no_dedupe","table_id":"energy_contracts_consumption_charge_generated__no_dedupe","time_partitioning":null,"view_query":"WITH cte_consumption_charge_generated_union as\n(\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         unionRecord.ConsumptionChargeCreated.charges               as created_charges,\n         -- Continue to populate the single-rate columns we had before if there's only 1 charge in the array\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].amount, null)                as created_amount,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].unitRate, null)              as created_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].consumption, null)           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.charges               as updated_charges,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].amount, null)                as updated_amount,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].unitRate, null)              as updated_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].consumption, null)           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         unionRecord.ConsumptionChargeFinal.charges                 as final_charges,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].consumptionAdjustment, null)   as final_consumptionAdjustment,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].unitRate, null)                as final_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].amount, null)                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda.energy_contracts_consumption_charge_generated_v8`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeCreated.charges) c\n              ) as created_charges,\n         -- Continue to populate the single-rate columns we had before if there's only 1 charge in the array\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].amount, null)                as created_amount,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].unitRate, null)              as created_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].consumption, null)           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeUpdated.charges) c\n              ) as updated_charges,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].amount, null)                as updated_amount,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].unitRate, null)              as updated_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].consumption, null)           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         unionRecord.ConsumptionChargeFinal.charges as final_charges,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].consumptionAdjustment, null)   as final_consumptionAdjustment,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].unitRate, null)                as final_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].amount, null)                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda.energy_contracts_consumption_charge_generated_v7`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeCreated.charges) c\n              ) as created_charges,\n         -- Continue to populate the single-rate columns we had before if there's only 1 charge in the array\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].amount, null)                as created_amount,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].unitRate, null)              as created_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeCreated.charges) = 1, unionRecord.ConsumptionChargeCreated.charges[offset(0)].consumption, null)           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumption,\n                             c.unitRate,\n                             c.amount,\n                             c.fromMeterReading,\n                             cast(null as string) as fromReadingType,\n                             c.toMeterReading,\n                             cast(null as string) as toReadingType)\n                 from unnest(unionRecord.ConsumptionChargeUpdated.charges) c\n              ) as updated_charges,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].amount, null)                as updated_amount,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].unitRate, null)              as updated_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeUpdated.charges) = 1, unionRecord.ConsumptionChargeUpdated.charges[offset(0)].consumption, null)           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         array(select struct(c.clockingTimeId,\n                             c.clockingTimeLabel,\n                             c.consumptionAdjustment,\n                             c.unitRate,\n                             c.amount,\n                             cast(null as float64) as lossRead)\n                 from unnest(unionRecord.ConsumptionChargeFinal.charges) c\n              ) as final_charges,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].consumptionAdjustment, null)   as final_consumptionAdjustment,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].unitRate, null)                as final_unitRate,\n         if(array_length(unionRecord.ConsumptionChargeFinal.charges) = 1, unionRecord.ConsumptionChargeFinal.charges[offset(0)].amount, null)                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda.energy_contracts_consumption_charge_generated_v6`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeCreated.consumption,\n                            unionRecord.ConsumptionChargeCreated.unitRate,\n                            unionRecord.ConsumptionChargeCreated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as created_charges,\n         unionRecord.ConsumptionChargeCreated.amount                as created_amount,\n         unionRecord.ConsumptionChargeCreated.unitRate              as created_unitRate,\n         unionRecord.ConsumptionChargeCreated.consumption           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeUpdated.consumption,\n                            unionRecord.ConsumptionChargeUpdated.unitRate,\n                            unionRecord.ConsumptionChargeUpdated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as updated_charges,\n         unionRecord.ConsumptionChargeUpdated.amount                as updated_amount,\n         unionRecord.ConsumptionChargeUpdated.unitRate              as updated_unitRate,\n         unionRecord.ConsumptionChargeUpdated.consumption           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeFinal.consumptionAdjustment,\n                            unionRecord.ConsumptionChargeFinal.unitRate,\n                            unionRecord.ConsumptionChargeFinal.amount,\n                            cast(null as float64) as lossRead)\n              )                                                          as final_charges,\n         unionRecord.ConsumptionChargeFinal.consumptionAdjustment   as final_consumptionAdjustment,\n         unionRecord.ConsumptionChargeFinal.unitRate                as final_unitRate,\n         unionRecord.ConsumptionChargeFinal.amount                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda_secure.energy_contracts_consumption_charge_generated_v5`\n  union all\n  select COALESCE(unionRecord.ConsumptionChargeCreated.metadata.eventId,\n                  unionRecord.ConsumptionChargeUpdated.metadata.eventId,\n                  unionRecord.ConsumptionChargeCancelled.metadata.eventId,\n                  unionRecord.ConsumptionChargeFinal.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset as kafkaOffset,\n         kafkaData.partition,\n         COALESCE(unionRecord.ConsumptionChargeCreated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeUpdated.metadata.createdAt,\n                  unionRecord.ConsumptionChargeCancelled.metadata.createdAt,\n                  unionRecord.ConsumptionChargeFinal.metadata.createdAt) as universal_createdAt,\n         unionRecord.ConsumptionChargeCreated.metadata.eventId      as created_eventId,\n         unionRecord.ConsumptionChargeCreated.metadata.createdAt    as created_createdAt,\n         unionRecord.ConsumptionChargeCreated.from                  as created_from,\n         unionRecord.ConsumptionChargeCreated.to                    as created_to,\n         unionRecord.ConsumptionChargeCreated.contractId            as created_contractId,\n         unionRecord.ConsumptionChargeCreated.chargeId              as created_chargeId, \n         unionRecord.ConsumptionChargeCreated.supplyPoint           as created_supplyPoint,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeCreated.consumption,\n                            unionRecord.ConsumptionChargeCreated.unitRate,\n                            unionRecord.ConsumptionChargeCreated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as created_charges,\n         unionRecord.ConsumptionChargeCreated.amount                as created_amount,\n         unionRecord.ConsumptionChargeCreated.unitRate              as created_unitRate,\n         unionRecord.ConsumptionChargeCreated.consumption           as created_consumption,\n         unionRecord.ConsumptionChargeCreated.consumptionId         as created_consumptionId,\n         unionRecord.ConsumptionChargeUpdated.metadata.eventId      as updated_eventId,\n         unionRecord.ConsumptionChargeUpdated.metadata.createdAt    as updated_createdAt,\n         unionRecord.ConsumptionChargeUpdated.chargeId              as updated_chargeId,\n         unionRecord.ConsumptionChargeUpdated.consumptionId         as updated_consumptionId,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeUpdated.consumption,\n                            unionRecord.ConsumptionChargeUpdated.unitRate,\n                            unionRecord.ConsumptionChargeUpdated.amount,\n                            cast(null as float64) as fromMeterReading,\n                            cast(null as string) as fromReadingType,\n                            cast(null as float64) as toMeterReading,\n                            cast(null as string) as toReadingType)\n              )                                                     as updated_charges,\n         unionRecord.ConsumptionChargeUpdated.amount                as updated_amount,\n         unionRecord.ConsumptionChargeUpdated.unitRate              as updated_unitRate,\n         unionRecord.ConsumptionChargeUpdated.consumption           as updated_consumption,\n         unionRecord.ConsumptionChargeCancelled.metadata.eventId    as cancelled_eventId,\n         unionRecord.ConsumptionChargeCancelled.metadata.createdAt  as cancelled_createdAt,\n         unionRecord.ConsumptionChargeCancelled.chargeId            as cancelled_chargeId,\n         unionRecord.ConsumptionChargeFinal.metadata.eventId        as final_eventId,\n         unionRecord.ConsumptionChargeFinal.metadata.createdAt      as final_createdAt,\n         unionRecord.ConsumptionChargeFinal.supplyPoint             as final_supplyPoint,\n         unionRecord.ConsumptionChargeFinal.fuel                    as final_fuel,\n         unionRecord.ConsumptionChargeFinal.chargeId                as final_chargeId,\n         unionRecord.ConsumptionChargeFinal.from                    as final_from,\n         unionRecord.ConsumptionChargeFinal.to                      as final_to,\n         array(select struct(1 as clockingTimeId,\n                            'anytime' as clockingTimeLabel,\n                            unionRecord.ConsumptionChargeFinal.consumptionAdjustment,\n                            unionRecord.ConsumptionChargeFinal.unitRate,\n                            unionRecord.ConsumptionChargeFinal.amount,\n                            cast(null as float64) as lossRead)\n              )                                                          as final_charges,\n         unionRecord.ConsumptionChargeFinal.consumptionAdjustment   as final_consumptionAdjustment,\n         unionRecord.ConsumptionChargeFinal.unitRate                as final_unitRate,\n         unionRecord.ConsumptionChargeFinal.amount                  as final_amount,\n         unionRecord.ConsumptionChargeFinal.serviceAccountId        as final_serviceAccountId,\n         unionRecord.ConsumptionChargeFinal.contractId              as final_contractId\n  from `data-engineering-prod.landing_andromeda_secure.energy_contracts_consumption_charge_generated_v4`\n)\nselect *\nfrom cte_consumption_charge_generated_union"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract","table_id":"energy_contracts_contract","time_partitioning":null,"view_query":"WITH cte_contract_union as (\n    SELECT c.metadata.eventId  as universal_eventId\n          ,c.kafkaData.topic \n          ,c.kafkaData.insertTime \n          ,c.kafkaData.offset as kafkaOffset\n          ,c.metadata.createdAt as universal_createdAt\n          ,c.metadata.eventId as contract_eventId\n          ,c.metadata.createdAt as contract_createdAt\n          ,c.contractId as contract_contractId\n          ,c.mpxn as contract_mpxn\n          ,c.serviceAccountId as contract_serviceAccountId\n          ,c.fuel as contract_fuel\n          ,NULL as contract_unitRate\n          ,c.startDate as contract_startDate\n          ,c.endDate as contract_endDate\n          ,c.customerContractStartDate as contract_customerContractStartDate\n          ,c.customerContractExpiryDate as contract_customerContractExpiryDate\n          ,NULL as contract_standingRate\n          ,NULL as contract_lossReadDateTime\n          ,NULL as contract_meterReadDateTime\n          ,NULL as contract_consumptionAdjustment\n          ,c.tariffId as contract_tariffId\n          ,NULL as contract_tariffType\n          ,NULL as cancelled_eventId\n          ,NULL as cancelled_createdAt\n          ,NULL as cancelled_contractId\n          ,c.cancelled \n          ,c.tags\n    FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v4` c\n    \n    UNION ALL\n    \n    select COALESCE(unionRecord.Contract.metadata.eventId,\n                    unionRecord.Cancelled.metadata.eventId) as universal_eventId,\n           kafkaData.topic,\n           kafkaData.insertTime,\n           kafkaData.offset as kafkaOffset,\n           COALESCE(unionRecord.Contract.metadata.createdAt,\n                    unionRecord.Cancelled.metadata.createdAt) as universal_createdAt,\n           unionRecord.Contract.metadata.eventId      as contract_eventId,\n           unionRecord.Contract.metadata.createdAt    as contract_createdAt,\n           unionRecord.Contract.contractId            as contract_contractId,\n           unionRecord.Contract.mpxn                  as contract_mpxn,\n           unionRecord.Contract.serviceAccountId      as contract_serviceAccountId,\n           unionRecord.Contract.fuel                  as contract_fuel,\n           unionRecord.Contract.unitRate              as contract_unitRate,\n           unionRecord.Contract.startDate             as contract_startDate,\n           unionRecord.Contract.endDate               as contract_endDate,\n           unionRecord.Contract.customerContractStartDate as contract_customerContractStartDate,\n           unionRecord.Contract.customerContractExpiryDate as contract_customerContractExpiryDate,\n           unionRecord.Contract.standingRate          as contract_standingRate,\n           NULL                                       as contract_lossReadDateTime,\n           NULL                                       as contract_meterReadDateTime,\n           NULL                                       as contract_consumptionAdjustment,\n           unionRecord.Contract.tariffId              as contract_tariffId,\n           NULL                                       as contract_tariffType,\n           unionRecord.Cancelled.metadata.eventId     as cancelled_eventId,\n           unionRecord.Cancelled.metadata.createdAt   as cancelled_createdAt,\n           unionRecord.Cancelled.contractId           as cancelled_contractId,\n           NULL                                       as cancelled,\n           NULL                                       as tags       \n    from `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`\n    \n    union all\n    \n    select COALESCE(unionRecord.Contract.metadata.eventId,\n                    unionRecord.Cancelled.metadata.eventId) as universal_eventId,\n           kafkaData.topic,\n           kafkaData.insertTime,\n           kafkaData.offset as kafkaOffset,\n           COALESCE(unionRecord.Contract.metadata.createdAt,\n                    unionRecord.Cancelled.metadata.createdAt) as universal_createdAt,\n           unionRecord.Contract.metadata.eventId      as contract_eventId,\n           unionRecord.Contract.metadata.createdAt    as contract_createdAt,\n           unionRecord.Contract.contractId            as contract_contractId,\n           unionRecord.Contract.mpxn                  as contract_mpxn,\n           unionRecord.Contract.serviceAccountId      as contract_serviceAccountId,\n           unionRecord.Contract.fuel                  as contract_fuel,\n           unionRecord.Contract.unitRate              as contract_unitRate,\n           unionRecord.Contract.startDate             as contract_startDate,\n           unionRecord.Contract.endDate               as contract_endDate,\n           unionRecord.Contract.customerContractStartDate as contract_customerContractStartDate,\n           unionRecord.Contract.customerContractExpiryDate as contract_customerContractExpiryDate,\n           unionRecord.Contract.standingRate          as contract_standingRate,\n           unionRecord.Contract.lossReadDateTime      as contract_lossReadDateTime,\n           unionRecord.Contract.meterReadDateTime     as contract_meterReadDateTime,\n           unionRecord.Contract.consumptionAdjustment as contract_consumptionAdjustment,\n           unionRecord.Contract.tariffId              as contract_tariffId,\n           NULL                                       as contract_tariffType,\n           unionRecord.Cancelled.metadata.eventId     as cancelled_eventId,\n           unionRecord.Cancelled.metadata.createdAt   as cancelled_createdAt,\n           unionRecord.Cancelled.contractId           as cancelled_contractId,\n           NULL                                       as cancelled,\n           NULL                                       as tags \n    from `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v2`\n    \n    union all\n    \n    select COALESCE(unionRecord.Contract.metadata.eventId,\n                    unionRecord.Cancelled.metadata.eventId) as universal_eventId,\n           kafkaData.topic,\n           kafkaData.insertTime,\n           kafkaData.offset as kafkaOffset,\n           COALESCE(unionRecord.Contract.metadata.createdAt,\n                    unionRecord.Cancelled.metadata.createdAt) as universal_createdAt,\n           unionRecord.Contract.metadata.eventId      as contract_eventId,\n           unionRecord.Contract.metadata.createdAt    as contract_createdAt,\n           unionRecord.Contract.contractId            as contract_contractId,\n           unionRecord.Contract.mpxn                  as contract_mpxn,\n           unionRecord.Contract.serviceAccountId      as contract_serviceAccountId,\n           unionRecord.Contract.fuel                  as contract_fuel,\n           unionRecord.Contract.unitRate              as contract_unitRate,\n           unionRecord.Contract.startDate             as contract_startDate,\n           unionRecord.Contract.endDate               as contract_endDate,\n           NULL                                       as contract_customerContractStartDate,\n           NULL                                       as contract_customerContractExpiryDate,\n           unionRecord.Contract.standingRate          as contract_standingRate,\n           null                                       as contract_lossReadDateTime,\n           null                                       as contract_meterReadDateTime,\n           null                                       as contract_consumptionAdjustment,\n           null                                       as contract_tariffId,\n           null                                       as contract_tariffType,\n           unionRecord.Cancelled.metadata.eventId     as cancelled_eventId,\n           unionRecord.Cancelled.metadata.createdAt   as cancelled_createdAt,\n           unionRecord.Cancelled.contractId           as cancelled_contractId,\n           NULL                                       as cancelled,\n           NULL                                       as tags \n    from `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v1`\n),\n\ncte_contract_event_dedupe as (\n  select *,\n         row_number() over (partition by universal_eventId order by topic desc, insertTime desc, universal_createdAt desc) as event_dedupe_rownum\n  from cte_contract_union u\n)\n\nselect *\nfrom cte_contract_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract__no_dedupe","table_id":"energy_contracts_contract__no_dedupe","time_partitioning":null,"view_query":"SELECT c.metadata.eventId  as universal_eventId\n      ,c.kafkaData.topic \n      ,c.kafkaData.insertTime \n      ,c.kafkaData.offset as kafkaOffset\n      ,c.metadata.createdAt as universal_createdAt\n      ,c.metadata.eventId as contract_eventId\n      ,c.metadata.createdAt as contract_createdAt\n      ,c.contractId as contract_contractId\n      ,c.mpxn as contract_mpxn\n      ,c.serviceAccountId as contract_serviceAccountId\n      ,c.fuel as contract_fuel\n      ,NULL as contract_unitRate\n      ,c.startDate as contract_startDate\n      ,c.endDate as contract_endDate\n      ,c.customerContractStartDate as contract_customerContractStartDate\n      ,c.customerContractExpiryDate as contract_customerContractExpiryDate\n      ,NULL as contract_standingRate\n      ,NULL as contract_lossReadDateTime\n      ,NULL as contract_meterReadDateTime\n      ,NULL as contract_consumptionAdjustment\n      ,c.tariffId as contract_tariffId\n      ,NULL as contract_tariffType\n      ,NULL as cancelled_eventId\n      ,NULL as cancelled_createdAt\n      ,NULL as cancelled_contractId\n      ,c.cancelled \n      ,c.tags\nFROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v4` c\n\nUNION ALL\n\nselect COALESCE(unionRecord.Contract.metadata.eventId,\n                unionRecord.Cancelled.metadata.eventId) as universal_eventId,\n       kafkaData.topic,\n       kafkaData.insertTime,\n       kafkaData.offset as kafkaOffset,\n       COALESCE(unionRecord.Contract.metadata.createdAt,\n                unionRecord.Cancelled.metadata.createdAt) as universal_createdAt,\n       unionRecord.Contract.metadata.eventId      as contract_eventId,\n       unionRecord.Contract.metadata.createdAt    as contract_createdAt,\n       unionRecord.Contract.contractId            as contract_contractId,\n       unionRecord.Contract.mpxn                  as contract_mpxn,\n       unionRecord.Contract.serviceAccountId      as contract_serviceAccountId,\n       unionRecord.Contract.fuel                  as contract_fuel,\n       unionRecord.Contract.unitRate              as contract_unitRate,\n       unionRecord.Contract.startDate             as contract_startDate,\n       unionRecord.Contract.endDate               as contract_endDate,\n       unionRecord.Contract.customerContractStartDate as contract_customerContractStartDate,\n       unionRecord.Contract.customerContractExpiryDate as contract_customerContractExpiryDate,\n       unionRecord.Contract.standingRate          as contract_standingRate,\n       NULL                                       as contract_lossReadDateTime,\n       NULL                                       as contract_meterReadDateTime,\n       NULL                                       as contract_consumptionAdjustment,\n       unionRecord.Contract.tariffId              as contract_tariffId,\n       NULL                                       as contract_tariffType,\n       unionRecord.Cancelled.metadata.eventId     as cancelled_eventId,\n       unionRecord.Cancelled.metadata.createdAt   as cancelled_createdAt,\n       unionRecord.Cancelled.contractId           as cancelled_contractId,\n       NULL                                       as cancelled,\n       NULL                                       as tags       \nfrom `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v3`\n\nunion all\n\nselect COALESCE(unionRecord.Contract.metadata.eventId,\n                unionRecord.Cancelled.metadata.eventId) as universal_eventId,\n       kafkaData.topic,\n       kafkaData.insertTime,\n       kafkaData.offset as kafkaOffset,\n       COALESCE(unionRecord.Contract.metadata.createdAt,\n                unionRecord.Cancelled.metadata.createdAt) as universal_createdAt,\n       unionRecord.Contract.metadata.eventId      as contract_eventId,\n       unionRecord.Contract.metadata.createdAt    as contract_createdAt,\n       unionRecord.Contract.contractId            as contract_contractId,\n       unionRecord.Contract.mpxn                  as contract_mpxn,\n       unionRecord.Contract.serviceAccountId      as contract_serviceAccountId,\n       unionRecord.Contract.fuel                  as contract_fuel,\n       unionRecord.Contract.unitRate              as contract_unitRate,\n       unionRecord.Contract.startDate             as contract_startDate,\n       unionRecord.Contract.endDate               as contract_endDate,\n       unionRecord.Contract.customerContractStartDate as contract_customerContractStartDate,\n       unionRecord.Contract.customerContractExpiryDate as contract_customerContractExpiryDate,\n       unionRecord.Contract.standingRate          as contract_standingRate,\n       unionRecord.Contract.lossReadDateTime      as contract_lossReadDateTime,\n       unionRecord.Contract.meterReadDateTime     as contract_meterReadDateTime,\n       unionRecord.Contract.consumptionAdjustment as contract_consumptionAdjustment,\n       unionRecord.Contract.tariffId              as contract_tariffId,\n       NULL                                       as contract_tariffType,\n       unionRecord.Cancelled.metadata.eventId     as cancelled_eventId,\n       unionRecord.Cancelled.metadata.createdAt   as cancelled_createdAt,\n       unionRecord.Cancelled.contractId           as cancelled_contractId,\n       NULL                                       as cancelled,\n       NULL                                       as tags \nfrom `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v2`\n\nunion all\n\nselect COALESCE(unionRecord.Contract.metadata.eventId,\n                unionRecord.Cancelled.metadata.eventId) as universal_eventId,\n       kafkaData.topic,\n       kafkaData.insertTime,\n       kafkaData.offset as kafkaOffset,\n       COALESCE(unionRecord.Contract.metadata.createdAt,\n                unionRecord.Cancelled.metadata.createdAt) as universal_createdAt,\n       unionRecord.Contract.metadata.eventId      as contract_eventId,\n       unionRecord.Contract.metadata.createdAt    as contract_createdAt,\n       unionRecord.Contract.contractId            as contract_contractId,\n       unionRecord.Contract.mpxn                  as contract_mpxn,\n       unionRecord.Contract.serviceAccountId      as contract_serviceAccountId,\n       unionRecord.Contract.fuel                  as contract_fuel,\n       unionRecord.Contract.unitRate              as contract_unitRate,\n       unionRecord.Contract.startDate             as contract_startDate,\n       unionRecord.Contract.endDate               as contract_endDate,\n       NULL                                       as contract_customerContractStartDate,\n       NULL                                       as contract_customerContractExpiryDate,\n       unionRecord.Contract.standingRate          as contract_standingRate,\n       null                                       as contract_lossReadDateTime,\n       null                                       as contract_meterReadDateTime,\n       null                                       as contract_consumptionAdjustment,\n       null                                       as contract_tariffId,\n       null                                       as contract_tariffType,\n       unionRecord.Cancelled.metadata.eventId     as cancelled_eventId,\n       unionRecord.Cancelled.metadata.createdAt   as cancelled_createdAt,\n       unionRecord.Cancelled.contractId           as cancelled_contractId,\n       NULL                                       as cancelled,\n       NULL                                       as tags \nfrom `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_v1`"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract_created":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract_created","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract_created","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract_created","table_id":"energy_contracts_contract_created","time_partitioning":null,"view_query":"with cte_contract_created_dedupe as\n(\n  select metadata.eventId,\n         metadata.traceToken,\n         mpxn,\n         serviceAccountId,\n         fuel,\n         contractId,\n         unitRate,\n         startDate,\n         expiryDate,\n         standingRate,\n         kafkaData.topic,\n         kafkaData.partition,\n         kafkaData.offset,\n         kafkaData.insertTime,\n         kafkaData.insertTime as createdAt, -- workaround for now as it's buggered in the schema,\n         row_number() over (partition by metadata.eventId order by kafkaData.insertTime desc) as event_dedupe_rownum\n  from `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_created_v2`\n)\nselect *\nfrom cte_contract_created_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract_created__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_contract_created__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract_created__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_contract_created__no_dedupe","table_id":"energy_contracts_contract_created__no_dedupe","time_partitioning":null,"view_query":"select metadata.eventId,\n       metadata.traceToken,\n       mpxn,\n       serviceAccountId,\n       fuel,\n       contractId,\n       unitRate,\n       startDate,\n       expiryDate,\n       standingRate,\n       kafkaData.topic,\n       kafkaData.partition,\n       kafkaData.offset,\n       kafkaData.insertTime,\n       kafkaData.insertTime as createdAt -- workaround for now as it's buggered in the schema\nfrom `data-engineering-prod.landing_andromeda_secure.energy_contracts_contract_created_v2`"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_standing_charge_created":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_standing_charge_created","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_standing_charge_created","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_standing_charge_created","table_id":"energy_contracts_standing_charge_created","time_partitioning":null,"view_query":"with cte_standing_charge_created_union as\n(\n  SELECT COALESCE(unionRecord.StandingChargeCreated.metadata.eventId,\n                  unionRecord.StandingChargeCancelled.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset,\n         kafkaData.partition,\n         COALESCE(unionRecord.StandingChargeCreated.metadata.createdAt,\n                  unionRecord.StandingChargeCancelled.metadata.createdAt) as universal_createdAt,\n         unionRecord.StandingChargeCreated.metadata.eventId   as created_eventId,\n         unionRecord.StandingChargeCreated.metadata.createdAt as created_createdAt,\n         unionRecord.StandingChargeCreated.contractId         as created_contractId,\n         unionRecord.StandingChargeCreated.chargeId           as created_chargeId,\n         unionRecord.StandingChargeCreated.supplyPoint        as created_supplyPoint,\n         unionRecord.StandingChargeCreated.amount             as created_amount,\n         unionRecord.StandingChargeCreated.chargeDate         as created_chargeDate,\n         unionRecord.StandingChargeCancelled.metadata.eventId as cancelled_eventId,\n         unionRecord.StandingChargeCancelled.chargeId         as cancelled_chargeId\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_standing_charge_created_v5`\n  union all\n  SELECT COALESCE(unionRecord.StandingChargeCreated.metadata.eventId,\n                  unionRecord.StandingChargeCancelled.metadata.eventId) as universal_eventId,\n         kafkaData.topic,\n         kafkaData.insertTime,\n         kafkaData.offset,\n         kafkaData.partition,\n         COALESCE(unionRecord.StandingChargeCreated.metadata.createdAt,\n                  unionRecord.StandingChargeCancelled.metadata.createdAt) as universal_createdAt,\n         unionRecord.StandingChargeCreated.metadata.eventId   as created_eventId,\n         unionRecord.StandingChargeCreated.metadata.createdAt as created_createdAt,\n         unionRecord.StandingChargeCreated.contractId         as created_contractId,\n         unionRecord.StandingChargeCreated.chargeId           as created_chargeId,\n         unionRecord.StandingChargeCreated.supplyPoint        as created_supplyPoint,\n         unionRecord.StandingChargeCreated.amount             as created_amount,\n         unionRecord.StandingChargeCreated.chargeDate         as created_chargeDate,\n         unionRecord.StandingChargeCancelled.metadata.eventId as cancelled_eventId,\n         unionRecord.StandingChargeCancelled.chargeId         as cancelled_chargeId\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_standing_charge_created_v4`\n  union all\n  SELECT COALESCE(unionRecord.StandingChargeCreated.metadata.eventId,\n                  unionRecord.StandingChargeCancelled.metadata.eventId)                     as universal_eventId,\n         kafkaData.topic                                                                    AS topic,\n         kafkaData.insertTime,\n         kafkaData.offset,\n         kafkaData.partition,\n         TIMESTAMP_MILLIS(COALESCE(unionRecord.StandingChargeCreated.metadata.createdAt,\n                  unionRecord.StandingChargeCancelled.metadata.createdAt))                  as universal_createdAt,\n         unionRecord.StandingChargeCreated.metadata.eventId                                 as created_eventId,\n         TIMESTAMP_MILLIS(unionRecord.StandingChargeCreated.metadata.createdAt)             as created_createdAt,\n         unionRecord.StandingChargeCreated.contractId                                       as created_contractId,\n         unionRecord.StandingChargeCreated.chargeId                                         as created_chargeId,\n         unionRecord.StandingChargeCreated.supplyPoint                                      as created_supplyPoint,\n         cast(cast(unionRecord.StandingChargeCreated.amount as STRING)=\".P\" as int64)*0.274 as created_amount,\n         DATE_FROM_UNIX_DATE(unionRecord.StandingChargeCreated.chargeDate)                  as created_chargeDate,\n         unionRecord.StandingChargeCancelled.metadata.eventId                               as cancelled_eventId,\n         unionRecord.StandingChargeCancelled.chargeId                                       as cancelled_chargeId\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_standing_charge_created_v3`\n  UNION ALL\n  SELECT COALESCE(unionRecord.StandingChargeCreated.metadata.eventId,\n                  unionRecord.StandingChargeCancelled.metadata.eventId)                     as universal_eventId,\n         kafkaData.topic                                                                    AS topic,\n         kafkaData.insertTime,\n         kafkaData.offset,\n         kafkaData.partition,\n         TIMESTAMP_MILLIS(COALESCE(unionRecord.StandingChargeCreated.metadata.createdAt,\n                                   unionRecord.StandingChargeCancelled.metadata.createdAt)) as universal_createdAt,\n         unionRecord.StandingChargeCreated.metadata.eventId                                 as created_eventId,\n         TIMESTAMP_MILLIS(unionRecord.StandingChargeCreated.metadata.createdAt)             as created_createdAt,\n         unionRecord.StandingChargeCreated.contractId                                       as created_contractId,\n         unionRecord.StandingChargeCreated.chargeId                                         as created_chargeId,\n         unionRecord.StandingChargeCreated.supplyPoint                                      as created_supplyPoint,\n         cast(cast(unionRecord.StandingChargeCreated.amount as STRING)=\".P\" as int64)*0.274 as created_amount,\n         DATE_FROM_UNIX_DATE(unionRecord.StandingChargeCreated.chargeDate)                  as created_chargeDate,\n         unionRecord.StandingChargeCancelled.metadata.eventId                               as cancelled_eventId,\n         unionRecord.StandingChargeCancelled.chargeId                                       as cancelled_chargeId\n  FROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_standing_charge_created_v2`\n),\ncte_standing_charge_created_dedupe as\n(\n  select *,\n         row_number() over (partition by universal_eventId order by topic desc, insertTime desc, universal_createdAt desc) as event_dedupe_rownum\n  from cte_standing_charge_created_union\n)\nselect *\nfrom cte_standing_charge_created_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.energy_contracts_tariff__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.energy_contracts_tariff__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_tariff__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/energy_contracts_tariff__no_dedupe","table_id":"energy_contracts_tariff__no_dedupe","time_partitioning":null,"view_query":"\/*\nName: energy_contracts_tariff__no_dedupe\nAuthor: Alex Ashford\nCreated Date: 2020-07-20\nDescription: Raw view for energy contracts tariff data\nGitHub: https:\/\/github.com\/ovotech\/andromeda-data-bigquery\/blob\/master\/data-engineering-prod\/raw_andromeda_secure\/energy_contracts_tariff__no_dedupe.sql\nReviewed By: Tom Perry\nReview Date: 2020-07-20\n*\/\n\nSELECT coalesce(unionRecord.TariffCancelled.metadata.eventId,\n                unionRecord.TariffUpserted.metadata.eventId) as universal_eventId,\n       coalesce(unionRecord.TariffCancelled.metadata.createdAt,\n                unionRecord.TariffUpserted.metadata.createdAt) as universal_createdAt,\n       unionRecord.TariffCancelled.metadata.eventId as cancelled_eventId,\n       unionRecord.TariffCancelled.metadata.createdAt as cancelled_createdAt,\n       unionRecord.TariffCancelled.metadata.traceToken as cancelled_traceToken,\n       unionRecord.TariffCancelled.tariffId as cancelled_tariffId,\n       unionRecord.TariffCancelled.versionId as cancelled_versionId,\n       unionRecord.TariffUpserted.metadata.eventId as upserted_eventId,\n       unionRecord.TariffUpserted.metadata.createdAt as upserted_createdAt,\n       unionRecord.TariffUpserted.metadata.traceToken as upserted_traceToken,\n       unionRecord.TariffUpserted.tariffId as upserted_tariffId,\n       unionRecord.TariffUpserted.activeFrom as upserted_activeFrom,\n       unionRecord.TariffUpserted.activeTo as upserted_activeTo,\n       unionRecord.TariffUpserted.exitFee as upserted_exitFee,\n       unionRecord.TariffUpserted.fuel as upserted_fuel,\n       unionRecord.TariffUpserted.length as upserted_length,\n       unionRecord.TariffUpserted.planName as upserted_planName,\n       unionRecord.TariffUpserted.profileClass as upserted_profileClass,\n       unionRecord.TariffUpserted.region as upserted_region,\n       unionRecord.TariffUpserted.register as upserted_register,\n       unionRecord.TariffUpserted.retailer as upserted_retailer,\n       unionRecord.TariffUpserted.standingRate as upserted_standingRate,\n       unionRecord.TariffUpserted.type as upserted_type,\n       unionRecord.TariffUpserted.unitRates as upserted_unitRates,\n       CAST(IF(ARRAY_LENGTH(unionRecord.TariffUpserted.unitRates) = 1, unionRecord.TariffUpserted.unitRates[OFFSET(0)].unitRate, NULL) AS FLOAT64) as upserted_unitRate,\n       unionRecord.TariffUpserted.versionId as upserted_versionId,\n       unionRecord.TariffUpserted.versionDescription as upserted_versionDescription,\n       unionRecord.TariffUpserted.default as upserted_default,\n       unionRecord.TariffUpserted.override as upserted_override,\n       unionRecord.TariffUpserted.paymentMethod as upserted_payment_method,\n       unionRecord.TariffUpserted.familyId as upserted_family_id,\n       kafkaData.topic,\n       kafkaData.partition,\n       kafkaData.offset,\n       kafkaData.insertTime,\n       PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.energy_contracts_tariff_v4` t"},"data-engineering-prod:raw_andromeda_secure.flow_AML_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AML_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AML_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AML_split","table_id":"flow_AML_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_AML_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_AML_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AML_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AML_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AML_split_consolidated","table_id":"flow_AML_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_AML_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_AQI_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AQI_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQI_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQI_SPARK","table_id":"flow_AQI_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_AQI_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_AQI_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AQI_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQI_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQI_split","table_id":"flow_AQI_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_AQI_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_AQI_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AQI_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQI_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQI_split_consolidated","table_id":"flow_AQI_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_AQI_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_AQR_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AQR_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQR_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQR_SPARK","table_id":"flow_AQR_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_AQR_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_AQR_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AQR_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQR_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQR_split","table_id":"flow_AQR_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_AQR_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_AQR_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_AQR_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQR_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_AQR_split_consolidated","table_id":"flow_AQR_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_AQR_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ASP_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ASP_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ASP_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ASP_SPARK","table_id":"flow_ASP_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_ASP_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_ASP_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ASP_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ASP_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ASP_split","table_id":"flow_ASP_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ASP_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ASP_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ASP_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ASP_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ASP_split_consolidated","table_id":"flow_ASP_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ASP_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_BOL_XREADOUT01_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_BOL_XREADOUT01_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_BOL_XREADOUT01_validated","table_id":"flow_BOL_XREADOUT01_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_BOL_XREADOUT01_validated_v7` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_CDR_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CDR_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CDR_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CDR_SPARK","table_id":"flow_CDR_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_CDR_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_CDR_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CDR_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CDR_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CDR_split","table_id":"flow_CDR_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_CDR_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_CDR_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CDR_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CDR_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CDR_split_consolidated","table_id":"flow_CDR_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_CDR_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_CNF_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CNF_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_SPARK","table_id":"flow_CNF_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_CNF_POST_NEXUS_split_consolidated_v7` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_CNF_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CNF_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split","table_id":"flow_CNF_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_CNF_POST_NEXUS_split_v7` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_CNF_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CNF_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_POST_NEXUS_split_consolidated","table_id":"flow_CNF_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_CNF_POST_NEXUS_split_consolidated_v7` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_CNF_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_CNF_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_CNF_PRE_NEXUS_split","table_id":"flow_CNF_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_CNF_PRE_NEXUS_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_COI_POST_20171101_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_COI_POST_20171101_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_COI_POST_20171101_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_COI_POST_20171101_split","table_id":"flow_COI_POST_20171101_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_COI_POST_20171101_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_COI_POST_20171101_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_COI_POST_20171101_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_COI_POST_20171101_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_COI_POST_20171101_split_consolidated","table_id":"flow_COI_POST_20171101_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_COI_POST_20171101_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_COI_PRE_20171101_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_COI_PRE_20171101_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_COI_PRE_20171101_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_COI_PRE_20171101_split","table_id":"flow_COI_PRE_20171101_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_COI_PRE_20171101_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0001001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0001001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0001001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0001001_SPARK","table_id":"flow_D0001001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0001001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0001001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0001001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0001001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0001001_split","table_id":"flow_D0001001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0001001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0001001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0001001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0001001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0001001_split_consolidated","table_id":"flow_D0001001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0001001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0002001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0002001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0002001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0002001_SPARK","table_id":"flow_D0002001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0002001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0002001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0002001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0002001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0002001_split","table_id":"flow_D0002001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0002001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0002001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0002001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0002001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0002001_split_consolidated","table_id":"flow_D0002001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0002001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0004001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0004001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0004001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0004001_SPARK","table_id":"flow_D0004001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0004001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0004001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0004001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0004001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0004001_split","table_id":"flow_D0004001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0004001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0004001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0004001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0004001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0004001_split_consolidated","table_id":"flow_D0004001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0004001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0010001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0010001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010001_split","table_id":"flow_D0010001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0010001_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0010002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0010002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010002_SPARK","table_id":"flow_D0010002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0010002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0010002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0010002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010002_split","table_id":"flow_D0010002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0010002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0010002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0010002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0010002_split_consolidated","table_id":"flow_D0010002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0010002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0011001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0011001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0011001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0011001_SPARK","table_id":"flow_D0011001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0011001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0011001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0011001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0011001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0011001_split","table_id":"flow_D0011001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0011001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0011001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0011001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0011001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0011001_split_consolidated","table_id":"flow_D0011001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0011001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0012001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0012001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0012001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0012001_split","table_id":"flow_D0012001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0012001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0012001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0012001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0012001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0012001_split_consolidated","table_id":"flow_D0012001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0012001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0018001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0018001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0018001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0018001_SPARK","table_id":"flow_D0018001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0018001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0018001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0018001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0018001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0018001_split","table_id":"flow_D0018001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0018001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0018001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0018001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0018001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0018001_split_consolidated","table_id":"flow_D0018001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0018001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0019001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0019001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0019001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0019001_SPARK","table_id":"flow_D0019001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0019001_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0019001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0019001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0019001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0019001_split","table_id":"flow_D0019001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0019001_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0019001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0019001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0019001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0019001_split_consolidated","table_id":"flow_D0019001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0019001_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0030001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0030001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0030001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0030001_SPARK","table_id":"flow_D0030001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0030001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0030001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0030001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0030001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0030001_split","table_id":"flow_D0030001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0030001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0030001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0030001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0030001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0030001_split_consolidated","table_id":"flow_D0030001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0030001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0036001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0036001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0036001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0036001_split","table_id":"flow_D0036001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0036001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0040002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0040002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0040002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0040002_split","table_id":"flow_D0040002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0040002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0040003_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0040003_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0040003_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0040003_split","table_id":"flow_D0040003_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0040003_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0041001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0041001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0041001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0041001_SPARK","table_id":"flow_D0041001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0041001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0041001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0041001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0041001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0041001_split","table_id":"flow_D0041001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0041001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0041001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0041001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0041001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0041001_split_consolidated","table_id":"flow_D0041001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0041001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0052001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0052001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0052001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0052001_SPARK","table_id":"flow_D0052001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0052001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0052001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0052001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0052001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0052001_split","table_id":"flow_D0052001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0052001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0052001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0052001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0052001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0052001_split_consolidated","table_id":"flow_D0052001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0052001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0055001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0055001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0055001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0055001_SPARK","table_id":"flow_D0055001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0055001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0055001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0055001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0055001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0055001_split","table_id":"flow_D0055001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0055001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0055001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0055001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0055001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0055001_split_consolidated","table_id":"flow_D0055001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0055001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0057001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0057001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0057001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0057001_split","table_id":"flow_D0057001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0057001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0057001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0057001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0057001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0057001_split_consolidated","table_id":"flow_D0057001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0057001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0058001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0058001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0058001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0058001_SPARK","table_id":"flow_D0058001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0058001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0058001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0058001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0058001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0058001_split","table_id":"flow_D0058001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0058001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0058001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0058001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0058001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0058001_split_consolidated","table_id":"flow_D0058001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0058001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0064001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0064001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0064001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0064001_split","table_id":"flow_D0064001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0064001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0064001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0064001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0064001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0064001_split_consolidated","table_id":"flow_D0064001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0064001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0065001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0065001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0065001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0065001_split","table_id":"flow_D0065001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0065001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0065001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0065001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0065001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0065001_split_consolidated","table_id":"flow_D0065001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0065001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0066001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0066001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0066001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0066001_split","table_id":"flow_D0066001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0066001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0066001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0066001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0066001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0066001_split_consolidated","table_id":"flow_D0066001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0066001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0067001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0067001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0067001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0067001_split","table_id":"flow_D0067001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0067001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0067001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0067001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0067001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0067001_split_consolidated","table_id":"flow_D0067001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0067001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0068001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0068001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0068001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0068001_SPARK","table_id":"flow_D0068001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0068001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0068001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0068001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0068001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0068001_split","table_id":"flow_D0068001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0068001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0068001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0068001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0068001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0068001_split_consolidated","table_id":"flow_D0068001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0068001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0069001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0069001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0069001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0069001_SPARK","table_id":"flow_D0069001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0069001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0069001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0069001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0069001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0069001_split","table_id":"flow_D0069001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0069001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0069001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0069001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0069001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0069001_split_consolidated","table_id":"flow_D0069001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0069001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0071001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0071001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0071001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0071001_SPARK","table_id":"flow_D0071001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0071001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0071001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0071001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0071001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0071001_split","table_id":"flow_D0071001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0071001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0071001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0071001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0071001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0071001_split_consolidated","table_id":"flow_D0071001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0071001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0081001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0081001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0081001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0081001_SPARK","table_id":"flow_D0081001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0081001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0081001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0081001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0081001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0081001_split","table_id":"flow_D0081001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0081001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0081001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0081001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0081001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0081001_split_consolidated","table_id":"flow_D0081001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0081001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0086001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0086001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086001_split","table_id":"flow_D0086001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0086001_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0086002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0086002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_SPARK","table_id":"flow_D0086002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0086002_split_consolidated_v3` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0086002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0086002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_split","table_id":"flow_D0086002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0086002_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0086002_split__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0086002_split__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_split__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_split__no_dedupe","table_id":"flow_D0086002_split__no_dedupe","time_partitioning":null,"view_query":"select metadata as universal_metadata,\n       *\nfrom `data-engineering-prod.landing_andromeda_secure.flow_D0086002_split_v3`"},"data-engineering-prod:raw_andromeda_secure.flow_D0086002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0086002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0086002_split_consolidated","table_id":"flow_D0086002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0086002_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0089001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0089001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0089001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0089001_split","table_id":"flow_D0089001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0089001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0089002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0089002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0089002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0089002_split","table_id":"flow_D0089002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0089002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0089002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0089002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0089002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0089002_split_consolidated","table_id":"flow_D0089002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0089002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0090001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0090001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0090001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0090001_SPARK","table_id":"flow_D0090001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0090001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0090001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0090001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0090001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0090001_split","table_id":"flow_D0090001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0090001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0090001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0090001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0090001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0090001_split_consolidated","table_id":"flow_D0090001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0090001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0091001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0091001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091001_split","table_id":"flow_D0091001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0091001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0091001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0091001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091001_split_consolidated","table_id":"flow_D0091001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0091001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0091002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0091002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091002_split","table_id":"flow_D0091002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0091002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0091002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0091002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0091002_split_consolidated","table_id":"flow_D0091002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0091002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0092001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0092001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0092001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0092001_SPARK","table_id":"flow_D0092001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0092001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0092001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0092001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0092001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0092001_split","table_id":"flow_D0092001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0092001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0092001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0092001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0092001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0092001_split_consolidated","table_id":"flow_D0092001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0092001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0093001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0093001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0093001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0093001_SPARK","table_id":"flow_D0093001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0093001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0093001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0093001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0093001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0093001_split","table_id":"flow_D0093001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0093001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0093001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0093001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0093001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0093001_split_consolidated","table_id":"flow_D0093001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0093001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0095001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0095001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0095001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0095001_SPARK","table_id":"flow_D0095001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0095001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0095001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0095001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0095001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0095001_split","table_id":"flow_D0095001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0095001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0095001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0095001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0095001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0095001_split_consolidated","table_id":"flow_D0095001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0095001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0132001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0132001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0132001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0132001_SPARK","table_id":"flow_D0132001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0132001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0132001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0132001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0132001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0132001_split","table_id":"flow_D0132001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0132001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0132001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0132001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0132001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0132001_split_consolidated","table_id":"flow_D0132001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0132001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0139001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0139001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0139001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0139001_SPARK","table_id":"flow_D0139001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0139001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0139001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0139001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0139001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0139001_split","table_id":"flow_D0139001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0139001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0139001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0139001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0139001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0139001_split_consolidated","table_id":"flow_D0139001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0139001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0142001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0142001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0142001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0142001_split","table_id":"flow_D0142001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0142001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0142001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0142001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0142001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0142001_split_consolidated","table_id":"flow_D0142001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0142001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0148001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0148001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0148001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0148001_SPARK","table_id":"flow_D0148001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0148001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0148001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0148001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0148001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0148001_split","table_id":"flow_D0148001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0148001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0148001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0148001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0148001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0148001_split_consolidated","table_id":"flow_D0148001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0148001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0149001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0149001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0149001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0149001_SPARK","table_id":"flow_D0149001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0149001_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0149001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0149001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0149001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0149001_split","table_id":"flow_D0149001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0149001_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0149001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0149001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0149001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0149001_split_consolidated","table_id":"flow_D0149001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0149001_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0150001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0150001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0150001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0150001_SPARK","table_id":"flow_D0150001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0150001_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0150001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0150001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0150001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0150001_split","table_id":"flow_D0150001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0150001_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0150001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0150001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0150001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0150001_split_consolidated","table_id":"flow_D0150001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0150001_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0151001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0151001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0151001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0151001_SPARK","table_id":"flow_D0151001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0151001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0151001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0151001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0151001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0151001_split","table_id":"flow_D0151001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0151001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0151001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0151001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0151001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0151001_split_consolidated","table_id":"flow_D0151001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0151001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0153001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0153001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0153001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0153001_SPARK","table_id":"flow_D0153001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0153001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0153001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0153001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0153001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0153001_split","table_id":"flow_D0153001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0153001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0153001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0153001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0153001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0153001_split_consolidated","table_id":"flow_D0153001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0153001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0155001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0155001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0155001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0155001_SPARK","table_id":"flow_D0155001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0155001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0155001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0155001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0155001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0155001_split","table_id":"flow_D0155001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0155001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0155001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0155001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0155001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0155001_split_consolidated","table_id":"flow_D0155001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0155001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0171001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0171001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0171001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0171001_split","table_id":"flow_D0171001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0171001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0171001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0171001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0171001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0171001_split_consolidated","table_id":"flow_D0171001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0171001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0188001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0188001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0188001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0188001_SPARK","table_id":"flow_D0188001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0188001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0188001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0188001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0188001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0188001_split","table_id":"flow_D0188001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0188001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0188001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0188001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0188001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0188001_split_consolidated","table_id":"flow_D0188001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0188001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0203001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0203001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0203001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0203001_SPARK","table_id":"flow_D0203001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0203001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0203001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0203001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0203001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0203001_split","table_id":"flow_D0203001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0203001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0203001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0203001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0203001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0203001_split_consolidated","table_id":"flow_D0203001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0203001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0205001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0205001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0205001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0205001_SPARK","table_id":"flow_D0205001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0205001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0205001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0205001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0205001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0205001_split","table_id":"flow_D0205001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0205001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0205001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0205001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0205001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0205001_split_consolidated","table_id":"flow_D0205001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0205001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0217001_POST_DTC10_7_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0217001_POST_DTC10_7_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split","table_id":"flow_D0217001_POST_DTC10_7_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217001_POST_DTC10_7_split_consolidated","table_id":"flow_D0217001_POST_DTC10_7_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0217001_POST_DTC10_7_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0217001_PRE_DTC10_7_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0217001_PRE_DTC10_7_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217001_PRE_DTC10_7_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217001_PRE_DTC10_7_split","table_id":"flow_D0217001_PRE_DTC10_7_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0217001_PRE_DTC10_7_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0217002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0217002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217002_SPARK","table_id":"flow_D0217002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0217002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0217002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0217002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217002_split","table_id":"flow_D0217002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0217002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0217002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0217002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0217002_split_consolidated","table_id":"flow_D0217002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0217002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0221001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0221001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0221001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0221001_SPARK","table_id":"flow_D0221001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0221001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0221001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0221001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0221001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0221001_split","table_id":"flow_D0221001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0221001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0221001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0221001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0221001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0221001_split_consolidated","table_id":"flow_D0221001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0221001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0225001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0225001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225001_split","table_id":"flow_D0225001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0225001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0225002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0225002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225002_SPARK","table_id":"flow_D0225002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0225002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0225002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0225002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225002_split","table_id":"flow_D0225002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0225002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0225002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0225002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0225002_split_consolidated","table_id":"flow_D0225002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0225002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0235001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0235001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0235001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0235001_split","table_id":"flow_D0235001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0235001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0242001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0242001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0242001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0242001_split","table_id":"flow_D0242001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0242001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0242001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0242001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0242001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0242001_split_consolidated","table_id":"flow_D0242001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0242001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0260001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0260001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260001_split","table_id":"flow_D0260001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0260001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0260001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0260001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260001_split_consolidated","table_id":"flow_D0260001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0260001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0260002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0260002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260002_SPARK","table_id":"flow_D0260002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0260002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0260002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0260002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260002_split","table_id":"flow_D0260002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0260002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0260002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0260002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0260002_split_consolidated","table_id":"flow_D0260002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0260002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0269004_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0269004_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0269004_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0269004_split","table_id":"flow_D0269004_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0269004_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0296001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0296001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0296001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0296001_SPARK","table_id":"flow_D0296001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0296001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0296001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0296001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0296001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0296001_split","table_id":"flow_D0296001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0296001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0296001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0296001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0296001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0296001_split_consolidated","table_id":"flow_D0296001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0296001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0300001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0300001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0300001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0300001_SPARK","table_id":"flow_D0300001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0300001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0300001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0300001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0300001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0300001_split","table_id":"flow_D0300001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0300001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0300001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0300001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0300001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0300001_split_consolidated","table_id":"flow_D0300001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0300001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0301001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0301001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301001_split","table_id":"flow_D0301001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0301001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0301002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0301002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301002_SPARK","table_id":"flow_D0301002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0301002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0301002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0301002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301002_split","table_id":"flow_D0301002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0301002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0301002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0301002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0301002_split_consolidated","table_id":"flow_D0301002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0301002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0302001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0302001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302001_split","table_id":"flow_D0302001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0302001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0302002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0302002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302002_SPARK","table_id":"flow_D0302002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0302002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0302002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0302002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302002_split","table_id":"flow_D0302002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0302002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0302002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0302002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0302002_split_consolidated","table_id":"flow_D0302002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0302002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0303001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0303001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0303001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0303001_split","table_id":"flow_D0303001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0303001_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0304001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0304001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0304001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0304001_SPARK","table_id":"flow_D0304001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0304001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0304001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0304001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0304001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0304001_split","table_id":"flow_D0304001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0304001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0304001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0304001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0304001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0304001_split_consolidated","table_id":"flow_D0304001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0304001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0306001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0306001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306001_split","table_id":"flow_D0306001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0306001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0306001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0306001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306001_split_consolidated","table_id":"flow_D0306001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0306001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0306002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0306002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306002_SPARK","table_id":"flow_D0306002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0306002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0306002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0306002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306002_split","table_id":"flow_D0306002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0306002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0306002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0306002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0306002_split_consolidated","table_id":"flow_D0306002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0306002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0307001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0307001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307001_split","table_id":"flow_D0307001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0307001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0307002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0307002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307002_SPARK","table_id":"flow_D0307002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0307002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0307002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0307002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307002_split","table_id":"flow_D0307002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0307002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0307002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0307002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0307002_split_consolidated","table_id":"flow_D0307002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0307002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0308002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0308002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0308002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0308002_SPARK","table_id":"flow_D0308002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0308002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0308002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0308002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0308002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0308002_split","table_id":"flow_D0308002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0308002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0308002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0308002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0308002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0308002_split_consolidated","table_id":"flow_D0308002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0308002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0309002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0309002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0309002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0309002_split","table_id":"flow_D0309002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0309002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0309002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0309002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0309002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0309002_split_consolidated","table_id":"flow_D0309002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0309002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0310001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0310001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0310001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0310001_SPARK","table_id":"flow_D0310001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0310001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0310001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0310001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0310001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0310001_split","table_id":"flow_D0310001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0310001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0310001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0310001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0310001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0310001_split_consolidated","table_id":"flow_D0310001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0310001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0311001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0311001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0311001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0311001_SPARK","table_id":"flow_D0311001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0311001_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0311001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0311001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0311001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0311001_split","table_id":"flow_D0311001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0311001_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0311001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0311001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0311001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0311001_split_consolidated","table_id":"flow_D0311001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0311001_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0312002_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0312002_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0312002_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0312002_SPARK","table_id":"flow_D0312002_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0312002_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0312002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0312002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0312002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0312002_split","table_id":"flow_D0312002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0312002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0312002_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0312002_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0312002_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0312002_split_consolidated","table_id":"flow_D0312002_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0312002_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0358001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0358001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0358001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0358001_split","table_id":"flow_D0358001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0358001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0358001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0358001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0358001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0358001_split_consolidated","table_id":"flow_D0358001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0358001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0359001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0359001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0359001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0359001_SPARK","table_id":"flow_D0359001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0359001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0359001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0359001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0359001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0359001_split","table_id":"flow_D0359001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0359001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0359001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0359001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0359001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0359001_split_consolidated","table_id":"flow_D0359001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0359001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0360001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0360001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0360001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0360001_split","table_id":"flow_D0360001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0360001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0360001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0360001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0360001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0360001_split_consolidated","table_id":"flow_D0360001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0360001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0361001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0361001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0361001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0361001_SPARK","table_id":"flow_D0361001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0361001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0361001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0361001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0361001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0361001_split","table_id":"flow_D0361001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0361001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0361001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0361001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0361001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0361001_split_consolidated","table_id":"flow_D0361001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0361001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0367001_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0367001_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0367001_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0367001_SPARK","table_id":"flow_D0367001_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_D0367001_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_D0367001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0367001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0367001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0367001_split","table_id":"flow_D0367001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0367001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0367001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0367001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0367001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0367001_split_consolidated","table_id":"flow_D0367001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0367001_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_D0380001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_D0380001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0380001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_D0380001_split","table_id":"flow_D0380001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_D0380001_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_DCF_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_DCF_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DCF_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DCF_SPARK","table_id":"flow_DCF_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_DCF_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_DCF_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_DCF_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DCF_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DCF_split","table_id":"flow_DCF_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_DCF_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_DCF_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_DCF_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DCF_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DCF_split_consolidated","table_id":"flow_DCF_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_DCF_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_DRS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_DRS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DRS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DRS_SPARK","table_id":"flow_DRS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_DRS_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_DRS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_DRS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DRS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DRS_split","table_id":"flow_DRS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_DRS_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_DRS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_DRS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DRS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_DRS_split_consolidated","table_id":"flow_DRS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_DRS_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_G0806_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0806_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0806_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0806_SPARK","table_id":"flow_G0806_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_G0806_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_G0806_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0806_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0806_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0806_split","table_id":"flow_G0806_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_G0806_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_G0806_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0806_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0806_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0806_split_consolidated","table_id":"flow_G0806_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_G0806_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_G0807_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0807_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0807_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0807_SPARK","table_id":"flow_G0807_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_G0807_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_G0807_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0807_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0807_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0807_split","table_id":"flow_G0807_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_G0807_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_G0807_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0807_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0807_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0807_split_consolidated","table_id":"flow_G0807_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_G0807_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_G0808_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0808_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0808_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0808_SPARK","table_id":"flow_G0808_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_G0808_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_G0808_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0808_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0808_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0808_split","table_id":"flow_G0808_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_G0808_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_G0808_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_G0808_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0808_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_G0808_split_consolidated","table_id":"flow_G0808_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_G0808_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_LPA_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_LPA_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_LPA_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_LPA_SPARK","table_id":"flow_LPA_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_LPA_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_LPA_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_LPA_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_LPA_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_LPA_split","table_id":"flow_LPA_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_LPA_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_LPA_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_LPA_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_LPA_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_LPA_split_consolidated","table_id":"flow_LPA_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_LPA_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_SPARK","table_id":"flow_MBR_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_MBR_POST_NEXUS_split_consolidated_v3` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split","table_id":"flow_MBR_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_split__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_split__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split__no_dedupe","table_id":"flow_MBR_POST_NEXUS_split__no_dedupe","time_partitioning":null,"view_query":"select metadata as universal_metadata,\n       *\nfrom `data-engineering-prod.landing_andromeda_secure.flow_MBR_POST_NEXUS_split_v3`"},"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MBR_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_POST_NEXUS_split_consolidated","table_id":"flow_MBR_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_MBR_POST_NEXUS_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_MBR_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MBR_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MBR_PRE_NEXUS_split","table_id":"flow_MBR_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_MBR_PRE_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_MRI_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MRI_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_SPARK","table_id":"flow_MRI_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_MRI_POST_NEXUS_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_MRI_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MRI_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split","table_id":"flow_MRI_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_MRI_POST_NEXUS_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_MRI_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MRI_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_POST_NEXUS_split_consolidated","table_id":"flow_MRI_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_MRI_POST_NEXUS_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_MRI_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_MRI_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_MRI_PRE_NEXUS_split","table_id":"flow_MRI_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_MRI_PRE_NEXUS_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_NOSI_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NOSI_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NOSI_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NOSI_SPARK","table_id":"flow_NOSI_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_NOSI_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_NOSI_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NOSI_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NOSI_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NOSI_split","table_id":"flow_NOSI_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_NOSI_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_NOSI_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NOSI_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NOSI_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NOSI_split_consolidated","table_id":"flow_NOSI_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_NOSI_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_NRL_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NRL_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_SPARK","table_id":"flow_NRL_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_NRL_POST_NEXUS_split_consolidated_v3` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_NRL_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NRL_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split","table_id":"flow_NRL_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_NRL_POST_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_NRL_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NRL_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_POST_NEXUS_split_consolidated","table_id":"flow_NRL_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_NRL_POST_NEXUS_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_NRL_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_NRL_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_NRL_PRE_NEXUS_split","table_id":"flow_NRL_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_NRL_PRE_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ONAGE_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONAGE_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONAGE_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONAGE_SPARK","table_id":"flow_ONAGE_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_ONAGE_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_ONAGE_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONAGE_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONAGE_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONAGE_split","table_id":"flow_ONAGE_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ONAGE_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ONAGE_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONAGE_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONAGE_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONAGE_split_consolidated","table_id":"flow_ONAGE_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ONAGE_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ONJOB_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONJOB_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONJOB_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONJOB_SPARK","table_id":"flow_ONJOB_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_ONJOB_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_ONJOB_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONJOB_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONJOB_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONJOB_split","table_id":"flow_ONJOB_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ONJOB_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ONJOB_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONJOB_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONJOB_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONJOB_split_consolidated","table_id":"flow_ONJOB_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ONJOB_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ONUPD_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONUPD_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONUPD_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONUPD_SPARK","table_id":"flow_ONUPD_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_ONUPD_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_ONUPD_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONUPD_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONUPD_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONUPD_split","table_id":"flow_ONUPD_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ONUPD_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ONUPD_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ONUPD_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONUPD_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ONUPD_split_consolidated","table_id":"flow_ONUPD_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ONUPD_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ORJOB_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ORJOB_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ORJOB_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ORJOB_SPARK","table_id":"flow_ORJOB_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_ORJOB_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_ORJOB_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ORJOB_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ORJOB_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ORJOB_split","table_id":"flow_ORJOB_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ORJOB_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_ORJOB_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_ORJOB_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ORJOB_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_ORJOB_split_consolidated","table_id":"flow_ORJOB_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_ORJOB_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_PAC_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_PAC_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_SPARK","table_id":"flow_PAC_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_PAC_POST_NEXUS_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_PAC_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_PAC_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split","table_id":"flow_PAC_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_PAC_POST_NEXUS_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_PAC_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_PAC_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_POST_NEXUS_split_consolidated","table_id":"flow_PAC_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_PAC_POST_NEXUS_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_PAC_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_PAC_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_PAC_PRE_NEXUS_split","table_id":"flow_PAC_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_PAC_PRE_NEXUS_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RD1_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RD1_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RD1_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RD1_SPARK","table_id":"flow_RD1_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_RD1_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_RD1_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RD1_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RD1_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RD1_split","table_id":"flow_RD1_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RD1_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RD1_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RD1_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RD1_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RD1_split_consolidated","table_id":"flow_RD1_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RD1_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RESPN":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RESPN","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN","table_id":"flow_RESPN","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RESPN_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RESPNSPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RESPNSPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPNSPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPNSPARK","table_id":"flow_RESPNSPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_RESPN_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_RESPN_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RESPN_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN_SPARK","table_id":"flow_RESPN_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_RESPN_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_RESPN_TRA":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RESPN_TRA","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN_TRA","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN_TRA","table_id":"flow_RESPN_TRA","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RESPN_TRA_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RESPN_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RESPN_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RESPN_consolidated","table_id":"flow_RESPN_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RESPN_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RET_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RET_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RET_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RET_SPARK","table_id":"flow_RET_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_RET_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_RET_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RET_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RET_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RET_split","table_id":"flow_RET_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RET_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_RET_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_RET_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RET_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_RET_split_consolidated","table_id":"flow_RET_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_RET_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_S0004001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_S0004001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_S0004001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_S0004001_split","table_id":"flow_S0004001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_S0004001_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_S0015002_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_S0015002_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_S0015002_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_S0015002_split","table_id":"flow_S0015002_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_S0015002_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SAR_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SAR_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SAR_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SAR_SPARK","table_id":"flow_SAR_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_SAR_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_SAR_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SAR_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SAR_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SAR_split","table_id":"flow_SAR_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SAR_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SAR_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SAR_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SAR_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SAR_split_consolidated","table_id":"flow_SAR_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SAR_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SCR_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SCR_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SCR_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SCR_SPARK","table_id":"flow_SCR_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_SCR_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_SCR_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SCR_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SCR_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SCR_split","table_id":"flow_SCR_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SCR_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SCR_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SCR_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SCR_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SCR_split_consolidated","table_id":"flow_SCR_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SCR_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_ALARMS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_ALARMS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ALARMS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ALARMS_split","table_id":"flow_SFE_ALARMS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_ALARMS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_ALARMS_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_ALARMS_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ALARMS_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ALARMS_validated","table_id":"flow_SFE_ALARMS_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_ALARMS_validated_v7` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_ASSETINFO_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_ASSETINFO_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ASSETINFO_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ASSETINFO_split","table_id":"flow_SFE_ASSETINFO_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_ASSETINFO_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_ASSETINFO_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_ASSETINFO_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ASSETINFO_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_ASSETINFO_validated","table_id":"flow_SFE_ASSETINFO_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_ASSETINFO_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_split","table_id":"flow_SFE_BILLINGSCHEDULE_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_BILLINGSCHEDULE_validated","table_id":"flow_SFE_BILLINGSCHEDULE_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_BILLINGSCHEDULE_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_CHANGETARIFF_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_CHANGETARIFF_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_split","table_id":"flow_SFE_CHANGETARIFF_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_CHANGETARIFF_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_CHANGETARIFF_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_CHANGETARIFF_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_CHANGETARIFF_validated","table_id":"flow_SFE_CHANGETARIFF_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_CHANGETARIFF_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_split","table_id":"flow_SFE_COSGAINRESPONSE_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSGAINRESPONSE_validated","table_id":"flow_SFE_COSGAINRESPONSE_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_COSGAINRESPONSE_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_split","table_id":"flow_SFE_COSLOSSRESPONSE_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COSLOSSRESPONSE_validated","table_id":"flow_SFE_COSLOSSRESPONSE_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_COSLOSSRESPONSE_validated_v6` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_COTREPORT_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_COTREPORT_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COTREPORT_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COTREPORT_split","table_id":"flow_SFE_COTREPORT_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_COTREPORT_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_COTREPORT_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_COTREPORT_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COTREPORT_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_COTREPORT_validated","table_id":"flow_SFE_COTREPORT_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_COTREPORT_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_split","table_id":"flow_SFE_DAILYCHANGEMODE_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYCHANGEMODE_validated","table_id":"flow_SFE_DAILYCHANGEMODE_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_DAILYCHANGEMODE_validated_v6` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_split","table_id":"flow_SFE_DAILYREADSCHEDULE_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_DAILYREADSCHEDULE_validated","table_id":"flow_SFE_DAILYREADSCHEDULE_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_DAILYREADSCHEDULE_validated_v6` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_INSTALLSTATUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_INSTALLSTATUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_split","table_id":"flow_SFE_INSTALLSTATUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_INSTALLSTATUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_INSTALLSTATUS_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_INSTALLSTATUS_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_INSTALLSTATUS_validated","table_id":"flow_SFE_INSTALLSTATUS_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_INSTALLSTATUS_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_NOCOMMS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_NOCOMMS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NOCOMMS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NOCOMMS_split","table_id":"flow_SFE_NOCOMMS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_NOCOMMS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_NOCOMMS_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_NOCOMMS_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NOCOMMS_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NOCOMMS_validated","table_id":"flow_SFE_NOCOMMS_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_NOCOMMS_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_NONDISCONNECT_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_NONDISCONNECT_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_split","table_id":"flow_SFE_NONDISCONNECT_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_NONDISCONNECT_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_NONDISCONNECT_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_NONDISCONNECT_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_NONDISCONNECT_validated","table_id":"flow_SFE_NONDISCONNECT_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_NONDISCONNECT_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_split","table_id":"flow_SFE_UNKNOWNTARIFF_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_UNKNOWNTARIFF_validated","table_id":"flow_SFE_UNKNOWNTARIFF_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_UNKNOWNTARIFF_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDHISTORY_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDHISTORY_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_split","table_id":"flow_SFE_VENDHISTORY_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_VENDHISTORY_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDHISTORY_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDHISTORY_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDHISTORY_validated","table_id":"flow_SFE_VENDHISTORY_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_VENDHISTORY_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDLOG_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDLOG_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDLOG_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDLOG_split","table_id":"flow_SFE_VENDLOG_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_VENDLOG_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDLOG_validated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SFE_VENDLOG_validated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDLOG_validated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SFE_VENDLOG_validated","table_id":"flow_SFE_VENDLOG_validated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SFE_VENDLOG_validated_v5` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SPC_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SPC_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SPC_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SPC_split","table_id":"flow_SPC_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SPC_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_SPC_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_SPC_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SPC_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_SPC_split_consolidated","table_id":"flow_SPC_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_SPC_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_TRF_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_TRF_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_SPARK","table_id":"flow_TRF_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated_v4` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_TRF_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_TRF_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split","table_id":"flow_TRF_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_TRF_POST_NEXUS_split_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_POST_NEXUS_split_consolidated","table_id":"flow_TRF_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_TRF_POST_NEXUS_split_consolidated_v4` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_TRF_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_TRF_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_TRF_PRE_NEXUS_split","table_id":"flow_TRF_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_TRF_PRE_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UBR_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UBR_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UBR_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UBR_SPARK","table_id":"flow_UBR_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_UBR_split_consolidated_v1` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_UBR_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UBR_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UBR_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UBR_split","table_id":"flow_UBR_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UBR_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UBR_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UBR_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UBR_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UBR_split_consolidated","table_id":"flow_UBR_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UBR_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UMR_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UMR_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_SPARK","table_id":"flow_UMR_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_UMR_POST_NEXUS_split_consolidated_v3` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_UMR_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UMR_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split","table_id":"flow_UMR_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UMR_POST_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UMR_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UMR_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_POST_NEXUS_split_consolidated","table_id":"flow_UMR_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UMR_POST_NEXUS_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UMR_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UMR_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UMR_PRE_NEXUS_split","table_id":"flow_UMR_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UMR_PRE_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_SPARK","table_id":"flow_URN_POST_NEXUS_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_URN_POST_NEXUS_split_consolidated_v3` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split","table_id":"flow_URN_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_URN_POST_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_split__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_split__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split__no_dedupe","table_id":"flow_URN_POST_NEXUS_split__no_dedupe","time_partitioning":null,"view_query":"select metadata as universal_metadata,\n       *\nfrom `data-engineering-prod.landing_andromeda_secure.flow_URN_POST_NEXUS_split_v3`"},"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URN_POST_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_POST_NEXUS_split_consolidated","table_id":"flow_URN_POST_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_URN_POST_NEXUS_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_URN_PRE_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URN_PRE_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split","table_id":"flow_URN_PRE_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_URN_PRE_NEXUS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_URN_PRE_NEXUS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URN_PRE_NEXUS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URN_PRE_NEXUS_split_consolidated","table_id":"flow_URN_PRE_NEXUS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_URN_PRE_NEXUS_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_URS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URS_split","table_id":"flow_URS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_URS_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_URS_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_URS_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URS_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_URS_split_consolidated","table_id":"flow_URS_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_URS_split_consolidated_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT001_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT001_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT001_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT001_split","table_id":"flow_UT001_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT001_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT001_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT001_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT001_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT001_split_consolidated","table_id":"flow_UT001_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT001_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT003_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT003_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT003_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT003_split","table_id":"flow_UT003_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT003_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT003_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT003_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT003_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT003_split_consolidated","table_id":"flow_UT003_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT003_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT004_POST_NEXUS_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT004_POST_NEXUS_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT004_POST_NEXUS_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT004_POST_NEXUS_split","table_id":"flow_UT004_POST_NEXUS_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT004_POST_NEXUS_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT004_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT004_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT004_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT004_split","table_id":"flow_UT004_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT004_split_v3` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT006_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT006_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT006_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT006_split","table_id":"flow_UT006_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT006_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT008_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT008_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT008_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT008_split","table_id":"flow_UT008_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT008_split_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_UT008_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_UT008_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT008_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_UT008_split_consolidated","table_id":"flow_UT008_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_UT008_split_consolidated_v1` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_WAO_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_WAO_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WAO_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WAO_SPARK","table_id":"flow_WAO_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_WAO_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_WAO_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_WAO_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WAO_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WAO_split","table_id":"flow_WAO_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_WAO_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_WAO_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_WAO_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WAO_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WAO_split_consolidated","table_id":"flow_WAO_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_WAO_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_WOR_SPARK":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_WOR_SPARK","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WOR_SPARK","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WOR_SPARK","table_id":"flow_WOR_SPARK","time_partitioning":null,"view_query":"\n            SELECT\n                * EXCEPT (rn)\n            FROM (\n                SELECT\n                    ROW_NUMBER() OVER (\n                        PARTITION BY metadata.eventId\n                        ORDER BY metadata.createdAt DESC) AS rn,\n                    *\n                FROM `data-engineering-prod.landing_andromeda_secure.flow_WOR_split_consolidated_v2` ) AS t\n            WHERE\n                t.rn = 1\n            AND\n                t.metadata.sourceBucket = 'SPARK'\n        "},"data-engineering-prod:raw_andromeda_secure.flow_WOR_split":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_WOR_split","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WOR_split","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WOR_split","table_id":"flow_WOR_split","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_WOR_split_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flow_WOR_split_consolidated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flow_WOR_split_consolidated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WOR_split_consolidated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flow_WOR_split_consolidated","table_id":"flow_WOR_split_consolidated","time_partitioning":null,"view_query":"\n        SELECT\n            * EXCEPT (rn)\n        FROM (\n            SELECT\n                ROW_NUMBER() OVER (\n                    PARTITION BY metadata.eventId\n                    ORDER BY metadata.createdAt DESC) AS rn,\n                *\n            FROM\n                `data-engineering-prod.landing_andromeda_secure.flow_WOR_split_consolidated_v2` ) AS t\n        WHERE\n            t.rn = 1\n    "},"data-engineering-prod:raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_parsed_flow_seen_on_gs_industry_data_lake_parsed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_parsed_flow_seen_on_gs_industry_data_lake_parsed","table_id":"flows_parsed_flow_seen_on_gs_industry_data_lake_parsed","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n    SELECT\n      ROW_NUMBER() OVER (PARTITION BY rawSourceBlobMd5Hash ORDER BY metadata.createdAt DESC) AS rn,\n      *\n    FROM\n      `data-engineering-prod.landing_andromeda_secure.flows_parsed_flow_seen_on_gs_industry_data_lake_parsed_v2`\n    WHERE\n      parsedBlobType = \"avro\"\n  ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.flows_parsed_flow_seen_on_kafka":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_parsed_flow_seen_on_kafka","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_parsed_flow_seen_on_kafka","table_id":"flows_parsed_flow_seen_on_kafka","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n  SELECT\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY metadata.createdAt DESC) AS rn,\n    *\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_parsed_flow_seen_on_kafka_v5` ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_raw_consolidated_flow_seen_on_gs_industry_data_lake","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_raw_consolidated_flow_seen_on_gs_industry_data_lake","table_id":"flows_raw_consolidated_flow_seen_on_gs_industry_data_lake","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n  SELECT\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY metadata.createdAt DESC) AS rn,\n    *\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_raw_consolidated_flow_seen_on_gs_industry_data_lake_v3` ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_raw_flow_seen_on_gs_industry_data_lake","table_id":"flows_raw_flow_seen_on_gs_industry_data_lake","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n  SELECT\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY metadata.createdAt DESC) AS rn,\n    *\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_raw_flow_seen_on_gs_industry_data_lake_v3` ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.flows_split_consolidated_flow_record_seen_on_kafka":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_split_consolidated_flow_record_seen_on_kafka","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_split_consolidated_flow_record_seen_on_kafka","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_split_consolidated_flow_record_seen_on_kafka","table_id":"flows_split_consolidated_flow_record_seen_on_kafka","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n  SELECT\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY metadata.createdAt DESC) AS rn,\n    *\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_split_consolidated_flow_record_seen_on_kafka_v1` ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.flows_split_flow_record_seen_on_kafka":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_split_flow_record_seen_on_kafka","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_split_flow_record_seen_on_kafka","table_id":"flows_split_flow_record_seen_on_kafka","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n  SELECT\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY metadata.createdAt DESC) AS rn,\n    *\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_split_flow_record_seen_on_kafka_v8` ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_uncategorised_flow_seen_on_gs_industry_data_lake","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/flows_uncategorised_flow_seen_on_gs_industry_data_lake","table_id":"flows_uncategorised_flow_seen_on_gs_industry_data_lake","time_partitioning":null,"view_query":"SELECT\n  * EXCEPT (rn)\nFROM (\n  SELECT\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY metadata.createdAt DESC) AS rn,\n    *\n  FROM\n    `data-engineering-prod.landing_andromeda_secure.flows_uncategorised_flow_seen_on_gs_industry_data_lake_v1` ) AS t\nWHERE\n  t.rn = 1\n"},"data-engineering-prod:raw_andromeda_secure.rac_calorific_value_received":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_calorific_value_received","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_calorific_value_received","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_calorific_value_received","table_id":"rac_calorific_value_received","time_partitioning":null,"view_query":"--Latest view for rac_calorific_value_received topic\n\nSELECT\n  metadata,\n  chargingZone,\n  generationTimestamp,\n  applicableGasDay,\n  value,\n  status,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda.rac_calorific_value_received_v1`\n"},"data-engineering-prod:raw_andromeda_secure.rac_consumption_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_consumption_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_consumption_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_consumption_generated","table_id":"rac_consumption_generated","time_partitioning":null,"view_query":"with cte_consumption_union as\n(\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         event.ElectricityConsumptionGeneratedEvent.consumptionId as consumptionId,\n         event.ElectricityConsumptionGeneratedEvent.mpan as mpan,\n         event.ElectricityConsumptionGeneratedEvent.fromDateTime as fromDateTime,\n         event.ElectricityConsumptionGeneratedEvent.fromMeterReading as fromMeterReading,\n         event.ElectricityConsumptionGeneratedEvent.toDateTime as toDateTime,\n         event.ElectricityConsumptionGeneratedEvent.toMeterReading as toMeterReading,\n         event.ElectricityConsumptionGeneratedEvent.consumption as consumption,\n         event.ElectricityConsumptionRefinedEvent.previousConsumptionId as previousConsumptionId,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.consumptionId as firstRefined_consumptionId,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.mpan as firstRefined_mpan,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.fromDateTime as firstRefined_fromDateTime,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.fromMeterReading as firstRefined_fromMeterReading,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.toDateTime as firstRefined_toDateTime,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.toMeterReading as firstRefined_toMeterReading,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.consumption as firstRefined_consumption,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.consumptionId as secondRefined_consumptionId,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.mpan as secondRefined_mpan,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.fromDateTime as secondRefined_fromDateTime,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.fromMeterReading as secondRefined_fromMeterReading,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.toDateTime as secondRefined_toDateTime,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.toMeterReading as secondRefined_toMeterReading,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.consumption as secondRefined_consumption,\n         null as debugInfo,\n         kafkaData.topic,\n         kafkaData.partition,\n         kafkaData.offset,\n         kafkaData.insertTime\n  from `data-engineering-prod.landing_andromeda_secure.rac_consumption_generated_v7` v7\n),\ncte_consumption_event_dedupe as\n(\n  select *,\n         row_number() over (partition by eventId order by topic desc, createdAt desc) as event_dedupe_rownum\n  from cte_consumption_union\n)\nselect *\nfrom cte_consumption_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_consumption_generated__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_consumption_generated__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_consumption_generated__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_consumption_generated__no_dedupe","table_id":"rac_consumption_generated__no_dedupe","time_partitioning":null,"view_query":"  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         event.ElectricityConsumptionGeneratedEvent.consumptionId as consumptionId,\n         event.ElectricityConsumptionGeneratedEvent.mpan as mpan,\n         event.ElectricityConsumptionGeneratedEvent.fromDateTime as fromDateTime,\n         event.ElectricityConsumptionGeneratedEvent.fromMeterReading as fromMeterReading,\n         event.ElectricityConsumptionGeneratedEvent.toDateTime as toDateTime,\n         event.ElectricityConsumptionGeneratedEvent.toMeterReading as toMeterReading,\n         event.ElectricityConsumptionGeneratedEvent.consumption as consumption,\n         event.ElectricityConsumptionRefinedEvent.previousConsumptionId as previousConsumptionId,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.consumptionId as firstRefined_consumptionId,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.mpan as firstRefined_mpan,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.fromDateTime as firstRefined_fromDateTime,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.fromMeterReading as firstRefined_fromMeterReading,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.toDateTime as firstRefined_toDateTime,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.toMeterReading as firstRefined_toMeterReading,\n         event.ElectricityConsumptionRefinedEvent.firstRefinedConsumption.consumption as firstRefined_consumption,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.consumptionId as secondRefined_consumptionId,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.mpan as secondRefined_mpan,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.fromDateTime as secondRefined_fromDateTime,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.fromMeterReading as secondRefined_fromMeterReading,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.toDateTime as secondRefined_toDateTime,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.toMeterReading as secondRefined_toMeterReading,\n         event.ElectricityConsumptionRefinedEvent.secondRefinedConsumption.consumption as secondRefined_consumption,\n         null as debugInfo,\n         kafkaData.topic,\n         kafkaData.partition,\n         kafkaData.offset,\n         kafkaData.insertTime\n  from `data-engineering-prod.landing_andromeda_secure.rac_consumption_generated_v7` v7"},"data-engineering-prod:raw_andromeda_secure.rac_consumption_loss_adjustment_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_consumption_loss_adjustment_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_consumption_loss_adjustment_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_consumption_loss_adjustment_generated","table_id":"rac_consumption_loss_adjustment_generated","time_partitioning":null,"view_query":"with cte_dedupe as\n(\n    select *,\n           row_number() over (partition by metadata.eventId order by metadata.createdAt desc, kafkaData.insertTime desc) as dedupe_rownum\n    from `data-engineering-prod.landing_andromeda_secure.rac_consumption_loss_adjustment_generated_v1`\n)\nselect * except(dedupe_rownum)\nfrom cte_dedupe\nwhere dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_flow_d0010_received":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_flow_d0010_received","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_flow_d0010_received","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_flow_d0010_received","table_id":"rac_flow_d0010_received","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_andromeda.rac_flow_d0010_received_v9`"},"data-engineering-prod:raw_andromeda_secure.rac_gas_consumption_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_gas_consumption_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_gas_consumption_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_gas_consumption_generated","table_id":"rac_gas_consumption_generated","time_partitioning":null,"view_query":"with cte_gas_consumption_union as\n(\n  select v6.metadata.eventId,\n         v6.metadata.createdAt,\n         v6.metadata.traceToken,\n         v6.event.GasConsumptionGeneratedEvent.consumptionId                      as generated_consumptionId,\n         v6.event.GasConsumptionGeneratedEvent.mprn                               as generated_mprn,\n         v6.event.GasConsumptionGeneratedEvent.chargingZone                       as generated_chargingZone,\n         v6.event.GasConsumptionGeneratedEvent.fromDateTime                       as generated_fromDateTime,\n         v6.event.GasConsumptionGeneratedEvent.fromMeterReading                   as generated_fromMeterReading,\n         v6.event.GasConsumptionGeneratedEvent.toDateTime                         as generated_toDateTime,\n         v6.event.GasConsumptionGeneratedEvent.toMeterReading                     as generated_toMeterReading,\n         v6.event.GasConsumptionGeneratedEvent.volume                             as generated_volume,\n         v6.event.GasConsumptionGeneratedEvent.calorificValues                    as generated_calorificValues,\n         v6.event.GasConsumptionGeneratedEvent.effectiveCalorificValue            as generated_effectiveCalorificValue,\n         v6.event.GasConsumptionGeneratedEvent.consumption                        as generated_consumption,\n         null                                                                     as generated_debugInfo,\n         v6.event.GasConsumptionUpdatedEvent.consumptionId                        as updated_consumptionId,\n         v6.event.GasConsumptionUpdatedEvent.calorificValues                      as updated_calorificValues,\n         v6.event.GasConsumptionUpdatedEvent.effectiveCalorificValue              as updated_effectiveCalorificValue,\n         v6.event.GasConsumptionUpdatedEvent.consumption                          as updated_consumption,\n         null                                                                     as updated_debugInfo,\n         v6.event.GasConsumptionRefinedEvent.previousConsumptionId                as previousConsumptionId,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.consumptionId              as firstRefined_consumptionId,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.mprn                       as firstRefined_mprn,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.chargingZone               as firstRefined_chargingZone,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.fromDateTime               as firstRefined_fromDateTime,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.fromMeterReading           as firstRefined_fromMeterReading,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.toDateTime                 as firstRefined_toDateTime,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.toMeterReading             as firstRefined_toMeterReading,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.volume                     as firstRefined_volume,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.calorificValues            as firstRefined_calorificValues,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.effectiveCalorificValue    as firstRefined_effectiveCalorificValue,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.consumption                as firstRefined_consumption,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.consumptionId             as secondRefined_consumptionId,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.mprn                      as secondRefined_mprn,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.chargingZone              as secondRefined_chargingZone,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.fromDateTime              as secondRefined_fromDateTime,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.fromMeterReading          as secondRefined_fromMeterReading,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.toDateTime                as secondRefined_toDateTime,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.toMeterReading            as secondRefined_toMeterReading,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.volume                    as secondRefined_volume,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.calorificValues           as secondRefined_calorificValues,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.effectiveCalorificValue   as secondRefined_effectiveCalorificValue,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.consumption               as secondRefined_consumption,\n         v6.kafkaData.topic,\n         v6.kafkaData.partition,\n         v6.kafkaData.offset,\n         v6.kafkaData.insertTime\n  from `data-engineering-prod.landing_andromeda_secure.rac_gas_consumption_generated_v6` v6\n),\ncte_gas_consumption_event_dedupe as\n(\n  select *,\n         row_number() over (partition by eventId order by topic desc, createdAt desc, insertTime desc) as event_dedupe_rownum\n  from cte_gas_consumption_union\n)\nselect *\nfrom cte_gas_consumption_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_gas_consumption_generated__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_gas_consumption_generated__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_gas_consumption_generated__no_dedupe","table_id":"rac_gas_consumption_generated__no_dedupe","time_partitioning":null,"view_query":" select v6.metadata.eventId,\n         v6.metadata.createdAt,\n         v6.metadata.traceToken,\n         v6.event.GasConsumptionGeneratedEvent.consumptionId                      as generated_consumptionId,\n         v6.event.GasConsumptionGeneratedEvent.mprn                               as generated_mprn,\n         v6.event.GasConsumptionGeneratedEvent.chargingZone                       as generated_chargingZone,\n         v6.event.GasConsumptionGeneratedEvent.fromDateTime                       as generated_fromDateTime,\n         v6.event.GasConsumptionGeneratedEvent.fromMeterReading                   as generated_fromMeterReading,\n         v6.event.GasConsumptionGeneratedEvent.toDateTime                         as generated_toDateTime,\n         v6.event.GasConsumptionGeneratedEvent.toMeterReading                     as generated_toMeterReading,\n         v6.event.GasConsumptionGeneratedEvent.volume                             as generated_volume,\n         v6.event.GasConsumptionGeneratedEvent.calorificValues                    as generated_calorificValues,\n         v6.event.GasConsumptionGeneratedEvent.effectiveCalorificValue            as generated_effectiveCalorificValue,\n         v6.event.GasConsumptionGeneratedEvent.consumption                        as generated_consumption,\n         null                                                                     as generated_debugInfo,\n         v6.event.GasConsumptionUpdatedEvent.consumptionId                        as updated_consumptionId,\n         v6.event.GasConsumptionUpdatedEvent.calorificValues                      as updated_calorificValues,\n         v6.event.GasConsumptionUpdatedEvent.effectiveCalorificValue              as updated_effectiveCalorificValue,\n         v6.event.GasConsumptionUpdatedEvent.consumption                          as updated_consumption,\n         null                                                                     as updated_debugInfo,\n         v6.event.GasConsumptionRefinedEvent.previousConsumptionId                as previousConsumptionId,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.consumptionId              as firstRefined_consumptionId,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.mprn                       as firstRefined_mprn,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.chargingZone               as firstRefined_chargingZone,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.fromDateTime               as firstRefined_fromDateTime,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.fromMeterReading           as firstRefined_fromMeterReading,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.toDateTime                 as firstRefined_toDateTime,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.toMeterReading             as firstRefined_toMeterReading,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.volume                     as firstRefined_volume,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.calorificValues            as firstRefined_calorificValues,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.effectiveCalorificValue    as firstRefined_effectiveCalorificValue,\n         v6.event.GasConsumptionRefinedEvent.firstRefinedConsumption.consumption                as firstRefined_consumption,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.consumptionId             as secondRefined_consumptionId,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.mprn                      as secondRefined_mprn,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.chargingZone              as secondRefined_chargingZone,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.fromDateTime              as secondRefined_fromDateTime,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.fromMeterReading          as secondRefined_fromMeterReading,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.toDateTime                as secondRefined_toDateTime,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.toMeterReading            as secondRefined_toMeterReading,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.volume                    as secondRefined_volume,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.calorificValues           as secondRefined_calorificValues,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.effectiveCalorificValue   as secondRefined_effectiveCalorificValue,\n         v6.event.GasConsumptionRefinedEvent.secondRefinedConsumption.consumption               as secondRefined_consumption,\n         v6.kafkaData.topic,\n         v6.kafkaData.partition,\n         v6.kafkaData.offset,\n         v6.kafkaData.insertTime\n  from `data-engineering-prod.landing_andromeda_secure.rac_gas_consumption_generated_v6` v6"},"data-engineering-prod:raw_andromeda_secure.rac_gas_consumption_loss_adjustment_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_gas_consumption_loss_adjustment_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_gas_consumption_loss_adjustment_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_gas_consumption_loss_adjustment_generated","table_id":"rac_gas_consumption_loss_adjustment_generated","time_partitioning":null,"view_query":"with cte_dedupe as\n(\n    select *,\n           row_number() over (partition by metadata.eventId order by metadata.createdAt desc, kafkaData.insertTime desc) as dedupe_rownum\n    from `data-engineering-prod.landing_andromeda_secure.rac_gas_consumption_loss_adjustment_generated_v1`\n)\nselect * except(dedupe_rownum)\nfrom cte_dedupe\nwhere dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_hh_received":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_hh_received","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_hh_received","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_hh_received","table_id":"rac_hh_received","time_partitioning":null,"view_query":"-- Latest view for rac_hh_received topic\n    \n  SELECT metadata\n         , profileData\n         , kafkaData\n         , PARTITIONTIME\n  FROM `data-engineering-prod.landing_andromeda.rac_hh_received_v2`\n    "},"data-engineering-prod:raw_andromeda_secure.rac_hh_simplified":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_hh_simplified","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_hh_simplified","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_hh_simplified","table_id":"rac_hh_simplified","time_partitioning":null,"view_query":"--Latest view for rac_hh_simplified topic\n\nSELECT\n  value,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_hh_simplified_v1`"},"data-engineering-prod:raw_andromeda_secure.rac_industry_estimate_updated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_industry_estimate_updated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_industry_estimate_updated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_industry_estimate_updated","table_id":"rac_industry_estimate_updated","time_partitioning":null,"view_query":"with cte_event_dedupe as\n(\n  select *,\n         row_number() over (partition by metadata.eventId order by metadata.createdAt desc, kafkaData.insertTime desc) as event_dedupe_rownum\n  from `data-engineering-prod.landing_andromeda.rac_industry_estimate_updated_v2`\n)\nselect *\nfrom cte_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_manual_read_submitted":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_manual_read_submitted","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_manual_read_submitted","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_manual_read_submitted","table_id":"rac_manual_read_submitted","time_partitioning":null,"view_query":"--Latest view for rac_manual_read_submitted topic\n\nSELECT\n  event,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_manual_read_submitted_v2`"},"data-engineering-prod:raw_andromeda_secure.rac_mpxn_electricity_consumption_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_mpxn_electricity_consumption_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_generated","table_id":"rac_mpxn_electricity_consumption_generated","time_partitioning":null,"view_query":"--Latest view for rac_mpxn_electricity_consumption_generated topic\n\nSELECT\n  metadata,\n  mpan,\n  msn,\n  fromDate,\n  toDate,\n  fromReading,\n  toReading,\n  consumption,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_generated_v5`\n"},"data-engineering-prod:raw_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_hh_apportionment_calculated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_mpxn_electricity_consumption_hh_apportionment_calculated","table_id":"rac_mpxn_electricity_consumption_hh_apportionment_calculated","time_partitioning":null,"view_query":"--Latest view for rac_mpxn_electricity_consumption_hh_apportionment_calculated topic\n\nSELECT\n  metadata,\n  mpan,\n  msn,\n  fromDateTime,\n  toDateTime,\n  totalConsumption,\n  apportionedConsumption,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_mpxn_electricity_consumption_hh_apportionment_calculated_v3`\n"},"data-engineering-prod:raw_andromeda_secure.rac_mpxn_gas_energy_consumption_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_mpxn_gas_energy_consumption_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_mpxn_gas_energy_consumption_generated","table_id":"rac_mpxn_gas_energy_consumption_generated","time_partitioning":null,"view_query":"--Latest view for rac_mpxn_gas_energy_consumption_generated topic\nSELECT\n  metadata,\n  mprn,\n  msn,\n  fromDate,\n  toDate,\n  fromReading,\n  toReading,\n  consumption,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_mpxn_gas_energy_consumption_generated_v5`"},"data-engineering-prod:raw_andromeda_secure.rac_msd_received":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_msd_received","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msd_received","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msd_received","table_id":"rac_msd_received","time_partitioning":null,"view_query":"with cte_union as\n(\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         * except(metadata), -- Different order of fields in metadata struct so we have to specify explicitly\n         kafkaData.topic as topic_cleansed -- Need to deal with nulls in v3\n  from `data-engineering-prod.landing_andromeda.rac_msd_received_v6` v6\n  union all\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         * except(metadata) ,\n         kafkaData.topic as topic_cleansed\n  from `data-engineering-prod.landing_andromeda.rac_msd_received_v5` v5\n  union all\n  select metadata.eventId,\n         metadata.createdAt,\n         metadata.traceToken,\n         * except(metadata),\n         coalesce(kafkaData.topic, 'rac_msd_received_v3') as topic_cleansed\n  from `data-engineering-prod.landing_andromeda.rac_msd_received_v3` v3\n),\ncte_event_dedupe as\n(\n  select *,\n         row_number() over (partition by u.eventId order by u.topic_cleansed desc, u.createdAt desc, u.kafkadata.insertTime desc) as event_dedupe_rownum\n  from cte_union u\n)\nselect *\nfrom cte_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_msd_simplified":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_msd_simplified","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msd_simplified","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msd_simplified","table_id":"rac_msd_simplified","time_partitioning":null,"view_query":"with cte_universal_metadata as\n(\n  select COALESCE(value.ElectricityMidnightSnapshotReadingEvent.metadata.eventId,\n                  value.GasMidnightSnapshotReadingEvent.metadata.eventId ) as universal_eventId,\n         COALESCE(value.ElectricityMidnightSnapshotReadingEvent.metadata.createdAt,\n                  value.GasMidnightSnapshotReadingEvent.metadata.createdAt ) as universal_createdAt,\n         *\n  from `data-engineering-prod.landing_andromeda.rac_msd_simplified_v2`\n),\ncte_event_dedupe as\n (\n   select *,\n          row_number() over (partition by universal_eventId order by universal_createdAt desc, kafkaData.insertTime desc) as event_dedupe_rownum\n   from cte_universal_metadata\n )\nselect *\nfrom cte_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_msn_consumption_requested":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_msn_consumption_requested","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msn_consumption_requested","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msn_consumption_requested","table_id":"rac_msn_consumption_requested","time_partitioning":null,"view_query":"  --Latest view for rac_msn_consumption_requested topic\nSELECT\n  metadata,\n  event,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_msn_consumption_requested_v2`"},"data-engineering-prod:raw_andromeda_secure.rac_msn_electricity_consumption_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_msn_electricity_consumption_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msn_electricity_consumption_generated","table_id":"rac_msn_electricity_consumption_generated","time_partitioning":null,"view_query":"  --Latest view for rac_msn_electricity_consumption_generated topic\nSELECT\n  metadata,\n  msn,\n  fromDate,\n  toDate,\n  fromReading,\n  toReading,\n  consumption,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_msn_electricity_consumption_generated_v5`\n"},"data-engineering-prod:raw_andromeda_secure.rac_msn_gas_volume_consumption_generated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_msn_gas_volume_consumption_generated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_msn_gas_volume_consumption_generated","table_id":"rac_msn_gas_volume_consumption_generated","time_partitioning":null,"view_query":"  --Latest view for rac_msn_gas_volume_consumption_generated topic\nSELECT\n  metadata,\n  msn,\n  fromDateTime,\n  fromMeterReading,\n  toDateTime,\n  toMeterReading,\n  gasVolume,\n  kafkaData,\n  fromReadingType,\n  toReadingType,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_msn_gas_volume_consumption_generated_v2`"},"data-engineering-prod:raw_andromeda_secure.rac_orion_estimate_updated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_orion_estimate_updated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_orion_estimate_updated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_orion_estimate_updated","table_id":"rac_orion_estimate_updated","time_partitioning":null,"view_query":"with cte_event_dedupe as\n(\n  select *,\n         row_number() over (partition by metadata.eventId order by metadata.createdAt desc, kafkaData.insertTime desc) as event_dedupe_rownum\n  from `data-engineering-prod.public.rac_orion_estimate_updated_v2`\n)\nselect *\nfrom cte_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.rac_personal_projections_calculated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_personal_projections_calculated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_personal_projections_calculated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_personal_projections_calculated","table_id":"rac_personal_projections_calculated","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_andromeda_secure.rac_personal_projections_calculated_v5`"},"data-engineering-prod:raw_andromeda_secure.rac_readings_requested":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.rac_readings_requested","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_readings_requested","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/rac_readings_requested","table_id":"rac_readings_requested","time_partitioning":null,"view_query":"  --Latest view for rac_readings_requested topic\nSELECT\n  metadata,\n  mpxn,\n  msn,\n  fuelType,\n  date,\n  kafkaData,\n  PARTITIONTIME\nFROM\n  `data-engineering-prod.landing_andromeda_secure.rac_readings_requested_v3`"},"data-engineering-prod:raw_andromeda_secure.sfe_tariff_change_history":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.sfe_tariff_change_history","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/sfe_tariff_change_history","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/sfe_tariff_change_history","table_id":"sfe_tariff_change_history","time_partitioning":null,"view_query":"select distinct\n  *\nfrom\n  `data-engineering-prod.landing_andromeda_secure.sfe_tariff_change_history`\n"},"data-engineering-prod:raw_andromeda_secure.spam_electricityInstallation":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_electricityInstallation","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricityInstallation","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricityInstallation","table_id":"spam_electricityInstallation","time_partitioning":null,"view_query":"with cte_event_dedupe as\n(\n  select *,\n         row_number() over (partition by metadata.eventId order by metadata.createdAt desc, kafkaData.insertTime desc) as event_dedupe_rownum\n  from `data-engineering-prod.landing_andromeda_secure.spam_electricityInstallation_v2`\n)\nselect *\nfrom cte_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_andromeda_secure.spam_electricityOverrides":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_electricityOverrides","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricityOverrides","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricityOverrides","table_id":"spam_electricityOverrides","time_partitioning":null,"view_query":"with \nlatest_industry_history as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_industry_v1_internal`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1\n),\n\nlatest_billing_history as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1\n),\n\nindustry_unnested as (\n  select MPXN, ih, installationHistory, o\n  from latest_industry_history, unnest(installationHistory) ih\n  with offset o\n),\n\nbilling_unnested as (\n  select MPXN, ih, installationHistory, o\n  from latest_billing_history, unnest(installationHistory) ih\n  with offset o),\n\ndifferences as (\n  select distinct MPXN\n  from (\n    select b.MPXN, i.ih.msn IMSN, b.ih.msn BMSN, i.o IO, b.o BO from\n    industry_unnested i full join billing_unnested b \n                        on i.mpxn = b.mpxn \n                        and i.o = b.o)\n  where (IMSN <> BMSN or IMSN is null or BMSN is null))\n\nselect b.* except(metadata, kafkadata, PARTITIONTIME, installationHistory, addressLines, postCode), array(select as struct ih.MSN, ih.StartDate, ih.endDate from unnest(b.installationHistory) ih) billingMetersSummary, array(select as struct ih.MSN, ih.StartDate, ih.endDate from unnest(i.installationHistory) ih) industryMetersSummary, b.installationHistory billingInstallationHistory, i.installationHistory industryInstallationHistory from \nlatest_billing_history b left join latest_industry_history i\non b.mpxn = i.mpxn\nwhere b.mpxn in (select mpxn from differences)\norder by b.mpxn\n\n"},"data-engineering-prod:raw_andromeda_secure.spam_electricitySupplyPoint":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_electricitySupplyPoint","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricitySupplyPoint","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricitySupplyPoint","table_id":"spam_electricitySupplyPoint","time_partitioning":null,"view_query":"with \nlatest_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from latest_data_per_sp\n),\n\nwith_convenience_fields as (\n  select *,\n         case \n           when latestSupplyPeriod.lossConfirmed\tis true and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date()\n             -- is loss confirmed and has an end date set and end date is before today\n           then \"offSupply\"\n           when (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is null and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null))\n             or (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate >= current_date())\n             -- isn't missing supply period data, and either doesn't have a loss journey (is not loss confirmed and has no end date set)\n             -- or is in the loss journey but hasn't reached loss yet (has end date set and end date is before or equal to today)\n           then \"onSupply\"\n           when latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date() and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null)\n           -- when it looks like it should have been lost, but we haven't received lossConfirmed, it's likely in dispute and so still on supply\n           then \"unconfirmedLoss\"\n           else \"insufficientData\" end supplyOnOff,\n         latestSupplyPeriod.supplyEndDate is not null and current_date() <= date_add(latestSupplyPeriod.supplyEndDate, interval 20 day) inLoss, \n         (select as struct * from unnest(latestInstallation.meterRegisterHistory) mrh order by mrh.startDate desc limit 1) latestRegisterConfiguration,\n         regexp_contains(latestInstallation.meterType, '^(S[1-2].*)$') isSmart\n  from with_latest_meter_and_supply)\n\nselect \n-- meter-point related fields\n  MPXN, supplyPointType, profileClassId, gspGroupId, lineLossFactorClassId, supplyOnOff, inLoss, isSmart, addressLines, postCode,\n-- latest known details\n  latestSupplyPeriod, latestInstallation, latestRegisterConfiguration,\n-- histories\n  supplyPeriods, installationHistory,\n-- metadata\n  metadata, kafkaData, PARTITIONTIME\nfrom with_convenience_fields\n"},"data-engineering-prod:raw_andromeda_secure.spam_electricitySupplyPoint__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_electricitySupplyPoint__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricitySupplyPoint__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricitySupplyPoint__no_dedupe","table_id":"spam_electricitySupplyPoint__no_dedupe","time_partitioning":null,"view_query":"select struct(metadata.eventId as eventId,\n              metadata.createdAt as createdAt,\n              metadata.traceToken as traceToken) as metadata,\n              MPXN,\n              MSN,\n              addressLines,\n              postCode,\n              lineLossFactorClassId,\n              gspGroupId,\n              profileClassId,\n              meterTimeswitchCode,\n              supplyStatus,\n              supplyHistory,\n              supplyPointType,\n              meterRegisterHistory,\n              meterType,\n              kafkaData,\n              PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPoint_v2`"},"data-engineering-prod:raw_andromeda_secure.spam_electricitySupplyPoint_legacy":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_electricitySupplyPoint_legacy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricitySupplyPoint_legacy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_electricitySupplyPoint_legacy","table_id":"spam_electricitySupplyPoint_legacy","time_partitioning":null,"view_query":"with \nlatest_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPointHistory_v2`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from latest_data_per_sp\n),\n\nbackwards_fields as (\n  select mpxn, supplyStatus, supplyHistory, kafkadata from (\n    select *, row_number() over(partition by mpxn order by kafkadata.inserttime, kafkadata.offset desc) n from `data-engineering-prod.landing_andromeda_secure.spam_electricitySupplyPoint_v2`)\n  where n = 1),\n\nwith_backwards_compabaility as (\nselect x.*, y.supplyStatus, y.supplyHistory, y.kafkadata legacyTopicKafkadata\nfrom (\n  select *,\n         latestInstallation.MSN,\n         (select as struct latestInstallation.* except(meterRegisterHistory)) latestMeterDetails,\n         latestInstallation.meterRegisterHistory meterRegisterHistory,\n         (select as struct * from unnest(latestInstallation.meterRegisterHistory) mrh order by mrh.startDate desc limit 1) latestRegister,\n         (latestSupplyPeriod.supplyStartDate <= current_date() and (latestSupplyPeriod.supplyEndDate is null or latestSupplyPeriod.supplyEndDate >= current_date())) onSupply,\n         from with_latest_meter_and_supply\n) x\nleft join backwards_fields y on x.mpxn = y.mpxn)\n  \nselect metadata, MPXN, MSN, supplyPointType, profileClassId, gspGroupId, lineLossFactorClassId, addressLines, postCode, onSupply, latestSupplyPeriod, latestMeterDetails, latestRegister, supplyPeriods, installationHistory, meterRegisterHistory, supplyStatus, supplyHistory, kafkaData, legacyTopicKafkadata, PARTITIONTIME from with_backwards_compabaility"},"data-engineering-prod:raw_andromeda_secure.spam_gasOverrides":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_gasOverrides","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasOverrides","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasOverrides","table_id":"spam_gasOverrides","time_partitioning":null,"view_query":"with \nlatest_industry_history as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_industry_v1_internal`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1\n),\n\nlatest_billing_history as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1\n),\n\nindustry_unnested as (\n  select MPXN, ih, installationHistory, o\n  from latest_industry_history, unnest(installationHistory) ih\n  with offset o\n),\n\nbilling_unnested as (\n  select MPXN, ih, installationHistory, o\n  from latest_billing_history, unnest(installationHistory) ih\n  with offset o),\n\ndifferences as (\n  select distinct MPXN\n  from (\n    select b.MPXN, i.ih.msn IMSN, b.ih.msn BMSN, i.o IO, b.o BO from\n    industry_unnested i full join billing_unnested b \n                        on i.mpxn = b.mpxn \n                        and i.o = b.o)\n  where (IMSN <> BMSN or IMSN is null or BMSN is null))\n\nselect b.* except(metadata, kafkadata, PARTITIONTIME, installationHistory, addressLines, postCode), array(select as struct ih.MSN, ih.StartDate, ih.endDate from unnest(b.installationHistory) ih) billingMetersSummary, array(select as struct ih.MSN, ih.StartDate, ih.endDate from unnest(i.installationHistory) ih) industryMetersSummary, b.installationHistory billingInstallationHistory, i.installationHistory industryInstallationHistory from \nlatest_billing_history b left join latest_industry_history i\non b.mpxn = i.mpxn\nwhere b.mpxn in (select mpxn from differences)\norder by b.mpxn\n\n"},"data-engineering-prod:raw_andromeda_secure.spam_gasSupplyPoint":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_gasSupplyPoint","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasSupplyPoint","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasSupplyPoint","table_id":"spam_gasSupplyPoint","time_partitioning":null,"view_query":"with \nlatest_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime desc, kafkadata.offset desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`) where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps where sps.supplyStartDate is not null order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from latest_data_per_sp\n),\n\nwith_convenience_fields as (\n  select *,\n         case \n           when latestSupplyPeriod.lossConfirmed\tis true and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date()\n             -- is loss confirmed and has an end date set and end date is before today\n           then \"offSupply\"\n           when (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is null and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null))\n             or (latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate >= current_date())\n             -- isn't missing supply period data, and either doesn't have a loss journey (is not loss confirmed and has no end date set)\n             -- or is in the loss journey but hasn't reached loss yet (has end date set and end date is before or equal to today)\n           then \"onSupply\"\n           when latestSupplyPeriod.supplyStartDate is not null and latestSupplyPeriod.supplyEndDate is not null and latestSupplyPeriod.supplyEndDate < current_date() and (latestSupplyPeriod.lossConfirmed is false or latestSupplyPeriod.lossConfirmed is null)\n           -- when it looks like it should have been lost, but we haven't received lossConfirmed, it's likely in dispute and so still on supply\n           then \"unconfirmedLoss\"\n           else \"insufficientData\" end supplyOnOff,\n         latestSupplyPeriod.supplyEndDate is not null and current_date() <= latestSupplyPeriod.supplyEndDate inLoss,\n         regexp_contains(latestInstallation.meterType, '^(S[1-2].*)$') isSmart\n  from with_latest_meter_and_supply)\n\nselect \n-- meter-point related fields\n  MPXN, LDZ, supplyOnOff, isSmart, addressLines, postCode,\n-- latest known details\n  latestSupplyPeriod, latestInstallation,\n-- histories\n  supplyPeriods, installationHistory,\n-- metadata\n  metadata, kafkaData, PARTITIONTIME\nfrom with_convenience_fields"},"data-engineering-prod:raw_andromeda_secure.spam_gasSupplyPoint__no_dedupe":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_gasSupplyPoint__no_dedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasSupplyPoint__no_dedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasSupplyPoint__no_dedupe","table_id":"spam_gasSupplyPoint__no_dedupe","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPoint_v2`"},"data-engineering-prod:raw_andromeda_secure.spam_gasSupplyPoint_legacy":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.spam_gasSupplyPoint_legacy","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasSupplyPoint_legacy","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/spam_gasSupplyPoint_legacy","table_id":"spam_gasSupplyPoint_legacy","time_partitioning":null,"view_query":"with \nlatest_data_per_sp as (\n  select * except(n) from (SELECT *, row_number() over(partition by MPXN order by kafkadata.inserttime, kafkadata.partition desc) n \n  FROM `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPointHistory_v2`\n  where PARTITIONTIME >= \"2020-04-01 00:00:00\") where n = 1),\n\nwith_latest_meter_and_supply as (\n  select *, \n         (select as struct * from unnest(installationHistory) ih order by ih.startDate desc limit 1) latestInstallation,\n         (select as struct * from unnest(supplyPeriods) sps order by sps.supplyStartDate desc limit 1) latestSupplyPeriod\n  from latest_data_per_sp\n),\n\nbackwards_fields as (\n  select mpxn, supplyStatus, supplyHistory, kafkadata from (\n    select *, row_number() over(partition by mpxn order by kafkadata.inserttime, kafkadata.partition desc) n from `data-engineering-prod.landing_andromeda_secure.spam_gasSupplyPoint_v2`)\n  where n = 1),\n\nwith_backwards_compabaility as (\nselect x.*, y.supplyStatus, y.supplyHistory, y.kafkadata legacyTopicKafkadata\nfrom (\n  select *,\n         latestInstallation.MSN,\n         (latestSupplyPeriod.supplyStartDate <= current_date() and (latestSupplyPeriod.supplyEndDate is null or latestSupplyPeriod.supplyEndDate >= current_date())) onSupply,\n         from with_latest_meter_and_supply\n) x\nleft join backwards_fields y on x.mpxn = y.mpxn)\n\nselect metadata, MPXN, MSN, LDZ, addressLines, postCode, onSupply, latestSupplyPeriod, latestInstallation, supplyPeriods, installationHistory, supplyStatus, supplyHistory, kafkaData, legacyTopicKafkadata, PARTITIONTIME from with_backwards_compabaility"},"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_agreed":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_agreed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_agreed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_agreed","table_id":"tardis_elec_dispute_agreed","time_partitioning":null,"view_query":"select initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       mpxn,\n       msn,\n       disputedReadDate,\n       registers,\n       agreedAt,\n       customerIds,\n       accountNumber,\n       metadata,\n       kafkaData,\n       PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_agreed_v2` \nunion all\nselect initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       mpxn,\n       msn,\n       disputedReadDate,\n       ARRAY(SELECT STRUCT(registerId,\n                           readType,\n                           disputedRead,\n                           proposedRead,\n                           agreedRead)  \n                   FROM v1.registers) as registers,\n       agreedAt,\n       customerIds,\n       accountNumber,\n       metadata,\n       kafkaData,\n       PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_agreed_v1` v1\n\n             "},"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_alternated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_alternated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_alternated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_alternated","table_id":"tardis_elec_dispute_alternated","time_partitioning":null,"view_query":"select v2.initiatedBy,\n       v2.losingSupplier,\n       v2.gainingSupplier,\n       v2.mpxn,\n       v2.msn,\n       v2.disputedReadDate,\n       v2.registers,\n       v2.alternatedAt,\n       v2.customerIds,\n       v2.accountNumber,\n       v2.eventComment,\n       v2.metadata,\n       v2.kafkaData,\n       v2.PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_alternated_v2` v2\nunion all\nselect v1.initiatedBy,\n       v1.losingSupplier,\n       v1.gainingSupplier,\n       v1.mpxn,\n       v1.msn,\n       v1.disputedReadDate,\n       array(select struct(r.registerId,\n                           r.readType,\n                           r.disputedRead,\n                           r.proposedRead,\n                           r.alternatedRead)\n                 from unnest(v1.registers) r\n              ) as registers,\n       v1.alternatedAt,\n       v1.customerIds,\n       v1.accountNumber,\n       v1.responseComment,\n       v1.metadata,\n       v1.kafkaData,\n       v1.PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_alternated_v1` v1"},"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_initiated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_initiated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_initiated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_initiated","table_id":"tardis_elec_dispute_initiated","time_partitioning":null,"view_query":"select v3.initiatedBy,\n       v3.losingSupplier,\n       v3.gainingSupplier,\n       v3.mpxn,\n       v3.msn,\n       v3.disputedReadDate,\n       v3.registers,\n       v3.initiatedAt,\n       v3.customerIds,\n       v3.accountNumber,\n       v3.eventComment,\n       v3.metadata,\n       v3.kafkaData,\n       v3.PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_initiated_v3` v3\nunion all\nselect v2.initiatedBy,\n       v2.losingSupplier,\n       v2.gainingSupplier,\n       v2.mpxn,\n       v2.msn,\n       v2.disputedReadDate,\n       v2.registers,\n       v2.initiatedAt,\n       v2.customerIds,\n       v2.accountNumber,\n       v2.eventComment,\n       v2.metadata,\n       v2.kafkaData,\n       v2.PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_initiated_v2` v2\nunion all\nSELECT v1.initiatedBy,\n       v1.losingSupplier,\n       v1.gainingSupplier,\n       v1.mpxn,\n       v1.msn,\n       v1.disputedReadDate,\n       v1.registers,\n       v1.initiatedAt,\n       v1.customerIds,\n       v1.accountNumber,\n       v1.disputeComment as eventComment,\n       v1.metadata,\n       v1.kafkaData,\n       v1.PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_initiated_v1` v1"},"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_rejected":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_rejected","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_rejected","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_rejected","table_id":"tardis_elec_dispute_rejected","time_partitioning":null,"view_query":"select v2.initiatedBy,\n       v2.losingSupplier,\n       v2.gainingSupplier,\n       v2.mpxn,\n       v2.msn,\n       v2.disputedReadDate,\n       v2.registers,\n       v2.rejectedAt,\n       v2.customerIds,\n       v2.accountNumber,\n       v2.eventComment,\n       v2.rejectionCode,\n       v2.metadata,\n       v2.kafkaData,\n       v2.PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_rejected_v2` v2\nunion all\nselect v1.initiatedBy,\n       v1.losingSupplier,\n       v1.gainingSupplier,\n       v1.mpxn,\n       v1.msn,\n       v1.disputedReadDate,\n       array(select struct(r.registerId,\n                           r.readType,\n                           r.disputedRead,\n                           r.proposedRead)\n                 from unnest(v1.registers) r\n              ) as registers,\n       v1.rejectedAt,\n       v1.customerIds,\n       v1.accountNumber,\n       v1.responseComment as eventComment,\n       v1.rejectionCode,\n       v1.metadata,\n       v1.kafkaData,\n       v1.PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_rejected_v1` v1"},"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_state":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_elec_dispute_state","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_state","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_elec_dispute_state","table_id":"tardis_elec_dispute_state","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v2`\nunion all\nselect *\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_elec_dispute_state_v1`"},"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_agreed":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_agreed","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_agreed","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_agreed","table_id":"tardis_gas_dispute_agreed","time_partitioning":null,"view_query":"SELECT initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       ltrim(mpxn, '0') as mpxn,\n       msn,\n       disputedReadDate,\n       disputedRead,\n       proposedRead,\n       agreedRead,\n       agreedAt,\n       sarReferenceNumber,\n       customerIds,\n       accountNumber,\n       metadata,\n       kafkaData\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_agreed_v3`\nunion all\nSELECT initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       ltrim(mpxn, '0') as mpxn,\n       msn,\n       disputedReadDate,\n       disputedRead,\n       proposedRead,\n       agreedRead,\n       agreedAt,\n       sarReferenceNumber,\n       customerIds,\n       accountNumber,\n       metadata,\n       kafkaData\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_agreed_v2`\nunion all\nSELECT initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       ltrim(mpxn, '0') as mpxn,\n       msn,\n       disputedReadDate,\n       disputedRead,\n       proposedRead,\n       agreedRead,\n       receiveAt,\n       sarReferenceNumber,\n       customerIds,\n       accountNumber,\n       metadata,\n       kafkaData\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_agreed_v1`"},"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_alternated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_alternated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_alternated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_alternated","table_id":"tardis_gas_dispute_alternated","time_partitioning":null,"view_query":"SELECT ltrim(v2.mpxn, '0') as mpxn,\n       v2.initiatedBy,\n       v2.losingSupplier,\n       v2.gainingSupplier,\n       v2.msn,\n       v2.disputedReadDate,\n       v2.disputedRead,\n       v2.proposedRead,\n       v2.alternateProposedRead,\n       v2.alternatedAt,\n       v2.sarReferenceNumber,\n       v2.customerIds,\n       v2.accountNumber,\n       v2.eventComment,\n       v2.metadata,\n       v2.kafkaData,\n       v2.PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_alternated_v2` v2\nunion all\nSELECT ltrim(v1.mpxn, '0') as mpxn,\n       v1.initiatedBy,\n       v1.losingSupplier,\n       v1.gainingSupplier,\n       v1.msn,\n       v1.disputedReadDate,\n       v1.disputedRead,\n       v1.proposedRead,\n       v1.alternateProposedRead,\n       v1.alternatedAt,\n       v1.sarReferenceNumber,\n       v1.customerIds,\n       v1.accountNumber,\n       v1.disputeComment,\n       v1.metadata,\n       v1.kafkaData,\n       v1.PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_alternated_v1` v1"},"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_initiated":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_initiated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_initiated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_initiated","table_id":"tardis_gas_dispute_initiated","time_partitioning":null,"view_query":"select v3.mpxn,\n       v3.initiatedBy,\n       v3.losingSupplier,\n       v3.gainingSupplier,\n       v3.msn,\n       v3.disputedReadDate,\n       v3.disputedRead,\n       v3.proposedRead,\n       v3.backingRead1,\n       v3.backingRead2,\n       v3.initiatedAt,\n       v3.sarReferenceNumber,\n       v3.customerIds,\n       v3.accountNumber,\n       v3.eventComment,\n       v3.metadata,\n       v3.kafkaData,\n       v3.PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_initiated_v3` v3\nunion all\nselect v2.mpxn,\n       v2.initiatedBy,\n       v2.losingSupplier,\n       v2.gainingSupplier,\n       v2.msn,\n       v2.disputedReadDate,\n       v2.disputedRead,\n       v2.proposedRead,\n       v2.backingRead1,\n       v2.backingRead2,\n       v2.initiatedAt,\n       v2.sarReferenceNumber,\n       v2.customerIds,\n       v2.accountNumber,\n       v2.eventComment,\n       v2.metadata,\n       v2.kafkaData,\n       v2.PARTITIONTIME\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_initiated_v2` v2\nunion all\nSELECT ltrim(mpxn, '0') as mpxn,\n       v1.initiatedBy,\n       v1.losingSupplier,\n       v1.gainingSupplier,\n       v1.msn,\n       v1.disputedReadDate,\n       v1.disputedRead,\n       v1.proposedRead,\n       v1.backingRead1,\n       v1.backingRead2,\n       v1.initiatedAt,\n       v1.sarReferenceNumber,\n       v1.customerIds,\n       v1.accountNumber,\n       v1.disputeComment as eventComment,\n       v1.metadata,\n       v1.kafkaData,\n       v1.PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_initiated_v1` v1\n--Where mpxn Not Like '0%'"},"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_rejected":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_rejected","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_rejected","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_rejected","table_id":"tardis_gas_dispute_rejected","time_partitioning":null,"view_query":"SELECT initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       ltrim(mpxn, '0') as mpxn,\n       msn,\n       disputedReadDate,\n       disputedRead,\n       proposedRead,\n       rejectedAt,\n       sarReferenceNumber,\n       customerIds,\n       accountNumber,\n       eventComment,\n       eventComment as responseComment,\n       rejectionCode,\n       metadata,\n       kafkaData,\n       PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_rejected_v3`\nunion all\nSELECT initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       ltrim(mpxn, '0') as mpxn,\n       msn,\n       disputedReadDate,\n       disputedRead,\n       proposedRead,\n       rejectedAt,\n       sarReferenceNumber,\n       customerIds,\n       accountNumber,\n       responseComment as eventComment,\n       responseComment,\n       rejectionCode,\n       metadata,\n       kafkaData,\n       PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_rejected_v2`\nunion all\nSELECT initiatedBy,\n       losingSupplier,\n       gainingSupplier,\n       ltrim(mpxn, '0') as mpxn,\n       msn,\n       disputedReadDate,\n       disputedRead,\n       proposedRead,\n       receiveAt as rejectedAt,\n       sarReferenceNumber,\n       customerIds,\n       accountNumber,\n       responseComment as eventComment,\n       responseComment,\n       rejectionCode,\n       metadata,\n       kafkaData,\n       PARTITIONTIME\nFROM `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_rejected_v1`"},"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_state":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_gas_dispute_state","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_state","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_gas_dispute_state","table_id":"tardis_gas_dispute_state","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_state_v2`\nunion all\nselect *\nfrom `data-engineering-prod.landing_andromeda_secure.tardis_gas_dispute_state_v1`"},"data-engineering-prod:raw_andromeda_secure.tardis_tvr_decision":{"clustering_fields":null,"dataset_id":"raw_andromeda_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_andromeda_secure.tardis_tvr_decision","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_tvr_decision","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_andromeda_secure\/tables\/tardis_tvr_decision","table_id":"tardis_tvr_decision","time_partitioning":null,"view_query":"SELECT * FROM `data-engineering-prod.landing_andromeda_secure.tardis_tvr_decision_v1` "},"data-engineering-prod:raw_identity_secure.identity_user":{"clustering_fields":null,"dataset_id":"raw_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_identity_secure.identity_user","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_identity_secure\/tables\/identity_user","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_identity_secure\/tables\/identity_user","table_id":"identity_user","time_partitioning":null,"view_query":"SELECT * FROM `data-engineering-prod.landing_identity_secure.identity_user_v1`"},"data-engineering-prod:raw_identity_secure.identity_users":{"clustering_fields":null,"dataset_id":"raw_identity_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_identity_secure.identity_users","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_identity_secure\/tables\/identity_users","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_identity_secure\/tables\/identity_users","table_id":"identity_users","time_partitioning":null,"view_query":"SELECT *\nFROM `data-engineering-prod.landing_identity_secure.identity_users_v1` "},"data-engineering-prod:raw_orex_secure.orex_account_customer_binding_updated":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_account_customer_binding_updated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_account_customer_binding_updated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_account_customer_binding_updated","table_id":"orex_account_customer_binding_updated","time_partitioning":null,"view_query":"WITH binding AS (\n    SELECT  *,\n           ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY kafkaData.insertTime desc) AS RN\n    FROM `data-engineering-prod.landing_orex_secure.orex_account_customer_binding_updated_v3`\n)\n\nSELECT * EXCEPT (RN)\nFROM binding\nWHERE RN = 1"},"data-engineering-prod:raw_orex_secure.orex_account_state":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_account_state","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_account_state","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_account_state","table_id":"orex_account_state","time_partitioning":null,"view_query":"WITH dedupe AS (\n  SELECT \n    *,\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventId ORDER BY kafkaData.insertTime desc) AS RN\n  FROM `data-engineering-prod.landing_orex_secure.orex_account_state_v3`\n)\n\nSELECT d.metadata\n      ,COALESCE(d.body.AccountState.accountId, d.body.Deleted.accountId) as accountId\n      ,COALESCE(d.body.AccountState.accountStateTimestamp, d.metadata.createdAt) as accountStateTimestamp\n      ,d.body.AccountState.hasOnlineDiscount as hasOnlineDiscount\n      ,d.body.AccountState.interestRewardStartDate as interestRewardStartDate\n      ,d.body.AccountState.migratedInterestCalculationDate as migratedInterestCalculationDate\n      ,IF(d.body.Deleted.accountId IS NULL,'active','deleted') status\n      ,d.body.AccountState.electricitySupplyStartDate as electricitySupplyStartDate\n      ,d.body.AccountState.gasSupplyStartDate as gasSupplyStartDate\n      ,d.body.AccountState.interestRewardOptOut as interestRewardOptOut\n      ,d.body.AccountState.vacant as vacant\n      ,d.body.AccountState.createdAt as accountCreatedAt\n      ,d.kafkaData\n      ,d.PARTITIONTIME\nFROM dedupe d\nWHERE RN = 1"},"data-engineering-prod:raw_orex_secure.orex_balance_updated":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_balance_updated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_balance_updated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_balance_updated","table_id":"orex_balance_updated","time_partitioning":null,"view_query":"WITH uniqueTransactions AS\n(\n  SELECT \n    metadata,\n    accountId,\n    amount,\n    TIMESTAMP_MILLIS(balanceUpdateTime) as balanceUpdateTime,\n    transaction,\n    kafkaData,\n    PARTITIONTIME,\n    'non-secure' as category\n    FROM `data-engineering-prod.landing_orex.orex_balance_updated_v2`\n   UNION ALL\n   SELECT\n    metadata,\n    accountId,\n    amount,\n    balanceUpdateTime,\n    transaction,\n    kafkaData,\n    PARTITIONTIME,\n    'secure' as category\n    FROM\n    `data-engineering-prod.landing_orex_secure.orex_balance_updated_v2`\n),\ndedupe AS\n(\nSELECT \n    *,\n    ROW_NUMBER() OVER (PARTITION BY transaction.transactionId, transaction.type ORDER BY balanceUpdateTime desc) AS RN\n  FROM uniqueTransactions\n)\nSELECT\n    metadata.eventId ,\n    metadata.createdAt,\n    metadata.traceToken,\n    accountId,\n    amount AS balance,\n    balanceUpdateTime,\n    transaction.type,\n    CAST(transaction.amount AS FLOAT64) AS amount,\n    transaction.transactionId,\n    kafkaData.topic,\n    kafkaData.partition,\n    kafkaData.offset,\n    kafkaData.insertTime,\n    PARTITIONTIME\nFROM dedupe\nWHERE \n  RN = 1"},"data-engineering-prod:raw_orex_secure.orex_balance_updated_nodedupe":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_balance_updated_nodedupe","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_balance_updated_nodedupe","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_balance_updated_nodedupe","table_id":"orex_balance_updated_nodedupe","time_partitioning":null,"view_query":"WITH uniqueTransactions AS\n(\n  SELECT \n    metadata,\n    accountId,\n    amount,\n    TIMESTAMP_MILLIS(balanceUpdateTime) as balanceUpdateTime,\n    transaction,\n    kafkaData,\n    PARTITIONTIME,\n    'non-secure' as category\n    FROM `data-engineering-prod.landing_orex.orex_balance_updated_v2`\n   UNION ALL\n   SELECT\n    metadata,\n    accountId,\n    amount,\n    balanceUpdateTime,\n    transaction,\n    kafkaData,\n    PARTITIONTIME,\n    'secure' as category\n    FROM\n    `data-engineering-prod.landing_orex_secure.orex_balance_updated_v2`\n)\nSELECT\n    metadata.eventId ,\n    metadata.createdAt,\n    metadata.traceToken,\n    accountId,\n    amount AS balance,\n    balanceUpdateTime AS balanceUpdateTime,\n    transaction.type,\n    CAST(transaction.amount AS FLOAT64) AS amount,\n    transaction.transactionId,\n    kafkaData.topic,\n    kafkaData.partition,\n    kafkaData.offset,\n    kafkaData.insertTime,\n    PARTITIONTIME\nFROM uniqueTransactions"},"data-engineering-prod:raw_orex_secure.orex_dd_review_comms_sent":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_dd_review_comms_sent","location":"EU","num_bytes":255650,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_dd_review_comms_sent","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_dd_review_comms_sent","table_id":"orex_dd_review_comms_sent","time_partitioning":null,"view_query":null},"data-engineering-prod:raw_orex_secure.orex_online_discount":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_online_discount","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_online_discount","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_online_discount","table_id":"orex_online_discount","time_partitioning":null,"view_query":"WITH uniqueonlinedisc AS\n(\n  SELECT \n    *,    \n    'non-secure' as category\n    FROM `data-engineering-prod.landing_orex.orex_online_discount_v2`\n   UNION ALL\n   SELECT\n    *,\n    'secure' as category\n    FROM\n    `data-engineering-prod.landing_orex_secure.orex_online_discount_v2`\n),\ndedupe AS\n(\nSELECT \n    *,\n    ROW_NUMBER() OVER (PARTITION BY metadata.eventid ORDER BY kafkadata.inserttime DESC, category desc) AS RN\n  FROM uniqueonlinedisc\n)\n\nSELECT\n    metadata.eventId,\n    metadata.createdAt,\n    metadata.traceToken,\n    discount.CancelledOnlineDiscount.accountId        AS CancelledOnlineDiscountAccountId,\n    discount.CancelledOnlineDiscount.standingChargeId AS CancelledOnlineDiscountStandingChargeId,\n    discount.CreatedOnlineDiscount.accountId          AS CreatedOnlineDiscountAccountId,\n    discount.CreatedOnlineDiscount.standingChargeId   AS CreatedOnlineDiscountStandingChargeId,\n    discount.CreatedOnlineDiscount.netDiscount,\n    DATE_FROM_UNIX_DATE(discount.CreatedOnlineDiscount.discountDay) AS discountDay,\n    kafkaData.topic,\n    kafkaData.partition,\n    kafkaData.offset,\n    kafkaData.insertTime,\n    PARTITIONTIME\nFROM dedupe\nWHERE \n  RN = 1"},"data-engineering-prod:raw_orex_secure.orex_statement_uploaded":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.orex_statement_uploaded","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_statement_uploaded","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/orex_statement_uploaded","table_id":"orex_statement_uploaded","time_partitioning":null,"view_query":"select coalesce(unionRecord.StatementUploaded.metadata, unionRecord.FinalSupplyPointStatementUploaded.metadata, unionRecord.FinalAccountStatementUploaded.metadata) as universal_metadata,\n       *\nfrom `data-engineering-prod.landing_orex_secure.orex_statement_uploaded_v1`"},"data-engineering-prod:raw_orex_secure.pete_grace_reads":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.pete_grace_reads","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/pete_grace_reads","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/pete_grace_reads","table_id":"pete_grace_reads","time_partitioning":null,"view_query":"with cte_simplified_readings as\n(\n  select cast(value.ElectricityMidnightSnapshotReadingEvent.snapshotTime as date) as snapshotDate,\n         value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan as mpxn,\n         r.reading\n  from `data-engineering-prod.raw_andromeda_secure.rac_msd_simplified` s,\n  unnest(value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers) r\n  union all\n  select cast(value.GasMidnightSnapshotReadingEvent.snapshotTime as date) as snapshotDate,\n         value.GasMidnightSnapshotReadingEvent.mprn as mpxn,\n         value.GasMidnightSnapshotReadingEvent.gasVolume as reading\n  from `data-engineering-prod.raw_andromeda_secure.rac_msd_simplified` s\n)\nselect cc.serviceAccountId, cc.mpxn, cm.startDate, cm.endDate, r.snapshotDate, r.reading\nfrom `data-engineering-prod.raw_orex_secure.orex_customer_contract` cc\ninner join `data-engineering-prod.product_andromeda_secure.charge_mandates` cm on cc.energyContractId = cm.contractId\ninner join cte_simplified_readings r on cm.mpxn = r.mpxn\nwhere cc.serviceAccountId = '6159461-v1-70D11B80'\n  and ((r.snapshotDate between cm.startDate and cm.endDate AND EXTRACT(DAY FROM r.snapshotDate) = 1)\n     OR r.snapshotDate = cm.startDate\n     or r.snapshotDate = date_add(cm.endDate, interval 1 DAY))\norder by snapshotDate"},"data-engineering-prod:raw_orex_secure.report_transactions":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.report_transactions","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/report_transactions","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/report_transactions","table_id":"report_transactions","time_partitioning":null,"view_query":"select * from `data-engineering-prod.product_orion_secure.report_transactions_v1`"},"data-engineering-prod:raw_orex_secure.results_20180926_093508":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.results_20180926_093508","location":"EU","num_bytes":937665,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/results_20180926_093508","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/results_20180926_093508","table_id":"results_20180926_093508","time_partitioning":null,"view_query":null},"data-engineering-prod:raw_orex_secure.temp_rac_msd_simplified_01":{"clustering_fields":null,"dataset_id":"raw_orex_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orex_secure.temp_rac_msd_simplified_01","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/temp_rac_msd_simplified_01","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orex_secure\/tables\/temp_rac_msd_simplified_01","table_id":"temp_rac_msd_simplified_01","time_partitioning":null,"view_query":"SELECT\n  *\nFROM (\n  SELECT\n    CAST(FORMAT_DATETIME(\"%d\",\n        DATETIME(value.ElectricityMidnightSnapshotReadingEvent.snapshotTime)) AS STRING) AS Day,\n    CAST(FORMAT_DATETIME(\"%m\",\n        DATETIME(value.ElectricityMidnightSnapshotReadingEvent.snapshotTime)) AS STRING) AS Month,\n    value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan AS MPAN,\n    value.ElectricityMidnightSnapshotReadingEvent.msn AS MSN,\n    r.reading AS Reading\n  FROM\n    `data-engineering-prod.raw_andromeda_secure.rac_msd_simplified`,\n    UNNEST(value.ElectricityMidnightSnapshotReadingEvent.electricityImport.registers) AS r\n  WHERE\n    value.ElectricityMidnightSnapshotReadingEvent.electricityImport.mpan IS NOT NULL ) t"},"data-engineering-prod:raw_orion_migration_secure.action_log_exceptions":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.action_log_exceptions","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/action_log_exceptions","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/action_log_exceptions","table_id":"action_log_exceptions","time_partitioning":null,"view_query":"select PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       Exception_Area,\n       cast(Account_No as String) as Account_No,\n       Description,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_exceptions_sheet`\nUNION DISTINCT\nselect PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       Exception_Area,\n       cast(Account_No as String) as Account_No,\n       Description,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_exceptions_archive_1`"},"data-engineering-prod:raw_orion_migration_secure.action_log_tasks":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.action_log_tasks","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/action_log_tasks","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/action_log_tasks","table_id":"action_log_tasks","time_partitioning":null,"view_query":"select PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_sheet`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_reversal_tasks_sheet`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_1`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_2`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_3`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_4`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_5`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_6`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_7`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_8`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_tasks_archive_9`\nunion distinct\nselect PARSE_DATE('%d\/%m\/%Y', Date_Occurred) as Date_Occurred,\n       PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       cast(cast(Account_No as int64) as String) as Account_No,\n       Lifecycle_Journey,\n       Trigger,\n       Task,\n       PARSE_DATE('%d\/%m\/%Y', Due_Date) as Due_Date,\n       Owner,\n       Status,\n       PARSE_DATE('%d\/%m\/%Y', Date_Resolved) as Date_Resolved\nfrom `data-engineering-prod.landing_orion_migration_secure.action_log_reversal_tasks_archive_1`"},"data-engineering-prod:raw_orion_migration_secure.dd_setup_requests":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.dd_setup_requests","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/dd_setup_requests","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/dd_setup_requests","table_id":"dd_setup_requests","time_partitioning":null,"view_query":"select PARSE_DATETIME('%d\/%m\/%Y %H:%M:%S', Request_Timestamp) as Request_Timestamp,\n       cast(Account_No as String) as Account_No,\n       New_DD_Amount,\n       cast(New_DD_Day_Of_Month as INT64) as New_DD_Day_Of_Month,\n       SAFE.PARSE_DATE('%d\/%m\/%Y', Actioned_Date) as Actioned_Date\nfrom `data-engineering-prod.landing_orion_migration_secure.dd_setup_requests_sheet`"},"data-engineering-prod:raw_orion_migration_secure.gas_read_disputes_worklist":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.gas_read_disputes_worklist","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/gas_read_disputes_worklist","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/gas_read_disputes_worklist","table_id":"gas_read_disputes_worklist","time_partitioning":null,"view_query":"select MPXN,\n       case\n        when Disputed_Read_Date like '%-%' then SAFE.PARSE_DATE('%Y-%m-%d', Disputed_Read_Date)\n        else SAFE.PARSE_DATE('%d\/%m\/%Y', Disputed_Read_Date)\n       end as Disputed_Read_Date,\n       Pre_SSD_MEX,\n       cast(Agreed_Outside_DRS_Read as int64) as Agreed_Outside_DRS_Read\nfrom `data-engineering-prod.landing_orion_migration_secure.gas_read_disputes_worklist_sheet`"},"data-engineering-prod:raw_orion_migration_secure.manual_process_snapshots":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.manual_process_snapshots","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/manual_process_snapshots","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/manual_process_snapshots","table_id":"manual_process_snapshots","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_orion_migration_secure.manual_process_snapshots`"},"data-engineering-prod:raw_orion_migration_secure.manual_processes_static_data":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.manual_processes_static_data","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/manual_processes_static_data","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/manual_processes_static_data","table_id":"manual_processes_static_data","time_partitioning":null,"view_query":"select cast(Task_ID as int64) as Task_ID,\n       Task_Name,\n       Q1_Roadmap,\n       Worked_By,\n       Product,\n       Journey,\n       PARSE_DATE('%d\/%m\/%Y', First_Applied_Date) as First_Applied_Date,\n       cast(Weekly_Volume as numeric) as Weekly_Volume\nfrom `data-engineering-prod.landing_orion_migration_secure.manual_processes_static_data_sheet` "},"data-engineering-prod:raw_orion_migration_secure.manual_processes_variable_data":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.manual_processes_variable_data","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/manual_processes_variable_data","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/manual_processes_variable_data","table_id":"manual_processes_variable_data","time_partitioning":null,"view_query":"select cast(Task_ID as int64) as Task_ID,\n       Task_Name,\n       cast(Time_Taken as numeric) as Time_Taken,\n       cast(Proportion_Required_For as numeric) as Proportion_Required_For\nfrom `data-engineering-prod.landing_orion_migration_secure.manual_processes_variable_data_sheet` "},"data-engineering-prod:raw_orion_migration_secure.move_out_requests":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.move_out_requests","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/move_out_requests","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/move_out_requests","table_id":"move_out_requests","time_partitioning":null,"view_query":"select PARSE_DATETIME('%d\/%m\/%Y %H:%M:%S', Request_Timestamp) as Request_Timestamp,\n       cast(Account_No as string) as Account_No,\n       Past_Or_Future,\n       PARSE_DATE('%d\/%m\/%Y', Move_Out_Date) as Move_Out_Date,\n       PARSE_DATE('%d\/%m\/%Y', Tenancy_End_Date) as Tenancy_End_Date\nfrom `data-engineering-prod.landing_orion_migration_secure.move_out_requests_sheet`"},"data-engineering-prod:raw_orion_migration_secure.probate_responses":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.probate_responses","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/probate_responses","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/probate_responses","table_id":"probate_responses","time_partitioning":null,"view_query":"select *\nfrom `data-engineering-prod.landing_orion_migration_secure.probate_responses_sheet`"},"data-engineering-prod:raw_orion_migration_secure.refix_requests":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.refix_requests","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/refix_requests","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/refix_requests","table_id":"refix_requests","time_partitioning":null,"view_query":"select SAFE.PARSE_DATETIME('%d\/%m\/%Y %H:%M:%S', Request_Timestamp) as Request_Timestamp,\n       cast(Account_No as String) as Account_No,\n       SAFE.PARSE_DATE('%d\/%m\/%Y', New_Contract_Start_Date) as New_Contract_Start_Date,\n       Fuels_To_Renew,\n       Plan_Name\nfrom `data-engineering-prod.landing_orion_migration_secure.refix_requests_sheet`"},"data-engineering-prod:raw_orion_migration_secure.refund_requests":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.refund_requests","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/refund_requests","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/refund_requests","table_id":"refund_requests","time_partitioning":null,"view_query":"select PARSE_DATETIME('%d\/%m\/%Y %H:%M:%S', Request_Timestamp) as Request_Timestamp,\n       cast(Account_No as String) as Account_No,\n       Refund_Amount,\n       PARSE_DATE('%d\/%m\/%Y', Payment_Date) as Payment_Date,\n       Orion_Transaction_ID\nfrom `data-engineering-prod.landing_orion_migration_secure.refund_requests_sheet`"},"data-engineering-prod:raw_orion_migration_secure.reversal_requests":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.reversal_requests","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/reversal_requests","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/reversal_requests","table_id":"reversal_requests","time_partitioning":null,"view_query":"select PARSE_DATE('%d\/%m\/%Y', Date_Recorded) as Date_Recorded,\n       Account_No Account_No,\n       Reason_Type,\n       Unsupported_Feature\nfrom `data-engineering-prod.landing_orion_migration_secure.reversal_requests_sheet_v2`"},"data-engineering-prod:raw_orion_migration_secure.secondary_contact_requests":{"clustering_fields":null,"dataset_id":"raw_orion_migration_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_migration_secure.secondary_contact_requests","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/secondary_contact_requests","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_migration_secure\/tables\/secondary_contact_requests","table_id":"secondary_contact_requests","time_partitioning":null,"view_query":"select PARSE_DATETIME('%d\/%m\/%Y %H:%M:%S', Request_Timestamp) as Request_Timestamp,\n       cast(Account_No as String) as Account_No\nfrom `data-engineering-prod.landing_orion_migration_secure.secondary_contact_requests_sheet`"},"data-engineering-prod:raw_orion_secure.gsop_failed_refunds":{"clustering_fields":null,"dataset_id":"raw_orion_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_orion_secure.gsop_failed_refunds","location":"EU","num_bytes":11524,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_orion_secure\/tables\/gsop_failed_refunds","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_orion_secure\/tables\/gsop_failed_refunds","table_id":"gsop_failed_refunds","time_partitioning":null,"view_query":null},"data-engineering-prod:raw_pace_secure.pace_loss_refund":{"clustering_fields":null,"dataset_id":"raw_pace_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_pace_secure.pace_loss_refund","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_pace_secure\/tables\/pace_loss_refund","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_pace_secure\/tables\/pace_loss_refund","table_id":"pace_loss_refund","time_partitioning":null,"view_query":"SELECT * \nFROM `data-engineering-prod.landing_pace_secure.pace_loss_refund_v1`"},"data-engineering-prod:raw_payments_secure.payments_card_paymentExecuted":{"clustering_fields":null,"dataset_id":"raw_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_payments_secure.payments_card_paymentExecuted","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_card_paymentExecuted","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_card_paymentExecuted","table_id":"payments_card_paymentExecuted","time_partitioning":null,"view_query":"SELECT c.transactionId\n      ,c.serviceAccountId \n      ,c.ownerId \n      ,c.amount \n      ,c.paymentTakenDate \n      ,c.lastFourDigits \n      ,c.sourceSystem \n      ,c.metadata.createdAt \n      ,c.metadata.eventId \n      ,c.metadata.traceToken \n      ,c.kafkaData\n      ,c.PARTITIONTIME\n      ,'authorised' as AuthorisedStatus\n      ,NULL as OtherStatus\nFROM `data-engineering-prod.landing_payments_secure.payments_card_paymentExecuted_v1` c\nUNION ALL\nSELECT p.transactionReference \n      ,p.clientReference \n      ,NULL as owner\n      ,p.amountInPence \n      ,p.paymentRequestedAt \n      ,p.status.Authorised.cardLastFourDigits\n      ,NULL as sourceSystem\n      ,p.metadata.createdAt \n      ,p.metadata.eventId \n      ,p.metadata.traceToken \n      ,p.kafkaData\n      ,p.PARTITIONTIME \n      ,p.status.Authorised.statusName as authorisedStatus\n      ,p.status.Other.statusName \nFROM `data-engineering-prod.landing_payments_secure.payments_platform_card_payment_event_orion_v1` p"},"data-engineering-prod:raw_payments_secure.payments_mandateEvent":{"clustering_fields":null,"dataset_id":"raw_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_payments_secure.payments_mandateEvent","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_mandateEvent","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_mandateEvent","table_id":"payments_mandateEvent","time_partitioning":null,"view_query":"With dd_mandate AS\n(SELECT serviceAccountId, \nmandateId, \nobfuscatedAccountNo, \nbankName, \nreference,\nDATETIME(statusDateTime) as statusDateTime,\nstatus,  \nnull as statusOrigin,\nnull as statusReason,\nmetadata, \nmetadata.traceToken, \nmetadata.createdAt, \nmetadata.eventId\nFROM `data-engineering-prod.landing_payments_secure.payments_mandateEvent_updated_v2`\nUnion All\nSELECT serviceAccountId, \nmandateId, \nobfuscatedAccountNo, \nbankName, \nreference, \nCAST(statusDateTime as datetime) as statusDateTime,\nstatus, \nstatusOrigin,\nstatusReason,\nmetadata, \nmetadata.traceToken, \nmetadata.createdAt, \nmetadata.eventId\nFROM `data-engineering-prod.landing_payments_secure.payments_mandateEvent_updated_v3`\n)\nSelect *\n,row_number() over (partition by eventId order by createdAt desc) pos\nFrom dd_mandate"},"data-engineering-prod:raw_payments_secure.payments_paymentEvent":{"clustering_fields":null,"dataset_id":"raw_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_payments_secure.payments_paymentEvent","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_paymentEvent","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_paymentEvent","table_id":"payments_paymentEvent","time_partitioning":null,"view_query":"With dd_payment AS (\n    SELECT transactionId\n          ,SPLIT(serviceAccountId,'-')[OFFSET(0)] as serviceAccountID\n          ,serviceaccountid as serviceAccountID_Raw\n          ,ownerID\n          ,mandateID\n          ,subscriptionID\n          ,amount\n          ,chargeDate\n          ,status \n          ,statusOrigin\n          ,statusReason\n          ,statusDateTime\n          ,metadata.traceToken \n          ,metadata.createdAt \n          ,metadata.eventId \n          ,kafkaData.topic\n          ,kafkaData.partition \n          ,kafkaData.offset \n          ,kafkaData.insertTime\n          ,PARTITIONTIME\n    FROM `data-engineering-prod.landing_payments_secure.payments_paymentEvent_updated_v5`\n    \n    UNION ALL\n    \n    SELECT transactionId\n          ,SUBSTR(serviceaccountid,1,7) as serviceAccountID\n          ,serviceaccountid as serviceAccountID_Raw\n          ,null as OwnerID\n          ,mandateID\n          ,subscriptionID\n          ,amount\n          ,chargeDate\n          ,status \n          ,statusOrigin\n          ,statusReason\n          ,statusDateTime\n          ,metadata.traceToken \n          ,metadata.createdAt \n          ,metadata.eventId \n          ,kafkaData.topic\n          ,kafkaData.partition \n          ,kafkaData.offset \n          ,kafkaData.insertTime\n          ,PARTITIONTIME\n    FROM `data-engineering-prod.landing_payments_secure.payments_paymentEvent_updated_v4`\n    \n    UNION ALL\n    \n    SELECT transactionId\n          ,SPLIT(serviceAccountId,'-')[OFFSET(0)] as serviceAccountID\n          ,serviceaccountid as serviceAccountID_Raw\n          ,null as OwnerID\n          ,mandateID\n          ,subscriptionID\n          ,amount\n          ,chargeDate\n          ,status\n          ,null as statusOrigin\n          ,null as statusReason\n          ,statusDateTime\n          ,metadata.traceToken \n          ,metadata.createdAt \n          ,metadata.eventId \n          ,kafkaData.topic\n          ,kafkaData.partition \n          ,kafkaData.offset \n          ,kafkaData.insertTime\n          ,PARTITIONTIME\n    FROM `data-engineering-prod.landing_payments_secure.payments_paymentEvent_updated_v3`\n    \n    UNION ALL\n    \n    SELECT transactionId\n          ,SPLIT(serviceAccountId,'-')[OFFSET(0)] as serviceAccountID\n          ,serviceaccountid as serviceAccountID_Raw\n          ,null as OwnerID\n          ,mandateID\n          ,null as subscriptionID\n          ,amount\n          ,chargeDate\n          ,status\n          ,null as statusOrigin\n          ,null as statusReason\n          ,statusDateTime\n          ,metadata.traceToken \n          ,metadata.createdAt\n          ,metadata.eventId \n          ,kafkaData.topic\n          ,kafkaData.partition \n          ,kafkaData.offset \n          ,kafkaData.insertTime\n          ,PARTITIONTIME\n    FROM `data-engineering-prod.landing_payments.payments_paymentEvent_updated_v2`\n),\n\nDD_payment_rows AS (\n    SELECT *\n         ,ROW_NUMBER() OVER (PARTITION BY eventId ORDER BY topic DESC) pos\n    FROM DD_payment\n)\n\nSELECT * EXCEPT(pos)\nFROM DD_payment_rows\nWHERE pos = 1 "},"data-engineering-prod:raw_payments_secure.payments_refund_statusUpdated":{"clustering_fields":null,"dataset_id":"raw_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_payments_secure.payments_refund_statusUpdated","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_refund_statusUpdated","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_refund_statusUpdated","table_id":"payments_refund_statusUpdated","time_partitioning":null,"view_query":"WITH cte_refund_union as (\n  SELECT metadata,\n         transactionId,\n         serviceAccountId,\n         ownerId,\n         amount,\n         COALESCE(statusUpdate.SuccessUpdate.status, statusUpdate.FailedUpdate.status) as status,\n         sortCode,\n         accountNumberLastDigits,\n         statusUpdate.SuccessUpdate.refundExpectedDate as refundExpectedDate,\n         kafkaData,\n         PARTITIONTIME,\n         statusUpdate.FailedUpdate.errorCode as errorCode,\n         statusUpdate.FailedUpdate.reason as reason    \n  FROM `data-engineering-prod.landing_payments_secure.payments_refund_statusUpdated_v3`\n  \n  union all\n  \n  select *,\n         null as errorCode,\n         null as reason\n  FROM `data-engineering-prod.landing_payments_secure.payments_refund_statusUpdated_v2`\n),\n\ncte_refund_event_dedupe as (\n  select *,\n         --row_number() over (partition by metadata.eventId order by kafkaData.topic desc) as event_dedupe_rownum --OLD LOGIC\n          ROW_NUMBER() OVER(PARTITION BY split(metadata.eventId ,\"-D\")[OFFSET(0)] ORDER BY kafkaData.topic desc, metadata.createdAt ASC) event_dedupe_rownum --New Logic implemented by Alex Ashford - Temp fix to remove duplicate events while PaymentPlatform come up with a better long term fix\n  from cte_refund_union u\n)\n\nselect * except(event_dedupe_rownum)\nfrom cte_refund_event_dedupe\nwhere event_dedupe_rownum = 1"},"data-engineering-prod:raw_payments_secure.payments_subscriptionEvent":{"clustering_fields":null,"dataset_id":"raw_payments_secure","encryption_configuration":null,"expires":null,"friendly_name":null,"full_table_id":"data-engineering-prod:raw_payments_secure.payments_subscriptionEvent","location":"EU","num_bytes":0,"partition_expiration":null,"path":"\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_subscriptionEvent","range_partitioning":null,"require_partition_filter":null,"self_link":"https:\/\/bigquery.googleapis.com\/bigquery\/v2\/projects\/data-engineering-prod\/datasets\/raw_payments_secure\/tables\/payments_subscriptionEvent","table_id":"payments_subscriptionEvent","time_partitioning":null,"view_query":"With subscription AS (\n    SELECT SPLIT(serviceAccountId,'-')[OFFSET(0)] as serviceAccountID\n          , subscriptionId\n          , mandateId\n          , amount\n          , dayOfMonth\n          , status\n          , statusDateTime\n          , upcomingPayment\n          , metadata.traceToken\n          , metadata.createdAt\n          , metadata.eventId\n          , kafkaData.topic\n          , kafkaData.partition\n          , kafkaData.offset\n          , kafkaData.insertTime\nFROM `data-engineering-prod.landing_payments_secure.payments_subscriptionEvent_updated_v4`\n\nUNION ALL\n\nSELECT SPLIT(serviceAccountId,'-')[OFFSET(0)] as serviceAccountID\n          , subscriptionId\n          , mandateId\n          , amount\n          , dayOfMonth\n          , status\n          , statusDateTime\n          , upcomingPayment\n          , metadata.traceToken\n          , metadata.createdAt\n          , metadata.eventId\n          , kafkaData.topic\n          , kafkaData.partition\n          , kafkaData.offset\n          , kafkaData.insertTime\nFROM `data-engineering-prod.landing_payments_secure.payments_subscriptionEvent_updated_v3`\n\nUNION ALL\n\nSELECT SPLIT(serviceAccountId,'-')[OFFSET(0)] as serviceAccountID\n      , subscriptionId\n      , mandateId\n      , amount\n      , dayOfMonth\n      , status\n      , statusDateTime\n      , null as upcomingPayment\n      , metadata.traceToken\n      , metadata.createdAt\n      , metadata.eventId\n      , kafkaData.topic\n      , kafkaData.partition\n      , kafkaData.offset\n      , kafkaData.insertTime\nFROM `data-engineering-prod.landing_payments.payments_subscriptionEvent_updated_v2`\n),\n\nsubscription_rows AS (\n    SELECT *\n          ,row_number() over (partition by eventId order by topic desc) pos\n    FROM Subscription\n)\n\nSELECT * EXCEPT(pos)\nFROM subscription_rows\nWHERE pos = 1 "}}}